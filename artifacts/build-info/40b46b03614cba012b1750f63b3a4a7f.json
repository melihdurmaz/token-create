{"id":"40b46b03614cba012b1750f63b3a4a7f","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC5267.sol)\n\npragma solidity >=0.4.16;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /// @inheritdoc IERC20Permit\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /// @inheritdoc IERC20Permit\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /// @inheritdoc IERC20Permit\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /// @inheritdoc IERC5267\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/AIDEFIToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\n\n\ncontract AIDEFIToken is ERC20Permit {\n    string private _version;\n\n    constructor(uint256 initialSupply, string memory version_) ERC20(\"AIDEFI\", \"AIDEFI\") ERC20Permit(\"AIDEFI\") {\n        _version = version_;\n        _mint(msg.sender, initialSupply * 10 ** decimals());\n    }\n\n    function version() public view returns (string memory) {\n        return _version;\n    }\n}\n"},"contracts/Lock.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.28;\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\n\ncontract Lock {\n    uint public unlockTime;\n    address payable public owner;\n\n    event Withdrawal(uint amount, uint when);\n\n    constructor(uint _unlockTime) payable {\n        require(\n            block.timestamp < _unlockTime,\n            \"Unlock time should be in the future\"\n        );\n\n        unlockTime = _unlockTime;\n        owner = payable(msg.sender);\n    }\n\n    function withdraw() public {\n        // Uncomment this line, and the import of \"hardhat/console.sol\", to print a log in your terminal\n        // console.log(\"Unlock time is %o and block timestamp is %o\", unlockTime, block.timestamp);\n\n        require(block.timestamp >= unlockTime, \"You can't withdraw yet\");\n        require(msg.sender == owner, \"You aren't the owner\");\n\n        emit Withdrawal(address(this).balance, block.timestamp);\n\n        owner.transfer(address(this).balance);\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[24]},"id":25,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"107:25:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":24,"linearizedBaseContracts":[24],"name":"IERC5267","nameLocation":"144:8:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"159:84:0","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":4,"name":"EIP712DomainChanged","nameLocation":"254:19:0","nodeType":"EventDefinition","parameters":{"id":3,"nodeType":"ParameterList","parameters":[],"src":"273:2:0"},"src":"248:28:0"},{"documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"282:140:0","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":23,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"436:12:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"448:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"fields","nameLocation":"518:6:0","nodeType":"VariableDeclaration","scope":23,"src":"511:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":7,"name":"bytes1","nodeType":"ElementaryTypeName","src":"511:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"name","nameLocation":"552:4:0","nodeType":"VariableDeclaration","scope":23,"src":"538:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9,"name":"string","nodeType":"ElementaryTypeName","src":"538:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12,"mutability":"mutable","name":"version","nameLocation":"584:7:0","nodeType":"VariableDeclaration","scope":23,"src":"570:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11,"name":"string","nodeType":"ElementaryTypeName","src":"570:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"chainId","nameLocation":"613:7:0","nodeType":"VariableDeclaration","scope":23,"src":"605:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"verifyingContract","nameLocation":"642:17:0","nodeType":"VariableDeclaration","scope":23,"src":"634:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"salt","nameLocation":"681:4:0","nodeType":"VariableDeclaration","scope":23,"src":"673:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"673:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"extensions","nameLocation":"716:10:0","nodeType":"VariableDeclaration","scope":23,"src":"699:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":19,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":20,"nodeType":"ArrayTypeName","src":"699:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"497:239:0"},"scope":24,"src":"427:310:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":25,"src":"134:605:0","usedErrors":[],"usedEvents":[4]}],"src":"107:633:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[161],"IERC20Errors":[66],"IERC721Errors":[114]},"id":162,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":26,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":66,"linearizedBaseContracts":[66],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":36,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":36,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":29,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":36,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":36,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":41,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":41,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":46,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":46,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":55,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":55,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":55,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":55,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":60,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":60,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":57,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":65,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":65,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":162,"src":"280:1764:1","usedErrors":[36,41,46,55,60,65],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":114,"linearizedBaseContracts":[114],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":72,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":72,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":77,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":77,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":74,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":78,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":86,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":86,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":79,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":82,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":86,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":86,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":83,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":91,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":91,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":88,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":96,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":96,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":97,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":103,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":103,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":101,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":103,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":104,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":108,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":108,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":109,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":113,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":113,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":162,"src":"2190:2092:1","usedErrors":[72,77,86,91,96,103,108,113],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":161,"linearizedBaseContracts":[161],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":126,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":126,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":126,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":122,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":126,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":124,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":126,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":131,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":131,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":136,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":136,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":143,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":143,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":141,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":143,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":144,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":148,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":148,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":153,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":153,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":160,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":160,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":160,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":162,"src":"4430:2107:1","usedErrors":[126,131,136,143,148,153,160],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1000],"ERC20":[676],"IERC20":[754],"IERC20Errors":[66],"IERC20Metadata":[934]},"id":677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":163,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":755,"src":"131:36:2","symbolAliases":[{"foreign":{"id":164,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":167,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":935,"src":"168:63:2","symbolAliases":[{"foreign":{"id":166,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"176:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":1001,"src":"232:48:2","symbolAliases":[{"foreign":{"id":168,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"240:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":162,"src":"281:65:2","symbolAliases":[{"foreign":{"id":170,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"289:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":173,"name":"Context","nameLocations":["1133:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1000,"src":"1133:7:2"},"id":174,"nodeType":"InheritanceSpecifier","src":"1133:7:2"},{"baseName":{"id":175,"name":"IERC20","nameLocations":["1142:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":754,"src":"1142:6:2"},"id":176,"nodeType":"InheritanceSpecifier","src":"1142:6:2"},{"baseName":{"id":177,"name":"IERC20Metadata","nameLocations":["1150:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":934,"src":"1150:14:2"},"id":178,"nodeType":"InheritanceSpecifier","src":"1150:14:2"},{"baseName":{"id":179,"name":"IERC20Errors","nameLocations":["1166:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"1166:12:2"},"id":180,"nodeType":"InheritanceSpecifier","src":"1166:12:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"348:757:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":676,"linearizedBaseContracts":[676,66,934,754,1000],"name":"ERC20","nameLocation":"1124:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":184,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:2","nodeType":"VariableDeclaration","scope":676,"src":"1185:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":183,"keyName":"account","keyNameLocation":"1201:7:2","keyType":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":182,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":190,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:2","nodeType":"VariableDeclaration","scope":676,"src":"1245:83:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":189,"keyName":"account","keyNameLocation":"1261:7:2","keyType":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":188,"keyName":"spender","keyNameLocation":"1288:7:2","keyType":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":192,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:2","nodeType":"VariableDeclaration","scope":676,"src":"1335:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":194,"mutability":"mutable","name":"_name","nameLocation":"1385:5:2","nodeType":"VariableDeclaration","scope":676,"src":"1370:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":193,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":196,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:2","nodeType":"VariableDeclaration","scope":676,"src":"1396:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":195,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":212,"nodeType":"Block","src":"1638:57:2","statements":[{"expression":{"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":204,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1648:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":205,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"1656:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":207,"nodeType":"ExpressionStatement","src":"1648:13:2"},{"expression":{"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":208,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"1671:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":209,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"1681:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":211,"nodeType":"ExpressionStatement","src":"1671:17:2"}]},"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"1425:152:2","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":213,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"name_","nameLocation":"1608:5:2","nodeType":"VariableDeclaration","scope":213,"src":"1594:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":198,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:2","nodeType":"VariableDeclaration","scope":213,"src":"1615:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:2"},"returnParameters":{"id":203,"nodeType":"ParameterList","parameters":[],"src":"1638:0:2"},"scope":676,"src":"1582:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[921],"body":{"id":221,"nodeType":"Block","src":"1820:29:2","statements":[{"expression":{"id":219,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1837:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":218,"id":220,"nodeType":"Return","src":"1830:12:2"}]},"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"1701:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":222,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:2","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"1773:2:2"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":222,"src":"1805:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":216,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:2"},"scope":676,"src":"1760:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[927],"body":{"id":230,"nodeType":"Block","src":"2024:31:2","statements":[{"expression":{"id":228,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"2041:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":227,"id":229,"nodeType":"Return","src":"2034:14:2"}]},"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"1855:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":231,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:2","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[],"src":"1977:2:2"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":231,"src":"2009:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":225,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:2"},"scope":676,"src":"1962:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[933],"body":{"id":239,"nodeType":"Block","src":"2744:26:2","statements":[{"expression":{"hexValue":"3138","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":236,"id":238,"nodeType":"Return","src":"2754:9:2"}]},"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"2061:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":240,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:2","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[],"src":"2705:2:2"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":240,"src":"2737:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":234,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:2"},"scope":676,"src":"2688:82:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[703],"body":{"id":248,"nodeType":"Block","src":"2864:36:2","statements":[{"expression":{"id":246,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2881:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":245,"id":247,"nodeType":"Return","src":"2874:19:2"}]},"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"2776:22:2","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":249,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2812:11:2","nodeType":"FunctionDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"2823:2:2"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":249,"src":"2855:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:9:2"},"scope":676,"src":"2803:97:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[711],"body":{"id":261,"nodeType":"Block","src":"3007:42:2","statements":[{"expression":{"baseExpression":{"id":257,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"3024:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":259,"indexExpression":{"id":258,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"3034:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3024:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":256,"id":260,"nodeType":"Return","src":"3017:25:2"}]},"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"2906:22:2","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":262,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2942:9:2","nodeType":"FunctionDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"account","nameLocation":"2960:7:2","nodeType":"VariableDeclaration","scope":262,"src":"2952:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2951:17:2"},"returnParameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":262,"src":"2998:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2997:9:2"},"scope":676,"src":"2933:116:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[721],"body":{"id":285,"nodeType":"Block","src":"3319:103:2","statements":[{"assignments":[273],"declarations":[{"constant":false,"id":273,"mutability":"mutable","name":"owner","nameLocation":"3337:5:2","nodeType":"VariableDeclaration","scope":285,"src":"3329:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":276,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":274,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"3345:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3329:28:2"},{"expression":{"arguments":[{"id":278,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"3377:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":279,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"3384:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"3388:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":277,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"3367:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":282,"nodeType":"ExpressionStatement","src":"3367:27:2"},{"expression":{"hexValue":"74727565","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3411:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":271,"id":284,"nodeType":"Return","src":"3404:11:2"}]},"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"3055:184:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":286,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3253:8:2","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"to","nameLocation":"3270:2:2","nodeType":"VariableDeclaration","scope":286,"src":"3262:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"value","nameLocation":"3282:5:2","nodeType":"VariableDeclaration","scope":286,"src":"3274:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"3274:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3261:27:2"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":286,"src":"3313:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":269,"name":"bool","nodeType":"ElementaryTypeName","src":"3313:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3312:6:2"},"scope":676,"src":"3244:178:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[731],"body":{"id":302,"nodeType":"Block","src":"3544:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":296,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"3561:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":298,"indexExpression":{"id":297,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"3573:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":300,"indexExpression":{"id":299,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"3580:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":295,"id":301,"nodeType":"Return","src":"3554:34:2"}]},"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"3428:22:2","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":303,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3464:9:2","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"3482:5:2","nodeType":"VariableDeclaration","scope":303,"src":"3474:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"spender","nameLocation":"3497:7:2","nodeType":"VariableDeclaration","scope":303,"src":"3489:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3473:32:2"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":303,"src":"3535:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3534:9:2"},"scope":676,"src":"3455:140:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[741],"body":{"id":326,"nodeType":"Block","src":"3981:107:2","statements":[{"assignments":[314],"declarations":[{"constant":false,"id":314,"mutability":"mutable","name":"owner","nameLocation":"3999:5:2","nodeType":"VariableDeclaration","scope":326,"src":"3991:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":317,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":315,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"4007:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3991:28:2"},{"expression":{"arguments":[{"id":319,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"4038:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":320,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"4045:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"4054:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":318,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[567,627],"referencedDeclaration":567,"src":"4029:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":323,"nodeType":"ExpressionStatement","src":"4029:31:2"},{"expression":{"hexValue":"74727565","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4077:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":312,"id":325,"nodeType":"Return","src":"4070:11:2"}]},"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"3601:296:2","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":327,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3911:7:2","nodeType":"FunctionDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"spender","nameLocation":"3927:7:2","nodeType":"VariableDeclaration","scope":327,"src":"3919:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"value","nameLocation":"3944:5:2","nodeType":"VariableDeclaration","scope":327,"src":"3936:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:32:2"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":327,"src":"3975:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":310,"name":"bool","nodeType":"ElementaryTypeName","src":"3975:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3974:6:2"},"scope":676,"src":"3902:186:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[753],"body":{"id":358,"nodeType":"Block","src":"4773:151:2","statements":[{"assignments":[340],"declarations":[{"constant":false,"id":340,"mutability":"mutable","name":"spender","nameLocation":"4791:7:2","nodeType":"VariableDeclaration","scope":358,"src":"4783:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"4783:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":343,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":341,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"4801:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4783:30:2"},{"expression":{"arguments":[{"id":345,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"4839:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":346,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"4845:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"4854:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":344,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"4823:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":349,"nodeType":"ExpressionStatement","src":"4823:37:2"},{"expression":{"arguments":[{"id":351,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"4880:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":352,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"4886:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"4890:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":350,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"4870:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":355,"nodeType":"ExpressionStatement","src":"4870:26:2"},{"expression":{"hexValue":"74727565","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4913:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":338,"id":357,"nodeType":"Return","src":"4906:11:2"}]},"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"4094:581:2","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":359,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4689:12:2","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"from","nameLocation":"4710:4:2","nodeType":"VariableDeclaration","scope":359,"src":"4702:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"4702:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"to","nameLocation":"4724:2:2","nodeType":"VariableDeclaration","scope":359,"src":"4716:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"value","nameLocation":"4736:5:2","nodeType":"VariableDeclaration","scope":359,"src":"4728:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:41:2"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":359,"src":"4767:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":336,"name":"bool","nodeType":"ElementaryTypeName","src":"4767:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4766:6:2"},"scope":676,"src":"4680:244:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":405,"nodeType":"Block","src":"5366:231:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":369,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"5380:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5396:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5388:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:2","typeDescriptions":{}}},"id":373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5380:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":383,"nodeType":"IfStatement","src":"5376:86:2","trueBody":{"id":382,"nodeType":"Block","src":"5400:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5448:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5440:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:2","typeDescriptions":{}}},"id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":375,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"5421:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":381,"nodeType":"RevertStatement","src":"5414:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":384,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"5475:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5489:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5481:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:2","typeDescriptions":{}}},"id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5475:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":398,"nodeType":"IfStatement","src":"5471:86:2","trueBody":{"id":397,"nodeType":"Block","src":"5493:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":391,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:2","typeDescriptions":{}}},"id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":390,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"5514:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":396,"nodeType":"RevertStatement","src":"5507:39:2"}]}},{"expression":{"arguments":[{"id":400,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"5574:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":401,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"5580:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"5584:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":399,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"5566:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":404,"nodeType":"ExpressionStatement","src":"5566:24:2"}]},"documentation":{"id":360,"nodeType":"StructuredDocumentation","src":"4930:362:2","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":406,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5306:9:2","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"mutability":"mutable","name":"from","nameLocation":"5324:4:2","nodeType":"VariableDeclaration","scope":406,"src":"5316:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":361,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"to","nameLocation":"5338:2:2","nodeType":"VariableDeclaration","scope":406,"src":"5330:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":363,"name":"address","nodeType":"ElementaryTypeName","src":"5330:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"value","nameLocation":"5350:5:2","nodeType":"VariableDeclaration","scope":406,"src":"5342:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5315:41:2"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"5366:0:2"},"scope":676,"src":"5297:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":482,"nodeType":"Block","src":"5987:1032:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":416,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"6001:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6009:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"6009:7:2","typeDescriptions":{}}},"id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6001:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":453,"nodeType":"Block","src":"6175:362:2","statements":[{"assignments":[428],"declarations":[{"constant":false,"id":428,"mutability":"mutable","name":"fromBalance","nameLocation":"6197:11:2","nodeType":"VariableDeclaration","scope":453,"src":"6189:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":427,"name":"uint256","nodeType":"ElementaryTypeName","src":"6189:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":432,"initialValue":{"baseExpression":{"id":429,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6211:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":431,"indexExpression":{"id":430,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"6221:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6211:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6189:37:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":433,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"6244:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"6258:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":443,"nodeType":"IfStatement","src":"6240:115:2","trueBody":{"id":442,"nodeType":"Block","src":"6265:90:2","statements":[{"errorCall":{"arguments":[{"id":437,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"6315:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":438,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"6321:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"6334:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":436,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"6290:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":441,"nodeType":"RevertStatement","src":"6283:57:2"}]}},{"id":452,"nodeType":"UncheckedBlock","src":"6368:159:2","statements":[{"expression":{"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":444,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6475:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":446,"indexExpression":{"id":445,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"6485:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"6493:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"6507:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6493:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":451,"nodeType":"ExpressionStatement","src":"6475:37:2"}]}]},"id":454,"nodeType":"IfStatement","src":"5997:540:2","trueBody":{"id":426,"nodeType":"Block","src":"6021:148:2","statements":[{"expression":{"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":422,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6137:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"6153:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":425,"nodeType":"ExpressionStatement","src":"6137:21:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":455,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"6551:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"6557:7:2","typeDescriptions":{}}},"id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6557:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6551:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":474,"nodeType":"Block","src":"6766:206:2","statements":[{"id":473,"nodeType":"UncheckedBlock","src":"6780:182:2","statements":[{"expression":{"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":467,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6925:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":469,"indexExpression":{"id":468,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"6935:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6925:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"6942:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6925:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":472,"nodeType":"ExpressionStatement","src":"6925:22:2"}]}]},"id":475,"nodeType":"IfStatement","src":"6547:425:2","trueBody":{"id":466,"nodeType":"Block","src":"6569:191:2","statements":[{"id":465,"nodeType":"UncheckedBlock","src":"6583:167:2","statements":[{"expression":{"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":461,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6714:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"6730:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6714:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":464,"nodeType":"ExpressionStatement","src":"6714:21:2"}]}]}},{"eventCall":{"arguments":[{"id":477,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"6996:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":478,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"7002:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"7006:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":476,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"6987:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6987:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":481,"nodeType":"EmitStatement","src":"6982:30:2"}]},"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"5603:304:2","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":483,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5921:7:2","nodeType":"FunctionDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"from","nameLocation":"5937:4:2","nodeType":"VariableDeclaration","scope":483,"src":"5929:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"to","nameLocation":"5951:2:2","nodeType":"VariableDeclaration","scope":483,"src":"5943:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"5943:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":413,"mutability":"mutable","name":"value","nameLocation":"5963:5:2","nodeType":"VariableDeclaration","scope":483,"src":"5955:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5928:41:2"},"returnParameters":{"id":415,"nodeType":"ParameterList","parameters":[],"src":"5987:0:2"},"scope":676,"src":"5912:1107:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"7418:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":491,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"7432:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7451:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7443:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"7443:7:2","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7443:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7432:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":505,"nodeType":"IfStatement","src":"7428:91:2","trueBody":{"id":504,"nodeType":"Block","src":"7455:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7505:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7497:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:2","typeDescriptions":{}}},"id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7497:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":497,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"7476:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":503,"nodeType":"RevertStatement","src":"7469:39:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7544:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7536:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:2","typeDescriptions":{}}},"id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7536:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":511,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"7548:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"7557:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":506,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"7528:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7528:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":514,"nodeType":"ExpressionStatement","src":"7528:35:2"}]},"documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"7025:332:2","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":516,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7371:5:2","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"account","nameLocation":"7385:7:2","nodeType":"VariableDeclaration","scope":516,"src":"7377:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"7377:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":488,"mutability":"mutable","name":"value","nameLocation":"7402:5:2","nodeType":"VariableDeclaration","scope":516,"src":"7394:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7376:32:2"},"returnParameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"7418:0:2"},"scope":676,"src":"7362:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":548,"nodeType":"Block","src":"7944:150:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":524,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"7958:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7969:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"7969:7:2","typeDescriptions":{}}},"id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7969:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7958:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":538,"nodeType":"IfStatement","src":"7954:89:2","trueBody":{"id":537,"nodeType":"Block","src":"7981:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8021:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"8021:7:2","typeDescriptions":{}}},"id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"8002:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":536,"nodeType":"RevertStatement","src":"7995:37:2"}]}},{"expression":{"arguments":[{"id":540,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"8060:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8077:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:2","typeDescriptions":{}}},"id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"8081:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":539,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"8052:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":547,"nodeType":"ExpressionStatement","src":"8052:35:2"}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"7576:307:2","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":549,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7897:5:2","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"account","nameLocation":"7911:7:2","nodeType":"VariableDeclaration","scope":549,"src":"7903:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"7903:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"value","nameLocation":"7928:5:2","nodeType":"VariableDeclaration","scope":549,"src":"7920:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7902:32:2"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[],"src":"7944:0:2"},"scope":676,"src":"7888:206:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":566,"nodeType":"Block","src":"8704:54:2","statements":[{"expression":{"arguments":[{"id":560,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"8723:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"8730:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"8739:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8746:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":559,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[567,627],"referencedDeclaration":627,"src":"8714:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8714:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":565,"nodeType":"ExpressionStatement","src":"8714:37:2"}]},"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"8100:525:2","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":567,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8639:8:2","nodeType":"FunctionDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"owner","nameLocation":"8656:5:2","nodeType":"VariableDeclaration","scope":567,"src":"8648:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"spender","nameLocation":"8671:7:2","nodeType":"VariableDeclaration","scope":567,"src":"8663:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"value","nameLocation":"8688:5:2","nodeType":"VariableDeclaration","scope":567,"src":"8680:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"8680:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8647:47:2"},"returnParameters":{"id":558,"nodeType":"ParameterList","parameters":[],"src":"8704:0:2"},"scope":676,"src":"8630:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":626,"nodeType":"Block","src":"9703:334:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"9717:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9726:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:2","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9717:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":593,"nodeType":"IfStatement","src":"9713:89:2","trueBody":{"id":592,"nodeType":"Block","src":"9738:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9788:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"9780:7:2","typeDescriptions":{}}},"id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":585,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"9759:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":591,"nodeType":"RevertStatement","src":"9752:39:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":594,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"9815:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9834:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9826:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":595,"name":"address","nodeType":"ElementaryTypeName","src":"9826:7:2","typeDescriptions":{}}},"id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9826:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9815:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":608,"nodeType":"IfStatement","src":"9811:90:2","trueBody":{"id":607,"nodeType":"Block","src":"9838:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9887:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9879:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"9879:7:2","typeDescriptions":{}}},"id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9879:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":600,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"9859:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9859:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":606,"nodeType":"RevertStatement","src":"9852:38:2"}]}},{"expression":{"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":609,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"9910:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":612,"indexExpression":{"id":610,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"9922:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9910:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":613,"indexExpression":{"id":611,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"9929:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9910:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"9940:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9910:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":616,"nodeType":"ExpressionStatement","src":"9910:35:2"},{"condition":{"id":617,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"9959:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":625,"nodeType":"IfStatement","src":"9955:76:2","trueBody":{"id":624,"nodeType":"Block","src":"9970:61:2","statements":[{"eventCall":{"arguments":[{"id":619,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"9998:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":620,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"10005:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"10014:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":618,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"9989:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":623,"nodeType":"EmitStatement","src":"9984:36:2"}]}}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"8764:836:2","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":627,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9614:8:2","nodeType":"FunctionDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"owner","nameLocation":"9631:5:2","nodeType":"VariableDeclaration","scope":627,"src":"9623:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"9623:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"spender","nameLocation":"9646:7:2","nodeType":"VariableDeclaration","scope":627,"src":"9638:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"value","nameLocation":"9663:5:2","nodeType":"VariableDeclaration","scope":627,"src":"9655:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"emitEvent","nameLocation":"9675:9:2","nodeType":"VariableDeclaration","scope":627,"src":"9670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":575,"name":"bool","nodeType":"ElementaryTypeName","src":"9670:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9622:63:2"},"returnParameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"9703:0:2"},"scope":676,"src":"9605:432:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"10408:387:2","statements":[{"assignments":[638],"declarations":[{"constant":false,"id":638,"mutability":"mutable","name":"currentAllowance","nameLocation":"10426:16:2","nodeType":"VariableDeclaration","scope":674,"src":"10418:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":637,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":643,"initialValue":{"arguments":[{"id":640,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"10455:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":641,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"10462:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":639,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"10445:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10445:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10418:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":644,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"10484:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10508:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"10508:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":645,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10503:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10503:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10517:3:2","memberName":"max","nodeType":"MemberAccess","src":"10503:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10484:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":673,"nodeType":"IfStatement","src":"10480:309:2","trueBody":{"id":672,"nodeType":"Block","src":"10522:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":651,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"10540:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"10559:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"IfStatement","src":"10536:130:2","trueBody":{"id":660,"nodeType":"Block","src":"10566:100:2","statements":[{"errorCall":{"arguments":[{"id":655,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"10618:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":656,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"10627:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"10645:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"10591:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":659,"nodeType":"RevertStatement","src":"10584:67:2"}]}},{"id":671,"nodeType":"UncheckedBlock","src":"10679:100:2","statements":[{"expression":{"arguments":[{"id":663,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"10716:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":664,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"10723:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":665,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"10732:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"10751:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10732:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10758:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":662,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[567,627],"referencedDeclaration":627,"src":"10707:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10707:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"10707:57:2"}]}]}}]},"documentation":{"id":628,"nodeType":"StructuredDocumentation","src":"10043:271:2","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10328:15:2","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"owner","nameLocation":"10352:5:2","nodeType":"VariableDeclaration","scope":675,"src":"10344:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"10344:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":632,"mutability":"mutable","name":"spender","nameLocation":"10367:7:2","nodeType":"VariableDeclaration","scope":675,"src":"10359:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"value","nameLocation":"10384:5:2","nodeType":"VariableDeclaration","scope":675,"src":"10376:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"10376:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10343:47:2"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"10408:0:2"},"scope":676,"src":"10319:476:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":677,"src":"1106:9691:2","usedErrors":[36,41,46,55,60,65],"usedEvents":[688,697]}],"src":"105:10693:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[754]},"id":755,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":678,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"133:71:3","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":754,"linearizedBaseContracts":[754],"name":"IERC20","nameLocation":"215:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"228:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":688,"name":"Transfer","nameLocation":"397:8:3","nodeType":"EventDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:3","nodeType":"VariableDeclaration","scope":688,"src":"406:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":684,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:3","nodeType":"VariableDeclaration","scope":688,"src":"428:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":686,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:3","nodeType":"VariableDeclaration","scope":688,"src":"448:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":685,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:3"},"src":"391:72:3"},{"anonymous":false,"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"469:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":697,"name":"Approval","nameLocation":"628:8:3","nodeType":"EventDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:3","nodeType":"VariableDeclaration","scope":697,"src":"637:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":693,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:3","nodeType":"VariableDeclaration","scope":697,"src":"660:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:3","nodeType":"VariableDeclaration","scope":697,"src":"685:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":694,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:3"},"src":"622:78:3"},{"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"706:65:3","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":703,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:3","nodeType":"FunctionDefinition","parameters":{"id":699,"nodeType":"ParameterList","parameters":[],"src":"796:2:3"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":703,"src":"822:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:3"},"scope":754,"src":"776:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"837:71:3","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":711,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:3","nodeType":"FunctionDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"account","nameLocation":"940:7:3","nodeType":"VariableDeclaration","scope":711,"src":"932:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:3"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":711,"src":"972:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:3"},"scope":754,"src":"913:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"987:213:3","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":721,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:3","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"to","nameLocation":"1231:2:3","nodeType":"VariableDeclaration","scope":721,"src":"1223:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"value","nameLocation":"1243:5:3","nodeType":"VariableDeclaration","scope":721,"src":"1235:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:3"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":721,"src":"1268:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":718,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:3"},"scope":754,"src":"1205:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"1280:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":731,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:3","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"owner","nameLocation":"1576:5:3","nodeType":"VariableDeclaration","scope":731,"src":"1568:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"spender","nameLocation":"1591:7:3","nodeType":"VariableDeclaration","scope":731,"src":"1583:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:3"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":731,"src":"1623:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:3"},"scope":754,"src":"1549:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"1638:667:3","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":741,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:3","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"spender","nameLocation":"2335:7:3","nodeType":"VariableDeclaration","scope":741,"src":"2327:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"value","nameLocation":"2352:5:3","nodeType":"VariableDeclaration","scope":741,"src":"2344:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":735,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:3"},"returnParameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":741,"src":"2377:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":738,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:3"},"scope":754,"src":"2310:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"2389:297:3","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":753,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:3","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"from","nameLocation":"2721:4:3","nodeType":"VariableDeclaration","scope":753,"src":"2713:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"to","nameLocation":"2735:2:3","nodeType":"VariableDeclaration","scope":753,"src":"2727:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"value","nameLocation":"2747:5:3","nodeType":"VariableDeclaration","scope":753,"src":"2739:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:3"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":753,"src":"2772:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":750,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:3"},"scope":754,"src":"2691:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":755,"src":"205:2575:3","usedErrors":[],"usedEvents":[688,697]}],"src":"106:2675:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3211],"EIP712":[3438],"ERC20":[676],"ERC20Permit":[908],"IERC20Permit":[970],"Nonces":[1068]},"id":909,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":756,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":758,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":909,"sourceUnit":971,"src":"148:48:4","symbolAliases":[{"foreign":{"id":757,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"156:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":760,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":909,"sourceUnit":677,"src":"197:35:4","symbolAliases":[{"foreign":{"id":759,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"205:5:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":762,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":909,"sourceUnit":3212,"src":"233:60:4","symbolAliases":[{"foreign":{"id":761,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"241:5:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":764,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":909,"sourceUnit":3439,"src":"294:62:4","symbolAliases":[{"foreign":{"id":763,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"302:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":766,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":909,"sourceUnit":1069,"src":"357:49:4","symbolAliases":[{"foreign":{"id":765,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"365:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":768,"name":"ERC20","nameLocations":["931:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":676,"src":"931:5:4"},"id":769,"nodeType":"InheritanceSpecifier","src":"931:5:4"},{"baseName":{"id":770,"name":"IERC20Permit","nameLocations":["938:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":970,"src":"938:12:4"},"id":771,"nodeType":"InheritanceSpecifier","src":"938:12:4"},{"baseName":{"id":772,"name":"EIP712","nameLocations":["952:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":3438,"src":"952:6:4"},"id":773,"nodeType":"InheritanceSpecifier","src":"952:6:4"},{"baseName":{"id":774,"name":"Nonces","nameLocations":["960:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1068,"src":"960:6:4"},"id":775,"nodeType":"InheritanceSpecifier","src":"960:6:4"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"408:489:4","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":908,"linearizedBaseContracts":[908,1068,3438,24,970,676,66,934,754,1000],"name":"ERC20Permit","nameLocation":"916:11:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":780,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:4","nodeType":"VariableDeclaration","scope":908,"src":"973:146:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":777,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"1126:52:4","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":785,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:4","nodeType":"ErrorDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:4","nodeType":"VariableDeclaration","scope":785,"src":"1213:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:4"},"src":"1183:48:4"},{"documentation":{"id":786,"nodeType":"StructuredDocumentation","src":"1237:45:4","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":792,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:4","nodeType":"ErrorDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"signer","nameLocation":"1322:6:4","nodeType":"VariableDeclaration","scope":792,"src":"1314:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"owner","nameLocation":"1338:5:4","nodeType":"VariableDeclaration","scope":792,"src":"1330:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:4"},"src":"1287:58:4"},{"body":{"id":802,"nodeType":"Block","src":"1627:2:4","statements":[]},"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"1351:221:4","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":803,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":798,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"1616:4:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":800,"kind":"baseConstructorSpecifier","modifierName":{"id":797,"name":"EIP712","nameLocations":["1609:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":3438,"src":"1609:6:4"},"nodeType":"ModifierInvocation","src":"1609:17:4"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"name","nameLocation":"1603:4:4","nodeType":"VariableDeclaration","scope":803,"src":"1589:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":794,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:4"},"returnParameters":{"id":801,"nodeType":"ParameterList","parameters":[],"src":"1627:0:4"},"scope":908,"src":"1577:52:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[955],"body":{"id":879,"nodeType":"Block","src":"1857:483:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":821,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1871:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1877:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"1871:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":823,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"1889:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1871:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":830,"nodeType":"IfStatement","src":"1867:97:4","trueBody":{"id":829,"nodeType":"Block","src":"1899:65:4","statements":[{"errorCall":{"arguments":[{"id":826,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"1944:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":825,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"1920:23:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1920:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":828,"nodeType":"RevertStatement","src":"1913:40:4"}]}},{"assignments":[832],"declarations":[{"constant":false,"id":832,"mutability":"mutable","name":"structHash","nameLocation":"1982:10:4","nodeType":"VariableDeclaration","scope":879,"src":"1974:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1974:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":846,"initialValue":{"arguments":[{"arguments":[{"id":836,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"2016:15:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":837,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2033:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":838,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"2040:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"2049:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":841,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2066:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":840,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"2056:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2056:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":843,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2074:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":834,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2005:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2009:6:4","memberName":"encode","nodeType":"MemberAccess","src":"2005:10:4","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2005:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":833,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1995:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1995:89:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1974:110:4"},{"assignments":[848],"declarations":[{"constant":false,"id":848,"mutability":"mutable","name":"hash","nameLocation":"2103:4:4","nodeType":"VariableDeclaration","scope":879,"src":"2095:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2095:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":852,"initialValue":{"arguments":[{"id":850,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2127:10:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":849,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"2110:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2110:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2095:43:4"},{"assignments":[854],"declarations":[{"constant":false,"id":854,"mutability":"mutable","name":"signer","nameLocation":"2157:6:4","nodeType":"VariableDeclaration","scope":879,"src":"2149:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":862,"initialValue":{"arguments":[{"id":857,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"2180:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":858,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"2186:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":859,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"2189:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":860,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"2192:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":855,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"2166:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3211_$","typeString":"type(library ECDSA)"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2172:7:4","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"2166:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2166:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2149:45:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":863,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"2208:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":864,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2218:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2208:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":872,"nodeType":"IfStatement","src":"2204:88:4","trueBody":{"id":871,"nodeType":"Block","src":"2225:67:4","statements":[{"errorCall":{"arguments":[{"id":867,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"2267:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2275:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":866,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"2246:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":870,"nodeType":"RevertStatement","src":"2239:42:4"}]}},{"expression":{"arguments":[{"id":874,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2311:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"2318:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"2327:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":873,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[567,627],"referencedDeclaration":567,"src":"2302:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2302:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"ExpressionStatement","src":"2302:31:4"}]},"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"1635:28:4","text":"@inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":880,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1677:6:4","nodeType":"FunctionDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"owner","nameLocation":"1701:5:4","nodeType":"VariableDeclaration","scope":880,"src":"1693:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"1693:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"spender","nameLocation":"1724:7:4","nodeType":"VariableDeclaration","scope":880,"src":"1716:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"1716:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"value","nameLocation":"1749:5:4","nodeType":"VariableDeclaration","scope":880,"src":"1741:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1741:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"deadline","nameLocation":"1772:8:4","nodeType":"VariableDeclaration","scope":880,"src":"1764:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"v","nameLocation":"1796:1:4","nodeType":"VariableDeclaration","scope":880,"src":"1790:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":813,"name":"uint8","nodeType":"ElementaryTypeName","src":"1790:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":816,"mutability":"mutable","name":"r","nameLocation":"1815:1:4","nodeType":"VariableDeclaration","scope":880,"src":"1807:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1807:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"s","nameLocation":"1834:1:4","nodeType":"VariableDeclaration","scope":880,"src":"1826:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1826:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1683:158:4"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[],"src":"1857:0:4"},"scope":908,"src":"1668:672:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[963,1027],"body":{"id":896,"nodeType":"Block","src":"2479:43:4","statements":[{"expression":{"arguments":[{"id":893,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"2509:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":891,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2496:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$908_$","typeString":"type(contract super ERC20Permit)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2502:6:4","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1027,"src":"2496:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2496:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":890,"id":895,"nodeType":"Return","src":"2489:26:4"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"2346:28:4","text":"@inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":897,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2388:6:4","nodeType":"FunctionDefinition","overrides":{"id":887,"nodeType":"OverrideSpecifier","overrides":[{"id":885,"name":"IERC20Permit","nameLocations":["2439:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":970,"src":"2439:12:4"},{"id":886,"name":"Nonces","nameLocations":["2453:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1068,"src":"2453:6:4"}],"src":"2430:30:4"},"parameters":{"id":884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"owner","nameLocation":"2403:5:4","nodeType":"VariableDeclaration","scope":897,"src":"2395:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2394:15:4"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":897,"src":"2470:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"2470:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2469:9:4"},"scope":908,"src":"2379:143:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[969],"body":{"id":906,"nodeType":"Block","src":"2682:44:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":903,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"2699:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2699:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":902,"id":905,"nodeType":"Return","src":"2692:27:4"}]},"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"2528:28:4","text":"@inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":907,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2623:16:4","nodeType":"FunctionDefinition","parameters":{"id":899,"nodeType":"ParameterList","parameters":[],"src":"2639:2:4"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":907,"src":"2673:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2673:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2672:9:4"},"scope":908,"src":"2614:112:4","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":909,"src":"898:1830:4","usedErrors":[36,41,46,55,60,65,785,792,1010,1134,1136,2874,2879,2884],"usedEvents":[4,688,697]}],"src":"122:2607:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[754],"IERC20Metadata":[934]},"id":935,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":910,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":912,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":935,"sourceUnit":755,"src":"151:37:5","symbolAliases":[{"foreign":{"id":911,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"159:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":914,"name":"IERC20","nameLocations":["306:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":754,"src":"306:6:5"},"id":915,"nodeType":"InheritanceSpecifier","src":"306:6:5"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"190:87:5","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":934,"linearizedBaseContracts":[934,754],"name":"IERC20Metadata","nameLocation":"288:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"319:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":921,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:5","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[],"src":"391:2:5"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":921,"src":"417:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":918,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:5"},"scope":934,"src":"378:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"438:56:5","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":927,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:5","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[],"src":"514:2:5"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":927,"src":"540:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":924,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:5"},"scope":934,"src":"499:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":928,"nodeType":"StructuredDocumentation","src":"561:65:5","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":933,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:5","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[],"src":"648:2:5"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":933,"src":"674:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":930,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:5"},"scope":934,"src":"631:50:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":935,"src":"278:405:5","usedErrors":[],"usedEvents":[688,697]}],"src":"125:559:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[970]},"id":971,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":936,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"123:25:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"150:1965:6","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":970,"linearizedBaseContracts":[970],"name":"IERC20Permit","nameLocation":"2126:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":938,"nodeType":"StructuredDocumentation","src":"2145:850:6","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":955,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3009:6:6","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"owner","nameLocation":"3033:5:6","nodeType":"VariableDeclaration","scope":955,"src":"3025:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"3025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"spender","nameLocation":"3056:7:6","nodeType":"VariableDeclaration","scope":955,"src":"3048:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"3048:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"value","nameLocation":"3081:5:6","nodeType":"VariableDeclaration","scope":955,"src":"3073:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"3073:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":946,"mutability":"mutable","name":"deadline","nameLocation":"3104:8:6","nodeType":"VariableDeclaration","scope":955,"src":"3096:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"3096:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":948,"mutability":"mutable","name":"v","nameLocation":"3128:1:6","nodeType":"VariableDeclaration","scope":955,"src":"3122:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":947,"name":"uint8","nodeType":"ElementaryTypeName","src":"3122:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"r","nameLocation":"3147:1:6","nodeType":"VariableDeclaration","scope":955,"src":"3139:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":949,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3139:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"s","nameLocation":"3166:1:6","nodeType":"VariableDeclaration","scope":955,"src":"3158:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3158:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3015:158:6"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[],"src":"3182:0:6"},"scope":970,"src":"3000:183:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"3189:294:6","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":963,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3497:6:6","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"owner","nameLocation":"3512:5:6","nodeType":"VariableDeclaration","scope":963,"src":"3504:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"3504:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3503:15:6"},"returnParameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":963,"src":"3542:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"3542:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3541:9:6"},"scope":970,"src":"3488:63:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"3557:128:6","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":969,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3752:16:6","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[],"src":"3768:2:6"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":969,"src":"3794:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:9:6"},"scope":970,"src":"3743:60:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":971,"src":"2116:1689:6","usedErrors":[],"usedEvents":[]}],"src":"123:3683:6"},"id":6},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1000]},"id":1001,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":972,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"127:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1000,"linearizedBaseContracts":[1000],"name":"Context","nameLocation":"642:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":981,"nodeType":"Block","src":"718:34:7","statements":[{"expression":{"expression":{"id":978,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:7","memberName":"sender","nodeType":"MemberAccess","src":"735:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":977,"id":980,"nodeType":"Return","src":"728:17:7"}]},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:7","nodeType":"FunctionDefinition","parameters":{"id":974,"nodeType":"ParameterList","parameters":[],"src":"675:2:7"},"returnParameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":982,"src":"709:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:7"},"scope":1000,"src":"656:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":990,"nodeType":"Block","src":"825:32:7","statements":[{"expression":{"expression":{"id":987,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:7","memberName":"data","nodeType":"MemberAccess","src":"842:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":986,"id":989,"nodeType":"Return","src":"835:15:7"}]},"id":991,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:7","nodeType":"FunctionDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[],"src":"775:2:7"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":991,"src":"809:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":984,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:7"},"scope":1000,"src":"758:99:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":998,"nodeType":"Block","src":"935:25:7","statements":[{"expression":{"hexValue":"30","id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":995,"id":997,"nodeType":"Return","src":"945:8:7"}]},"id":999,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:7","nodeType":"FunctionDefinition","parameters":{"id":992,"nodeType":"ParameterList","parameters":[],"src":"892:2:7"},"returnParameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":999,"src":"926:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:7"},"scope":1000,"src":"863:97:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1001,"src":"624:338:7","usedErrors":[],"usedEvents":[]}],"src":"101:862:7"},"id":7},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1068]},"id":1069,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1002,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"125:83:8","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1068,"linearizedBaseContracts":[1068],"name":"Nonces","nameLocation":"227:6:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"240:90:8","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1010,"name":"InvalidAccountNonce","nameLocation":"341:19:8","nodeType":"ErrorDefinition","parameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"account","nameLocation":"369:7:8","nodeType":"VariableDeclaration","scope":1010,"src":"361:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:8","nodeType":"VariableDeclaration","scope":1010,"src":"378:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:8"},"src":"335:65:8"},{"constant":false,"id":1014,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:8","nodeType":"VariableDeclaration","scope":1068,"src":"406:51:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1013,"keyName":"account","keyNameLocation":"422:7:8","keyType":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1026,"nodeType":"Block","src":"607:38:8","statements":[{"expression":{"baseExpression":{"id":1022,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"624:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1024,"indexExpression":{"id":1023,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"632:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1021,"id":1025,"nodeType":"Return","src":"617:21:8"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"464:69:8","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:8","nodeType":"FunctionDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"owner","nameLocation":"562:5:8","nodeType":"VariableDeclaration","scope":1027,"src":"554:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:8"},"returnParameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1027,"src":"598:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:8"},"scope":1068,"src":"538:107:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1041,"nodeType":"Block","src":"828:326:8","statements":[{"id":1040,"nodeType":"UncheckedBlock","src":"1031:117:8","statements":[{"expression":{"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:8","subExpression":{"baseExpression":{"id":1035,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"1121:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1037,"indexExpression":{"id":1036,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"1129:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1034,"id":1039,"nodeType":"Return","src":"1114:23:8"}]}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"651:103:8","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1042,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:8","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"owner","nameLocation":"786:5:8","nodeType":"VariableDeclaration","scope":1042,"src":"778:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:8"},"returnParameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1042,"src":"819:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1032,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:8"},"scope":1068,"src":"759:395:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1066,"nodeType":"Block","src":"1338:149:8","statements":[{"assignments":[1051],"declarations":[{"constant":false,"id":1051,"mutability":"mutable","name":"current","nameLocation":"1356:7:8","nodeType":"VariableDeclaration","scope":1066,"src":"1348:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1055,"initialValue":{"arguments":[{"id":1053,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"1376:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1052,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"1366:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1056,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"1396:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1057,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"1405:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1065,"nodeType":"IfStatement","src":"1392:89:8","trueBody":{"id":1064,"nodeType":"Block","src":"1414:67:8","statements":[{"errorCall":{"arguments":[{"id":1060,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"1455:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1061,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"1462:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1059,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"1435:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1063,"nodeType":"RevertStatement","src":"1428:42:8"}]}}]},"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"1160:100:8","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1067,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:8","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"owner","nameLocation":"1299:5:8","nodeType":"VariableDeclaration","scope":1067,"src":"1291:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:8","nodeType":"VariableDeclaration","scope":1067,"src":"1306:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:8"},"returnParameters":{"id":1049,"nodeType":"ParameterList","parameters":[],"src":"1338:0:8"},"scope":1068,"src":"1265:222:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1069,"src":"209:1280:8","usedErrors":[1010],"usedEvents":[]}],"src":"99:1391:8"},"id":8},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1120]},"id":1121,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1070,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1071,"nodeType":"StructuredDocumentation","src":"125:489:9","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1120,"linearizedBaseContracts":[1120],"name":"Panic","nameLocation":"665:5:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1072,"nodeType":"StructuredDocumentation","src":"677:36:9","text":"@dev generic / unspecified error"},"id":1075,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:9","nodeType":"VariableDeclaration","scope":1120,"src":"718:40:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"764:37:9","text":"@dev used by the assert() builtin"},"id":1079,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:9","nodeType":"VariableDeclaration","scope":1120,"src":"806:39:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"851:41:9","text":"@dev arithmetic underflow or overflow"},"id":1083,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:9","nodeType":"VariableDeclaration","scope":1120,"src":"897:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:9","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1084,"nodeType":"StructuredDocumentation","src":"950:35:9","text":"@dev division or modulo by zero"},"id":1087,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:9","nodeType":"VariableDeclaration","scope":1120,"src":"990:49:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1088,"nodeType":"StructuredDocumentation","src":"1045:30:9","text":"@dev enum conversion error"},"id":1091,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:9","nodeType":"VariableDeclaration","scope":1120,"src":"1080:54:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:9","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"1140:36:9","text":"@dev invalid encoding in storage"},"id":1095,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:9","nodeType":"VariableDeclaration","scope":1120,"src":"1181:55:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:9","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1096,"nodeType":"StructuredDocumentation","src":"1242:24:9","text":"@dev empty array pop"},"id":1099,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:9","nodeType":"VariableDeclaration","scope":1120,"src":"1271:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:9","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"1325:35:9","text":"@dev array out of bounds access"},"id":1103,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:9","nodeType":"VariableDeclaration","scope":1120,"src":"1365:52:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:9","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"1423:65:9","text":"@dev resource error (too large allocation or too large array)"},"id":1107,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:9","nodeType":"VariableDeclaration","scope":1120,"src":"1493:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:9","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1108,"nodeType":"StructuredDocumentation","src":"1546:42:9","text":"@dev calling invalid internal function"},"id":1111,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:9","nodeType":"VariableDeclaration","scope":1120,"src":"1593:58:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:9","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1118,"nodeType":"Block","src":"1819:151:9","statements":[{"AST":{"nativeSrc":"1854:110:9","nodeType":"YulBlock","src":"1854:110:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:9","nodeType":"YulLiteral","src":"1875:4:9","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:9","nodeType":"YulLiteral","src":"1881:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:9","nodeType":"YulIdentifier","src":"1868:6:9"},"nativeSrc":"1868:24:9","nodeType":"YulFunctionCall","src":"1868:24:9"},"nativeSrc":"1868:24:9","nodeType":"YulExpressionStatement","src":"1868:24:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:9","nodeType":"YulLiteral","src":"1912:4:9","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:9","nodeType":"YulIdentifier","src":"1918:4:9"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:9","nodeType":"YulIdentifier","src":"1905:6:9"},"nativeSrc":"1905:18:9","nodeType":"YulFunctionCall","src":"1905:18:9"},"nativeSrc":"1905:18:9","nodeType":"YulExpressionStatement","src":"1905:18:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:9","nodeType":"YulLiteral","src":"1943:4:9","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:9","nodeType":"YulLiteral","src":"1949:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:9","nodeType":"YulIdentifier","src":"1936:6:9"},"nativeSrc":"1936:18:9","nodeType":"YulFunctionCall","src":"1936:18:9"},"nativeSrc":"1936:18:9","nodeType":"YulExpressionStatement","src":"1936:18:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1114,"isOffset":false,"isSlot":false,"src":"1918:4:9","valueSize":1}],"flags":["memory-safe"],"id":1117,"nodeType":"InlineAssembly","src":"1829:135:9"}]},"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"1658:113:9","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1119,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:9","nodeType":"FunctionDefinition","parameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"code","nameLocation":"1799:4:9","nodeType":"VariableDeclaration","scope":1119,"src":"1791:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1113,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:9"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[],"src":"1819:0:9"},"scope":1120,"src":"1776:194:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1121,"src":"657:1315:9","usedErrors":[],"usedEvents":[]}],"src":"99:1874:9"},"id":9},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1126],"ShortStrings":[1337],"StorageSlot":[1461]},"id":1338,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1122,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1124,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1338,"sourceUnit":1462,"src":"132:46:10","symbolAliases":[{"foreign":{"id":1123,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"140:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1126,"name":"ShortString","nameLocation":"353:11:10","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:10","underlyingType":{"id":1125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"378:876:10","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1337,"linearizedBaseContracts":[1337],"name":"ShortStrings","nameLocation":"1263:12:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1130,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:10","nodeType":"VariableDeclaration","scope":1337,"src":"1345:111:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1134,"name":"StringTooLong","nameLocation":"1469:13:10","nodeType":"ErrorDefinition","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"str","nameLocation":"1490:3:10","nodeType":"VariableDeclaration","scope":1134,"src":"1483:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1131,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:10"},"src":"1463:32:10"},{"errorSelector":"b3512b0c","id":1136,"name":"InvalidShortString","nameLocation":"1506:18:10","nodeType":"ErrorDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[],"src":"1524:2:10"},"src":"1500:27:10"},{"body":{"id":1179,"nodeType":"Block","src":"1786:208:10","statements":[{"assignments":[1146],"declarations":[{"constant":false,"id":1146,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:10","nodeType":"VariableDeclaration","scope":1179,"src":"1796:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1145,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1151,"initialValue":{"arguments":[{"id":1149,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"1822:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1147,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:10","typeDescriptions":{}}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1152,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"1840:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:10","memberName":"length","nodeType":"MemberAccess","src":"1840:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:10","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1161,"nodeType":"IfStatement","src":"1836:72:10","trueBody":{"id":1160,"nodeType":"Block","src":"1858:50:10","statements":[{"errorCall":{"arguments":[{"id":1157,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"1893:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1156,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"1879:13:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$","typeString":"function (string memory) pure returns (error)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1159,"nodeType":"RevertStatement","src":"1872:25:10"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1170,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"1965:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:10","typeDescriptions":{}}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:10","typeDescriptions":{}}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1173,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"1974:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:10","memberName":"length","nodeType":"MemberAccess","src":"1974:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:10","typeDescriptions":{}}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1162,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"1924:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1126_$","typeString":"type(ShortString)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:10","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:10","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1126_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"functionReturnParameters":1144,"id":1178,"nodeType":"Return","src":"1917:70:10"}]},"documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"1533:170:10","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1180,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:10","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"str","nameLocation":"1745:3:10","nodeType":"VariableDeclaration","scope":1180,"src":"1731:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1138,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:10"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1180,"src":"1773:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"},"typeName":{"id":1142,"nodeType":"UserDefinedTypeName","pathNode":{"id":1141,"name":"ShortString","nameLocations":["1773:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1126,"src":"1773:11:10"},"referencedDeclaration":1126,"src":"1773:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:10"},"scope":1337,"src":"1708:286:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1205,"nodeType":"Block","src":"2152:304:10","statements":[{"assignments":[1190],"declarations":[{"constant":false,"id":1190,"mutability":"mutable","name":"len","nameLocation":"2170:3:10","nodeType":"VariableDeclaration","scope":1205,"src":"2162:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1194,"initialValue":{"arguments":[{"id":1192,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"2187:4:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}],"id":1191,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"2176:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1126_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:10"},{"assignments":[1196],"declarations":[{"constant":false,"id":1196,"mutability":"mutable","name":"str","nameLocation":"2294:3:10","nodeType":"VariableDeclaration","scope":1205,"src":"2280:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1195,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1201,"initialValue":{"arguments":[{"hexValue":"3332","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1197,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:10"},{"AST":{"nativeSrc":"2349:81:10","nodeType":"YulBlock","src":"2349:81:10","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:10","nodeType":"YulIdentifier","src":"2370:3:10"},{"name":"len","nativeSrc":"2375:3:10","nodeType":"YulIdentifier","src":"2375:3:10"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:10","nodeType":"YulIdentifier","src":"2363:6:10"},"nativeSrc":"2363:16:10","nodeType":"YulFunctionCall","src":"2363:16:10"},"nativeSrc":"2363:16:10","nodeType":"YulExpressionStatement","src":"2363:16:10"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:10","nodeType":"YulIdentifier","src":"2403:3:10"},{"kind":"number","nativeSrc":"2408:4:10","nodeType":"YulLiteral","src":"2408:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:10","nodeType":"YulIdentifier","src":"2399:3:10"},"nativeSrc":"2399:14:10","nodeType":"YulFunctionCall","src":"2399:14:10"},{"name":"sstr","nativeSrc":"2415:4:10","nodeType":"YulIdentifier","src":"2415:4:10"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:10","nodeType":"YulIdentifier","src":"2392:6:10"},"nativeSrc":"2392:28:10","nodeType":"YulFunctionCall","src":"2392:28:10"},"nativeSrc":"2392:28:10","nodeType":"YulExpressionStatement","src":"2392:28:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1190,"isOffset":false,"isSlot":false,"src":"2375:3:10","valueSize":1},{"declaration":1184,"isOffset":false,"isSlot":false,"src":"2415:4:10","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"2370:3:10","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"2403:3:10","valueSize":1}],"flags":["memory-safe"],"id":1202,"nodeType":"InlineAssembly","src":"2324:106:10"},{"expression":{"id":1203,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"2446:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1188,"id":1204,"nodeType":"Return","src":"2439:10:10"}]},"documentation":{"id":1181,"nodeType":"StructuredDocumentation","src":"2000:73:10","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:10","nodeType":"FunctionDefinition","parameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:10","nodeType":"VariableDeclaration","scope":1206,"src":"2096:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"},"typeName":{"id":1183,"nodeType":"UserDefinedTypeName","pathNode":{"id":1182,"name":"ShortString","nameLocations":["2096:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1126,"src":"2096:11:10"},"referencedDeclaration":1126,"src":"2096:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:10"},"returnParameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"2137:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1186,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:10"},"scope":1337,"src":"2078:378:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1237,"nodeType":"Block","src":"2598:175:10","statements":[{"assignments":[1216],"declarations":[{"constant":false,"id":1216,"mutability":"mutable","name":"result","nameLocation":"2616:6:10","nodeType":"VariableDeclaration","scope":1237,"src":"2608:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1226,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1221,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"2652:4:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}],"expression":{"id":1219,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"2633:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1126_$","typeString":"type(ShortString)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:10","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:10","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1126_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:10","typeDescriptions":{}}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1227,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"2679:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:10","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1234,"nodeType":"IfStatement","src":"2675:69:10","trueBody":{"id":1233,"nodeType":"Block","src":"2692:52:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1230,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"2713:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1232,"nodeType":"RevertStatement","src":"2706:27:10"}]}},{"expression":{"id":1235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"2760:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1214,"id":1236,"nodeType":"Return","src":"2753:13:10"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"2462:61:10","text":" @dev Return the length of a `ShortString`."},"id":1238,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:10","nodeType":"FunctionDefinition","parameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:10","nodeType":"VariableDeclaration","scope":1238,"src":"2548:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"},"typeName":{"id":1209,"nodeType":"UserDefinedTypeName","pathNode":{"id":1208,"name":"ShortString","nameLocations":["2548:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1126,"src":"2548:11:10"},"referencedDeclaration":1126,"src":"2548:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:10"},"returnParameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1238,"src":"2589:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:10"},"scope":1337,"src":"2528:245:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1277,"nodeType":"Block","src":"2996:231:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"3016:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1249,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:10","typeDescriptions":{}}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:10","memberName":"length","nodeType":"MemberAccess","src":"3010:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1275,"nodeType":"Block","src":"3094:127:10","statements":[{"expression":{"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1264,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"3134:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1261,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"3108:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1461_$","typeString":"type(library StorageSlot)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:10","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1438,"src":"3108:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1358_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1358_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"3108:38:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"3149:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1269,"nodeType":"ExpressionStatement","src":"3108:46:10"},{"expression":{"arguments":[{"id":1272,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3192:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1270,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3175:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1126_$","typeString":"type(ShortString)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:10","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:10","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1126_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"functionReturnParameters":1248,"id":1274,"nodeType":"Return","src":"3168:42:10"}]},"id":1276,"nodeType":"IfStatement","src":"3006:215:10","trueBody":{"id":1260,"nodeType":"Block","src":"3036:52:10","statements":[{"expression":{"arguments":[{"id":1257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"3071:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1256,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"3057:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1126_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"functionReturnParameters":1248,"id":1259,"nodeType":"Return","src":"3050:27:10"}]}}]},"documentation":{"id":1239,"nodeType":"StructuredDocumentation","src":"2779:103:10","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1278,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:10","nodeType":"FunctionDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1241,"mutability":"mutable","name":"value","nameLocation":"2936:5:10","nodeType":"VariableDeclaration","scope":1278,"src":"2922:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1240,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"store","nameLocation":"2958:5:10","nodeType":"VariableDeclaration","scope":1278,"src":"2943:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1242,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:10"},"returnParameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"2983:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"},"typeName":{"id":1246,"nodeType":"UserDefinedTypeName","pathNode":{"id":1245,"name":"ShortString","nameLocations":["2983:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1126,"src":"2983:11:10"},"referencedDeclaration":1126,"src":"2983:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:10"},"scope":1337,"src":"2887:340:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1304,"nodeType":"Block","src":"3477:158:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"3510:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}],"expression":{"id":1289,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3491:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1126_$","typeString":"type(ShortString)"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:10","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:10","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1126_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1293,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3520:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1302,"nodeType":"Block","src":"3592:37:10","statements":[{"expression":{"id":1300,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"3613:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1288,"id":1301,"nodeType":"Return","src":"3606:12:10"}]},"id":1303,"nodeType":"IfStatement","src":"3487:142:10","trueBody":{"id":1299,"nodeType":"Block","src":"3539:47:10","statements":[{"expression":{"arguments":[{"id":1296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"3569:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}],"id":1295,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"3560:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1126_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1288,"id":1298,"nodeType":"Return","src":"3553:22:10"}]}}]},"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"3233:130:10","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":1305,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:10","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"value","nameLocation":"3410:5:10","nodeType":"VariableDeclaration","scope":1305,"src":"3398:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"},"typeName":{"id":1281,"nodeType":"UserDefinedTypeName","pathNode":{"id":1280,"name":"ShortString","nameLocations":["3398:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1126,"src":"3398:11:10"},"referencedDeclaration":1126,"src":"3398:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1284,"mutability":"mutable","name":"store","nameLocation":"3432:5:10","nodeType":"VariableDeclaration","scope":1305,"src":"3417:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1283,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:10"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1305,"src":"3462:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1286,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:10"},"scope":1337,"src":"3368:267:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1335,"nodeType":"Block","src":"4125:174:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"4158:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}],"expression":{"id":1316,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"4139:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1126_$","typeString":"type(ShortString)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:10","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:10","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1126_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1320,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4168:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1333,"nodeType":"Block","src":"4242:51:10","statements":[{"expression":{"expression":{"arguments":[{"id":1329,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"4269:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1327,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:10","typeDescriptions":{}}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:10","memberName":"length","nodeType":"MemberAccess","src":"4263:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1315,"id":1332,"nodeType":"Return","src":"4256:26:10"}]},"id":1334,"nodeType":"IfStatement","src":"4135:158:10","trueBody":{"id":1326,"nodeType":"Block","src":"4187:49:10","statements":[{"expression":{"arguments":[{"id":1323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"4219:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}],"id":1322,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"4208:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1126_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1315,"id":1325,"nodeType":"Return","src":"4201:24:10"}]}}]},"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"3641:374:10","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1336,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:10","nodeType":"FunctionDefinition","parameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"value","nameLocation":"4064:5:10","nodeType":"VariableDeclaration","scope":1336,"src":"4052:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"},"typeName":{"id":1308,"nodeType":"UserDefinedTypeName","pathNode":{"id":1307,"name":"ShortString","nameLocations":["4052:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1126,"src":"4052:11:10"},"referencedDeclaration":1126,"src":"4052:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1311,"mutability":"mutable","name":"store","nameLocation":"4086:5:10","nodeType":"VariableDeclaration","scope":1336,"src":"4071:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1310,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:10"},"returnParameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1336,"src":"4116:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:10"},"scope":1337,"src":"4020:279:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1338,"src":"1255:3046:10","usedErrors":[1134,1136],"usedEvents":[]}],"src":"106:4196:10"},"id":10},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1461]},"id":1462,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1339,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"219:1187:11","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1461,"linearizedBaseContracts":[1461],"name":"StorageSlot","nameLocation":"1415:11:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1343,"members":[{"constant":false,"id":1342,"mutability":"mutable","name":"value","nameLocation":"1470:5:11","nodeType":"VariableDeclaration","scope":1343,"src":"1462:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:11","nodeType":"StructDefinition","scope":1461,"src":"1433:49:11","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1346,"members":[{"constant":false,"id":1345,"mutability":"mutable","name":"value","nameLocation":"1522:5:11","nodeType":"VariableDeclaration","scope":1346,"src":"1517:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1344,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:11","nodeType":"StructDefinition","scope":1461,"src":"1488:46:11","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1349,"members":[{"constant":false,"id":1348,"mutability":"mutable","name":"value","nameLocation":"1577:5:11","nodeType":"VariableDeclaration","scope":1349,"src":"1569:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:11","nodeType":"StructDefinition","scope":1461,"src":"1540:49:11","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1352,"members":[{"constant":false,"id":1351,"mutability":"mutable","name":"value","nameLocation":"1632:5:11","nodeType":"VariableDeclaration","scope":1352,"src":"1624:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:11","nodeType":"StructDefinition","scope":1461,"src":"1595:49:11","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1355,"members":[{"constant":false,"id":1354,"mutability":"mutable","name":"value","nameLocation":"1685:5:11","nodeType":"VariableDeclaration","scope":1355,"src":"1678:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1353,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:11","nodeType":"StructDefinition","scope":1461,"src":"1650:47:11","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1358,"members":[{"constant":false,"id":1357,"mutability":"mutable","name":"value","nameLocation":"1738:5:11","nodeType":"VariableDeclaration","scope":1358,"src":"1731:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1356,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:11","nodeType":"StructDefinition","scope":1461,"src":"1703:47:11","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1361,"members":[{"constant":false,"id":1360,"mutability":"mutable","name":"value","nameLocation":"1789:5:11","nodeType":"VariableDeclaration","scope":1361,"src":"1783:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1359,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:11","nodeType":"StructDefinition","scope":1461,"src":"1756:45:11","visibility":"public"},{"body":{"id":1371,"nodeType":"Block","src":"1983:79:11","statements":[{"AST":{"nativeSrc":"2018:38:11","nodeType":"YulBlock","src":"2018:38:11","statements":[{"nativeSrc":"2032:14:11","nodeType":"YulAssignment","src":"2032:14:11","value":{"name":"slot","nativeSrc":"2042:4:11","nodeType":"YulIdentifier","src":"2042:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:11","nodeType":"YulIdentifier","src":"2032:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1368,"isOffset":false,"isSlot":true,"src":"2032:6:11","suffix":"slot","valueSize":1},{"declaration":1364,"isOffset":false,"isSlot":false,"src":"2042:4:11","valueSize":1}],"flags":["memory-safe"],"id":1370,"nodeType":"InlineAssembly","src":"1993:63:11"}]},"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"1807:87:11","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1372,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:11","nodeType":"FunctionDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"slot","nameLocation":"1931:4:11","nodeType":"VariableDeclaration","scope":1372,"src":"1923:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:11"},"returnParameters":{"id":1369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"r","nameLocation":"1980:1:11","nodeType":"VariableDeclaration","scope":1372,"src":"1960:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1343_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1367,"nodeType":"UserDefinedTypeName","pathNode":{"id":1366,"name":"AddressSlot","nameLocations":["1960:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1343,"src":"1960:11:11"},"referencedDeclaration":1343,"src":"1960:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1343_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:11"},"scope":1461,"src":"1899:163:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1382,"nodeType":"Block","src":"2243:79:11","statements":[{"AST":{"nativeSrc":"2278:38:11","nodeType":"YulBlock","src":"2278:38:11","statements":[{"nativeSrc":"2292:14:11","nodeType":"YulAssignment","src":"2292:14:11","value":{"name":"slot","nativeSrc":"2302:4:11","nodeType":"YulIdentifier","src":"2302:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:11","nodeType":"YulIdentifier","src":"2292:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1379,"isOffset":false,"isSlot":true,"src":"2292:6:11","suffix":"slot","valueSize":1},{"declaration":1375,"isOffset":false,"isSlot":false,"src":"2302:4:11","valueSize":1}],"flags":["memory-safe"],"id":1381,"nodeType":"InlineAssembly","src":"2253:63:11"}]},"documentation":{"id":1373,"nodeType":"StructuredDocumentation","src":"2068:86:11","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1383,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:11","nodeType":"FunctionDefinition","parameters":{"id":1376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"slot","nameLocation":"2191:4:11","nodeType":"VariableDeclaration","scope":1383,"src":"2183:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:11"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"r","nameLocation":"2240:1:11","nodeType":"VariableDeclaration","scope":1383,"src":"2220:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1346_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1378,"nodeType":"UserDefinedTypeName","pathNode":{"id":1377,"name":"BooleanSlot","nameLocations":["2220:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1346,"src":"2220:11:11"},"referencedDeclaration":1346,"src":"2220:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1346_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:11"},"scope":1461,"src":"2159:163:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1393,"nodeType":"Block","src":"2503:79:11","statements":[{"AST":{"nativeSrc":"2538:38:11","nodeType":"YulBlock","src":"2538:38:11","statements":[{"nativeSrc":"2552:14:11","nodeType":"YulAssignment","src":"2552:14:11","value":{"name":"slot","nativeSrc":"2562:4:11","nodeType":"YulIdentifier","src":"2562:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:11","nodeType":"YulIdentifier","src":"2552:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1390,"isOffset":false,"isSlot":true,"src":"2552:6:11","suffix":"slot","valueSize":1},{"declaration":1386,"isOffset":false,"isSlot":false,"src":"2562:4:11","valueSize":1}],"flags":["memory-safe"],"id":1392,"nodeType":"InlineAssembly","src":"2513:63:11"}]},"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"2328:86:11","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1394,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:11","nodeType":"FunctionDefinition","parameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"slot","nameLocation":"2451:4:11","nodeType":"VariableDeclaration","scope":1394,"src":"2443:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:11"},"returnParameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"r","nameLocation":"2500:1:11","nodeType":"VariableDeclaration","scope":1394,"src":"2480:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1349_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1389,"nodeType":"UserDefinedTypeName","pathNode":{"id":1388,"name":"Bytes32Slot","nameLocations":["2480:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1349,"src":"2480:11:11"},"referencedDeclaration":1349,"src":"2480:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1349_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:11"},"scope":1461,"src":"2419:163:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1404,"nodeType":"Block","src":"2763:79:11","statements":[{"AST":{"nativeSrc":"2798:38:11","nodeType":"YulBlock","src":"2798:38:11","statements":[{"nativeSrc":"2812:14:11","nodeType":"YulAssignment","src":"2812:14:11","value":{"name":"slot","nativeSrc":"2822:4:11","nodeType":"YulIdentifier","src":"2822:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:11","nodeType":"YulIdentifier","src":"2812:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1401,"isOffset":false,"isSlot":true,"src":"2812:6:11","suffix":"slot","valueSize":1},{"declaration":1397,"isOffset":false,"isSlot":false,"src":"2822:4:11","valueSize":1}],"flags":["memory-safe"],"id":1403,"nodeType":"InlineAssembly","src":"2773:63:11"}]},"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"2588:86:11","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1405,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:11","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"slot","nameLocation":"2711:4:11","nodeType":"VariableDeclaration","scope":1405,"src":"2703:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:11"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"r","nameLocation":"2760:1:11","nodeType":"VariableDeclaration","scope":1405,"src":"2740:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1352_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1400,"nodeType":"UserDefinedTypeName","pathNode":{"id":1399,"name":"Uint256Slot","nameLocations":["2740:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1352,"src":"2740:11:11"},"referencedDeclaration":1352,"src":"2740:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1352_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:11"},"scope":1461,"src":"2679:163:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1415,"nodeType":"Block","src":"3020:79:11","statements":[{"AST":{"nativeSrc":"3055:38:11","nodeType":"YulBlock","src":"3055:38:11","statements":[{"nativeSrc":"3069:14:11","nodeType":"YulAssignment","src":"3069:14:11","value":{"name":"slot","nativeSrc":"3079:4:11","nodeType":"YulIdentifier","src":"3079:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:11","nodeType":"YulIdentifier","src":"3069:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1412,"isOffset":false,"isSlot":true,"src":"3069:6:11","suffix":"slot","valueSize":1},{"declaration":1408,"isOffset":false,"isSlot":false,"src":"3079:4:11","valueSize":1}],"flags":["memory-safe"],"id":1414,"nodeType":"InlineAssembly","src":"3030:63:11"}]},"documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"2848:85:11","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1416,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:11","nodeType":"FunctionDefinition","parameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"slot","nameLocation":"2969:4:11","nodeType":"VariableDeclaration","scope":1416,"src":"2961:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:11"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"r","nameLocation":"3017:1:11","nodeType":"VariableDeclaration","scope":1416,"src":"2998:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1355_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1411,"nodeType":"UserDefinedTypeName","pathNode":{"id":1410,"name":"Int256Slot","nameLocations":["2998:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1355,"src":"2998:10:11"},"referencedDeclaration":1355,"src":"2998:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1355_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:11"},"scope":1461,"src":"2938:161:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1426,"nodeType":"Block","src":"3277:79:11","statements":[{"AST":{"nativeSrc":"3312:38:11","nodeType":"YulBlock","src":"3312:38:11","statements":[{"nativeSrc":"3326:14:11","nodeType":"YulAssignment","src":"3326:14:11","value":{"name":"slot","nativeSrc":"3336:4:11","nodeType":"YulIdentifier","src":"3336:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:11","nodeType":"YulIdentifier","src":"3326:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1423,"isOffset":false,"isSlot":true,"src":"3326:6:11","suffix":"slot","valueSize":1},{"declaration":1419,"isOffset":false,"isSlot":false,"src":"3336:4:11","valueSize":1}],"flags":["memory-safe"],"id":1425,"nodeType":"InlineAssembly","src":"3287:63:11"}]},"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"3105:85:11","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1427,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:11","nodeType":"FunctionDefinition","parameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"slot","nameLocation":"3226:4:11","nodeType":"VariableDeclaration","scope":1427,"src":"3218:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:11"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"r","nameLocation":"3274:1:11","nodeType":"VariableDeclaration","scope":1427,"src":"3255:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1358_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1422,"nodeType":"UserDefinedTypeName","pathNode":{"id":1421,"name":"StringSlot","nameLocations":["3255:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"3255:10:11"},"referencedDeclaration":1358,"src":"3255:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1358_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:11"},"scope":1461,"src":"3195:161:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1437,"nodeType":"Block","src":"3558:85:11","statements":[{"AST":{"nativeSrc":"3593:44:11","nodeType":"YulBlock","src":"3593:44:11","statements":[{"nativeSrc":"3607:20:11","nodeType":"YulAssignment","src":"3607:20:11","value":{"name":"store.slot","nativeSrc":"3617:10:11","nodeType":"YulIdentifier","src":"3617:10:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:11","nodeType":"YulIdentifier","src":"3607:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1434,"isOffset":false,"isSlot":true,"src":"3607:6:11","suffix":"slot","valueSize":1},{"declaration":1430,"isOffset":false,"isSlot":true,"src":"3617:10:11","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1436,"nodeType":"InlineAssembly","src":"3568:69:11"}]},"documentation":{"id":1428,"nodeType":"StructuredDocumentation","src":"3362:101:11","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1438,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:11","nodeType":"FunctionDefinition","parameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"store","nameLocation":"3506:5:11","nodeType":"VariableDeclaration","scope":1438,"src":"3491:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1429,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:11"},"returnParameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"mutability":"mutable","name":"r","nameLocation":"3555:1:11","nodeType":"VariableDeclaration","scope":1438,"src":"3536:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1358_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1433,"nodeType":"UserDefinedTypeName","pathNode":{"id":1432,"name":"StringSlot","nameLocations":["3536:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"3536:10:11"},"referencedDeclaration":1358,"src":"3536:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1358_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:11"},"scope":1461,"src":"3468:175:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1448,"nodeType":"Block","src":"3818:79:11","statements":[{"AST":{"nativeSrc":"3853:38:11","nodeType":"YulBlock","src":"3853:38:11","statements":[{"nativeSrc":"3867:14:11","nodeType":"YulAssignment","src":"3867:14:11","value":{"name":"slot","nativeSrc":"3877:4:11","nodeType":"YulIdentifier","src":"3877:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:11","nodeType":"YulIdentifier","src":"3867:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1445,"isOffset":false,"isSlot":true,"src":"3867:6:11","suffix":"slot","valueSize":1},{"declaration":1441,"isOffset":false,"isSlot":false,"src":"3877:4:11","valueSize":1}],"flags":["memory-safe"],"id":1447,"nodeType":"InlineAssembly","src":"3828:63:11"}]},"documentation":{"id":1439,"nodeType":"StructuredDocumentation","src":"3649:84:11","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1449,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:11","nodeType":"FunctionDefinition","parameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"slot","nameLocation":"3768:4:11","nodeType":"VariableDeclaration","scope":1449,"src":"3760:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:11"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"r","nameLocation":"3815:1:11","nodeType":"VariableDeclaration","scope":1449,"src":"3797:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1361_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1444,"nodeType":"UserDefinedTypeName","pathNode":{"id":1443,"name":"BytesSlot","nameLocations":["3797:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1361,"src":"3797:9:11"},"referencedDeclaration":1361,"src":"3797:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1361_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:11"},"scope":1461,"src":"3738:159:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1459,"nodeType":"Block","src":"4094:85:11","statements":[{"AST":{"nativeSrc":"4129:44:11","nodeType":"YulBlock","src":"4129:44:11","statements":[{"nativeSrc":"4143:20:11","nodeType":"YulAssignment","src":"4143:20:11","value":{"name":"store.slot","nativeSrc":"4153:10:11","nodeType":"YulIdentifier","src":"4153:10:11"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:11","nodeType":"YulIdentifier","src":"4143:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1456,"isOffset":false,"isSlot":true,"src":"4143:6:11","suffix":"slot","valueSize":1},{"declaration":1452,"isOffset":false,"isSlot":true,"src":"4153:10:11","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1458,"nodeType":"InlineAssembly","src":"4104:69:11"}]},"documentation":{"id":1450,"nodeType":"StructuredDocumentation","src":"3903:99:11","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1460,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:11","nodeType":"FunctionDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"store","nameLocation":"4043:5:11","nodeType":"VariableDeclaration","scope":1460,"src":"4029:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1451,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:11"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"r","nameLocation":"4091:1:11","nodeType":"VariableDeclaration","scope":1460,"src":"4073:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1361_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1455,"nodeType":"UserDefinedTypeName","pathNode":{"id":1454,"name":"BytesSlot","nameLocations":["4073:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1361,"src":"4073:9:11"},"referencedDeclaration":1361,"src":"4073:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1361_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:11"},"scope":1461,"src":"4007:172:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1462,"src":"1407:2774:11","usedErrors":[],"usedEvents":[]}],"src":"193:3989:11"},"id":11},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5145],"SafeCast":[6910],"SignedMath":[7054],"Strings":[2863]},"id":2864,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1463,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1465,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2864,"sourceUnit":5146,"src":"127:37:12","symbolAliases":[{"foreign":{"id":1464,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"135:4:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1467,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2864,"sourceUnit":6911,"src":"165:45:12","symbolAliases":[{"foreign":{"id":1466,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"173:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1469,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2864,"sourceUnit":7055,"src":"211:49:12","symbolAliases":[{"foreign":{"id":1468,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"219:10:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1470,"nodeType":"StructuredDocumentation","src":"262:34:12","text":" @dev String operations."},"fullyImplemented":true,"id":2863,"linearizedBaseContracts":[2863],"name":"Strings","nameLocation":"305:7:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1472,"libraryName":{"id":1471,"name":"SafeCast","nameLocations":["325:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":6910,"src":"325:8:12"},"nodeType":"UsingForDirective","src":"319:21:12"},{"constant":true,"id":1475,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:12","nodeType":"VariableDeclaration","scope":2863,"src":"346:56:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1473,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1478,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:12","nodeType":"VariableDeclaration","scope":2863,"src":"408:42:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1476,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:12","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1514,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:12","nodeType":"VariableDeclaration","scope":2863,"src":"456:302:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1479,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1483,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:12","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:12","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:12","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:12","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:12","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:12","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:12","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:12","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:12","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:12","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:12","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:12","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1502,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:12","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:12","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:12","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:12","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:12","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:12","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:12","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:12","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:12","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"778:81:12","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1521,"name":"StringsInsufficientHexLength","nameLocation":"870:28:12","nodeType":"ErrorDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"value","nameLocation":"907:5:12","nodeType":"VariableDeclaration","scope":1521,"src":"899:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"length","nameLocation":"922:6:12","nodeType":"VariableDeclaration","scope":1521,"src":"914:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:12"},"src":"864:66:12"},{"documentation":{"id":1522,"nodeType":"StructuredDocumentation","src":"936:108:12","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1524,"name":"StringsInvalidChar","nameLocation":"1055:18:12","nodeType":"ErrorDefinition","parameters":{"id":1523,"nodeType":"ParameterList","parameters":[],"src":"1073:2:12"},"src":"1049:27:12"},{"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"1082:84:12","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1527,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:12","nodeType":"ErrorDefinition","parameters":{"id":1526,"nodeType":"ParameterList","parameters":[],"src":"1204:2:12"},"src":"1171:36:12"},{"body":{"id":1574,"nodeType":"Block","src":"1379:563:12","statements":[{"id":1573,"nodeType":"UncheckedBlock","src":"1389:547:12","statements":[{"assignments":[1536],"declarations":[{"constant":false,"id":1536,"mutability":"mutable","name":"length","nameLocation":"1421:6:12","nodeType":"VariableDeclaration","scope":1573,"src":"1413:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1543,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1441:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1537,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"1430:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5145_$","typeString":"type(library Math)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:12","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4977,"src":"1430:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:12"},{"assignments":[1545],"declarations":[{"constant":false,"id":1545,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:12","nodeType":"VariableDeclaration","scope":1573,"src":"1465:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1544,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1550,"initialValue":{"arguments":[{"id":1548,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1499:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1546,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:12"},{"assignments":[1552],"declarations":[{"constant":false,"id":1552,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:12","nodeType":"VariableDeclaration","scope":1573,"src":"1520:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1553,"nodeType":"VariableDeclarationStatement","src":"1520:11:12"},{"AST":{"nativeSrc":"1570:69:12","nodeType":"YulBlock","src":"1570:69:12","statements":[{"nativeSrc":"1588:37:12","nodeType":"YulAssignment","src":"1588:37:12","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:12","nodeType":"YulIdentifier","src":"1603:6:12"},{"kind":"number","nativeSrc":"1611:4:12","nodeType":"YulLiteral","src":"1611:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:12","nodeType":"YulIdentifier","src":"1599:3:12"},"nativeSrc":"1599:17:12","nodeType":"YulFunctionCall","src":"1599:17:12"},{"name":"length","nativeSrc":"1618:6:12","nodeType":"YulIdentifier","src":"1618:6:12"}],"functionName":{"name":"add","nativeSrc":"1595:3:12","nodeType":"YulIdentifier","src":"1595:3:12"},"nativeSrc":"1595:30:12","nodeType":"YulFunctionCall","src":"1595:30:12"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:12","nodeType":"YulIdentifier","src":"1588:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1545,"isOffset":false,"isSlot":false,"src":"1603:6:12","valueSize":1},{"declaration":1536,"isOffset":false,"isSlot":false,"src":"1618:6:12","valueSize":1},{"declaration":1552,"isOffset":false,"isSlot":false,"src":"1588:3:12","valueSize":1}],"flags":["memory-safe"],"id":1554,"nodeType":"InlineAssembly","src":"1545:94:12"},{"body":{"id":1569,"nodeType":"Block","src":"1665:234:12","statements":[{"expression":{"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:12","subExpression":{"id":1556,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"1683:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1558,"nodeType":"ExpressionStatement","src":"1683:5:12"},{"AST":{"nativeSrc":"1731:86:12","nodeType":"YulBlock","src":"1731:86:12","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:12","nodeType":"YulIdentifier","src":"1761:3:12"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:12","nodeType":"YulIdentifier","src":"1775:5:12"},{"kind":"number","nativeSrc":"1782:2:12","nodeType":"YulLiteral","src":"1782:2:12","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:12","nodeType":"YulIdentifier","src":"1771:3:12"},"nativeSrc":"1771:14:12","nodeType":"YulFunctionCall","src":"1771:14:12"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:12","nodeType":"YulIdentifier","src":"1787:10:12"}],"functionName":{"name":"byte","nativeSrc":"1766:4:12","nodeType":"YulIdentifier","src":"1766:4:12"},"nativeSrc":"1766:32:12","nodeType":"YulFunctionCall","src":"1766:32:12"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:12","nodeType":"YulIdentifier","src":"1753:7:12"},"nativeSrc":"1753:46:12","nodeType":"YulFunctionCall","src":"1753:46:12"},"nativeSrc":"1753:46:12","nodeType":"YulExpressionStatement","src":"1753:46:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1475,"isOffset":false,"isSlot":false,"src":"1787:10:12","valueSize":1},{"declaration":1552,"isOffset":false,"isSlot":false,"src":"1761:3:12","valueSize":1},{"declaration":1530,"isOffset":false,"isSlot":false,"src":"1775:5:12","valueSize":1}],"flags":["memory-safe"],"id":1559,"nodeType":"InlineAssembly","src":"1706:111:12"},{"expression":{"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1834:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1563,"nodeType":"ExpressionStatement","src":"1834:11:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1867:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1568,"nodeType":"IfStatement","src":"1863:21:12","trueBody":{"id":1567,"nodeType":"Break","src":"1879:5:12"}}]},"condition":{"hexValue":"74727565","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1570,"nodeType":"WhileStatement","src":"1652:247:12"},{"expression":{"id":1571,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"1919:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1534,"id":1572,"nodeType":"Return","src":"1912:13:12"}]}]},"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"1213:90:12","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:12","nodeType":"FunctionDefinition","parameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"value","nameLocation":"1334:5:12","nodeType":"VariableDeclaration","scope":1575,"src":"1326:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:12"},"returnParameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1575,"src":"1364:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1532,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:12"},"scope":2863,"src":"1308:634:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1600,"nodeType":"Block","src":"2118:92:12","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"2149:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:12","trueExpression":{"hexValue":"2d","id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"2195:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1593,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"2180:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7054_$","typeString":"type(library SignedMath)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:12","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7053,"src":"2180:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1592,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"2171:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1583,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:12","typeDescriptions":{}}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:12","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:12","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1582,"id":1599,"nodeType":"Return","src":"2128:75:12"}]},"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"1948:89:12","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1601,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:12","nodeType":"FunctionDefinition","parameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"value","nameLocation":"2073:5:12","nodeType":"VariableDeclaration","scope":1601,"src":"2066:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1577,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:12"},"returnParameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1601,"src":"2103:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1580,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:12"},"scope":2863,"src":"2042:168:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1620,"nodeType":"Block","src":"2389:100:12","statements":[{"id":1619,"nodeType":"UncheckedBlock","src":"2399:84:12","statements":[{"expression":{"arguments":[{"id":1610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"2442:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"2461:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1611,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"2449:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5145_$","typeString":"type(library Math)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:12","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5088,"src":"2449:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1609,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1621,1704,1724],"referencedDeclaration":1704,"src":"2430:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1608,"id":1618,"nodeType":"Return","src":"2423:49:12"}]}]},"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"2216:94:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1621,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:12","nodeType":"FunctionDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"value","nameLocation":"2344:5:12","nodeType":"VariableDeclaration","scope":1621,"src":"2336:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:12"},"returnParameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1621,"src":"2374:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1606,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:12"},"scope":2863,"src":"2315:174:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1703,"nodeType":"Block","src":"2702:435:12","statements":[{"assignments":[1632],"declarations":[{"constant":false,"id":1632,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:12","nodeType":"VariableDeclaration","scope":1703,"src":"2712:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1634,"initialValue":{"id":1633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"2733:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:12"},{"assignments":[1636],"declarations":[{"constant":false,"id":1636,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:12","nodeType":"VariableDeclaration","scope":1703,"src":"2748:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1635,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1645,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1640,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"2784:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1637,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:12"},{"expression":{"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1646,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"2805:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1648,"indexExpression":{"hexValue":"30","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1651,"nodeType":"ExpressionStatement","src":"2805:15:12"},{"expression":{"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1652,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"2830:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1654,"indexExpression":{"hexValue":"31","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1657,"nodeType":"ExpressionStatement","src":"2830:15:12"},{"body":{"id":1686,"nodeType":"Block","src":"2900:95:12","statements":[{"expression":{"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1672,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"2914:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1674,"indexExpression":{"id":1673,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"2921:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1675,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"2926:10:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1679,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1676,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"2937:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1681,"nodeType":"ExpressionStatement","src":"2914:40:12"},{"expression":{"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1682,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"2968:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1685,"nodeType":"ExpressionStatement","src":"2968:16:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1666,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"2888:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1687,"initializationExpression":{"assignments":[1659],"declarations":[{"constant":false,"id":1659,"mutability":"mutable","name":"i","nameLocation":"2868:1:12","nodeType":"VariableDeclaration","scope":1687,"src":"2860:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1658,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1665,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1661,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"2876:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:12"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:12","subExpression":{"id":1669,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"2897:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1671,"nodeType":"ExpressionStatement","src":"2895:3:12"},"nodeType":"ForStatement","src":"2855:140:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"3008:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1697,"nodeType":"IfStatement","src":"3004:96:12","trueBody":{"id":1696,"nodeType":"Block","src":"3025:75:12","statements":[{"errorCall":{"arguments":[{"id":1692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"3075:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1693,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"3082:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1691,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"3046:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1695,"nodeType":"RevertStatement","src":"3039:50:12"}]}},{"expression":{"arguments":[{"id":1700,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"3123:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1698,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:12","typeDescriptions":{}}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1630,"id":1702,"nodeType":"Return","src":"3109:21:12"}]},"documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"2495:112:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1704,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:12","nodeType":"FunctionDefinition","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"value","nameLocation":"2641:5:12","nodeType":"VariableDeclaration","scope":1704,"src":"2633:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1626,"mutability":"mutable","name":"length","nameLocation":"2656:6:12","nodeType":"VariableDeclaration","scope":1704,"src":"2648:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:12"},"returnParameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1704,"src":"2687:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1628,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:12"},"scope":2863,"src":"2612:525:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1723,"nodeType":"Block","src":"3369:75:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1717,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"3414:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1715,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:12","typeDescriptions":{}}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:12","typeDescriptions":{}}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1720,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"3422:14:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1712,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1621,1704,1724],"referencedDeclaration":1704,"src":"3386:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1711,"id":1722,"nodeType":"Return","src":"3379:58:12"}]},"documentation":{"id":1705,"nodeType":"StructuredDocumentation","src":"3143:148:12","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1724,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:12","nodeType":"FunctionDefinition","parameters":{"id":1708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"addr","nameLocation":"3325:4:12","nodeType":"VariableDeclaration","scope":1724,"src":"3317:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1706,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:12"},"returnParameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1724,"src":"3354:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1709,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:12"},"scope":2863,"src":"3296:148:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1788,"nodeType":"Block","src":"3701:642:12","statements":[{"assignments":[1733],"declarations":[{"constant":false,"id":1733,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:12","nodeType":"VariableDeclaration","scope":1788,"src":"3711:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1732,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1740,"initialValue":{"arguments":[{"arguments":[{"id":1737,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"3751:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1736,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1621,1704,1724],"referencedDeclaration":1724,"src":"3739:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1734,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:12","typeDescriptions":{}}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:12"},{"assignments":[1742],"declarations":[{"constant":false,"id":1742,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:12","nodeType":"VariableDeclaration","scope":1788,"src":"3842:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1743,"nodeType":"VariableDeclarationStatement","src":"3842:17:12"},{"AST":{"nativeSrc":"3894:78:12","nodeType":"YulBlock","src":"3894:78:12","statements":[{"nativeSrc":"3908:54:12","nodeType":"YulAssignment","src":"3908:54:12","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:12","nodeType":"YulLiteral","src":"3925:2:12","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:12","nodeType":"YulIdentifier","src":"3943:6:12"},{"kind":"number","nativeSrc":"3951:4:12","nodeType":"YulLiteral","src":"3951:4:12","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:12","nodeType":"YulIdentifier","src":"3939:3:12"},"nativeSrc":"3939:17:12","nodeType":"YulFunctionCall","src":"3939:17:12"},{"kind":"number","nativeSrc":"3958:2:12","nodeType":"YulLiteral","src":"3958:2:12","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:12","nodeType":"YulIdentifier","src":"3929:9:12"},"nativeSrc":"3929:32:12","nodeType":"YulFunctionCall","src":"3929:32:12"}],"functionName":{"name":"shr","nativeSrc":"3921:3:12","nodeType":"YulIdentifier","src":"3921:3:12"},"nativeSrc":"3921:41:12","nodeType":"YulFunctionCall","src":"3921:41:12"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:12","nodeType":"YulIdentifier","src":"3908:9:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1733,"isOffset":false,"isSlot":false,"src":"3943:6:12","valueSize":1},{"declaration":1742,"isOffset":false,"isSlot":false,"src":"3908:9:12","valueSize":1}],"flags":["memory-safe"],"id":1744,"nodeType":"InlineAssembly","src":"3869:103:12"},{"body":{"id":1781,"nodeType":"Block","src":"4015:291:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1755,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4121:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:12","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1762,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"4150:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1764,"indexExpression":{"id":1763,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"4157:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1760,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:12","typeDescriptions":{}}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:12","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1776,"nodeType":"IfStatement","src":"4117:150:12","trueBody":{"id":1775,"nodeType":"Block","src":"4167:100:12","statements":[{"expression":{"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1769,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"4235:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1771,"indexExpression":{"id":1770,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"4242:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1774,"nodeType":"ExpressionStatement","src":"4235:17:12"}]}},{"expression":{"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1777,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4280:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1780,"nodeType":"ExpressionStatement","src":"4280:15:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1749,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"4003:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1782,"initializationExpression":{"assignments":[1746],"declarations":[{"constant":false,"id":1746,"mutability":"mutable","name":"i","nameLocation":"3995:1:12","nodeType":"VariableDeclaration","scope":1782,"src":"3987:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1748,"initialValue":{"hexValue":"3431","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:12","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:12"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:12","subExpression":{"id":1752,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"4012:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1754,"nodeType":"ExpressionStatement","src":"4010:3:12"},"nodeType":"ForStatement","src":"3982:324:12"},{"expression":{"arguments":[{"id":1785,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"4329:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1783,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:12","typeDescriptions":{}}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1731,"id":1787,"nodeType":"Return","src":"4315:21:12"}]},"documentation":{"id":1725,"nodeType":"StructuredDocumentation","src":"3450:165:12","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1789,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:12","nodeType":"FunctionDefinition","parameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"mutability":"mutable","name":"addr","nameLocation":"3657:4:12","nodeType":"VariableDeclaration","scope":1789,"src":"3649:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1726,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:12"},"returnParameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1789,"src":"3686:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1729,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:12"},"scope":2863,"src":"3620:723:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1825,"nodeType":"Block","src":"4498:104:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1801,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"4521:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1799,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:12","typeDescriptions":{}}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:12","memberName":"length","nodeType":"MemberAccess","src":"4515:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1806,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"4540:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1804,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:12","typeDescriptions":{}}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:12","memberName":"length","nodeType":"MemberAccess","src":"4534:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1813,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"4569:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1811,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:12","typeDescriptions":{}}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1810,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1819,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"4592:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1817,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:12","typeDescriptions":{}}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1816,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1798,"id":1824,"nodeType":"Return","src":"4508:87:12"}]},"documentation":{"id":1790,"nodeType":"StructuredDocumentation","src":"4349:66:12","text":" @dev Returns true if the two strings are equal."},"id":1826,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:12","nodeType":"FunctionDefinition","parameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"mutability":"mutable","name":"a","nameLocation":"4449:1:12","nodeType":"VariableDeclaration","scope":1826,"src":"4435:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1791,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"b","nameLocation":"4466:1:12","nodeType":"VariableDeclaration","scope":1826,"src":"4452:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1793,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:12"},"returnParameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1826,"src":"4492:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1796,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:12"},"scope":2863,"src":"4420:182:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1844,"nodeType":"Block","src":"4899:64:12","statements":[{"expression":{"arguments":[{"id":1835,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"4926:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1839,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"4942:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1837,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:12","typeDescriptions":{}}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:12","memberName":"length","nodeType":"MemberAccess","src":"4936:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1834,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1845,1876],"referencedDeclaration":1876,"src":"4916:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1833,"id":1843,"nodeType":"Return","src":"4909:47:12"}]},"documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"4608:214:12","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1845,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:12","nodeType":"FunctionDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"input","nameLocation":"4860:5:12","nodeType":"VariableDeclaration","scope":1845,"src":"4846:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1828,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:12"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1845,"src":"4890:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:12"},"scope":2863,"src":"4827:136:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1875,"nodeType":"Block","src":"5368:153:12","statements":[{"assignments":[1858,1860],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"success","nameLocation":"5384:7:12","nodeType":"VariableDeclaration","scope":1875,"src":"5379:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1857,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"value","nameLocation":"5401:5:12","nodeType":"VariableDeclaration","scope":1875,"src":"5393:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1859,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1866,"initialValue":{"arguments":[{"id":1862,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"5423:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1863,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"5430:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1864,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"5437:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1861,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1897,1934],"referencedDeclaration":1934,"src":"5410:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:12"},{"condition":{"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:12","subExpression":{"id":1867,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"5456:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1872,"nodeType":"IfStatement","src":"5451:41:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1869,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"5472:18:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1871,"nodeType":"RevertStatement","src":"5465:27:12"}},{"expression":{"id":1873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"5509:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1856,"id":1874,"nodeType":"Return","src":"5502:12:12"}]},"documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"4969:294:12","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1876,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:12","nodeType":"FunctionDefinition","parameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"input","nameLocation":"5301:5:12","nodeType":"VariableDeclaration","scope":1876,"src":"5287:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1847,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"begin","nameLocation":"5316:5:12","nodeType":"VariableDeclaration","scope":1876,"src":"5308:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"end","nameLocation":"5331:3:12","nodeType":"VariableDeclaration","scope":1876,"src":"5323:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:12"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1876,"src":"5359:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:12"},"scope":2863,"src":"5268:253:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1896,"nodeType":"Block","src":"5842:83:12","statements":[{"expression":{"arguments":[{"id":1887,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"5888:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1891,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"5904:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1889,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:12","typeDescriptions":{}}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:12","memberName":"length","nodeType":"MemberAccess","src":"5898:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1886,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"5859:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1885,"id":1895,"nodeType":"Return","src":"5852:66:12"}]},"documentation":{"id":1877,"nodeType":"StructuredDocumentation","src":"5527:215:12","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1897,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:12","nodeType":"FunctionDefinition","parameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"input","nameLocation":"5783:5:12","nodeType":"VariableDeclaration","scope":1897,"src":"5769:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1878,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:12"},"returnParameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"success","nameLocation":"5818:7:12","nodeType":"VariableDeclaration","scope":1897,"src":"5813:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1881,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"value","nameLocation":"5835:5:12","nodeType":"VariableDeclaration","scope":1897,"src":"5827:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:12"},"scope":2863,"src":"5747:178:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1933,"nodeType":"Block","src":"6327:144:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1911,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"6341:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1914,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"6353:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1912,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:12","typeDescriptions":{}}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:12","memberName":"length","nodeType":"MemberAccess","src":"6347:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1918,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"6370:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1919,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"6378:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1926,"nodeType":"IfStatement","src":"6337:63:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1910,"id":1925,"nodeType":"Return","src":"6383:17:12"}},{"expression":{"arguments":[{"id":1928,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"6446:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1929,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"6453:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1930,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"6460:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1927,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"6417:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1910,"id":1932,"nodeType":"Return","src":"6410:54:12"}]},"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"5931:238:12","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1934,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:12","nodeType":"FunctionDefinition","parameters":{"id":1905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"input","nameLocation":"6219:5:12","nodeType":"VariableDeclaration","scope":1934,"src":"6205:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1899,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"begin","nameLocation":"6242:5:12","nodeType":"VariableDeclaration","scope":1934,"src":"6234:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1901,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1904,"mutability":"mutable","name":"end","nameLocation":"6265:3:12","nodeType":"VariableDeclaration","scope":1934,"src":"6257:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:12"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"success","nameLocation":"6303:7:12","nodeType":"VariableDeclaration","scope":1934,"src":"6298:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1906,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"value","nameLocation":"6320:5:12","nodeType":"VariableDeclaration","scope":1934,"src":"6312:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:12"},"scope":2863,"src":"6174:297:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2003,"nodeType":"Block","src":"6874:347:12","statements":[{"assignments":[1949],"declarations":[{"constant":false,"id":1949,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:12","nodeType":"VariableDeclaration","scope":2003,"src":"6884:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1948,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1954,"initialValue":{"arguments":[{"id":1952,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"6912:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1950,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:12","typeDescriptions":{}}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:12"},{"assignments":[1956],"declarations":[{"constant":false,"id":1956,"mutability":"mutable","name":"result","nameLocation":"6937:6:12","nodeType":"VariableDeclaration","scope":2003,"src":"6929:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1955,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1958,"initialValue":{"hexValue":"30","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:12"},{"body":{"id":1997,"nodeType":"Block","src":"6995:189:12","statements":[{"assignments":[1970],"declarations":[{"constant":false,"id":1970,"mutability":"mutable","name":"chr","nameLocation":"7015:3:12","nodeType":"VariableDeclaration","scope":1997,"src":"7009:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1969,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1980,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1975,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"7064:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1976,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"7072:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1974,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"7041:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1972,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:12","typeDescriptions":{}}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1971,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"7021:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1981,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"7094:3:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:12","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1988,"nodeType":"IfStatement","src":"7090:30:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1986,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1947,"id":1987,"nodeType":"Return","src":"7103:17:12"}},{"expression":{"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1989,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"7134:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1992,"nodeType":"ExpressionStatement","src":"7134:12:12"},{"expression":{"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1993,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"7160:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1994,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"7170:3:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1996,"nodeType":"ExpressionStatement","src":"7160:13:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1963,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"6981:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1964,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"6985:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1998,"initializationExpression":{"assignments":[1960],"declarations":[{"constant":false,"id":1960,"mutability":"mutable","name":"i","nameLocation":"6970:1:12","nodeType":"VariableDeclaration","scope":1998,"src":"6962:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1962,"initialValue":{"id":1961,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"6974:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:12"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:12","subExpression":{"id":1966,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"6992:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1968,"nodeType":"ExpressionStatement","src":"6990:3:12"},"nodeType":"ForStatement","src":"6957:227:12"},{"expression":{"components":[{"hexValue":"74727565","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2000,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"7207:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1947,"id":2002,"nodeType":"Return","src":"7193:21:12"}]},"documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"6477:224:12","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2004,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:12","nodeType":"FunctionDefinition","parameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"input","nameLocation":"6767:5:12","nodeType":"VariableDeclaration","scope":2004,"src":"6753:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1936,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"begin","nameLocation":"6790:5:12","nodeType":"VariableDeclaration","scope":2004,"src":"6782:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"end","nameLocation":"6813:3:12","nodeType":"VariableDeclaration","scope":2004,"src":"6805:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:12"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"success","nameLocation":"6850:7:12","nodeType":"VariableDeclaration","scope":2004,"src":"6845:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1943,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1946,"mutability":"mutable","name":"value","nameLocation":"6867:5:12","nodeType":"VariableDeclaration","scope":2004,"src":"6859:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:12"},"scope":2863,"src":"6706:515:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2022,"nodeType":"Block","src":"7518:63:12","statements":[{"expression":{"arguments":[{"id":2013,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"7544:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2017,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"7560:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2015,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:12","typeDescriptions":{}}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:12","memberName":"length","nodeType":"MemberAccess","src":"7554:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2012,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2023,2054],"referencedDeclaration":2054,"src":"7535:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2011,"id":2021,"nodeType":"Return","src":"7528:46:12"}]},"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"7227:216:12","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2023,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:12","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"input","nameLocation":"7480:5:12","nodeType":"VariableDeclaration","scope":2023,"src":"7466:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2006,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:12"},"returnParameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2023,"src":"7510:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2009,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:12"},"scope":2863,"src":"7448:133:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2053,"nodeType":"Block","src":"7986:151:12","statements":[{"assignments":[2036,2038],"declarations":[{"constant":false,"id":2036,"mutability":"mutable","name":"success","nameLocation":"8002:7:12","nodeType":"VariableDeclaration","scope":2053,"src":"7997:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2035,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"value","nameLocation":"8018:5:12","nodeType":"VariableDeclaration","scope":2053,"src":"8011:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2037,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2044,"initialValue":{"arguments":[{"id":2040,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"8039:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2041,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"8046:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2042,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"8053:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2039,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2075,2117],"referencedDeclaration":2117,"src":"8027:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:12"},{"condition":{"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:12","subExpression":{"id":2045,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"8072:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2050,"nodeType":"IfStatement","src":"8067:41:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2047,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"8088:18:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2049,"nodeType":"RevertStatement","src":"8081:27:12"}},{"expression":{"id":2051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"8125:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2034,"id":2052,"nodeType":"Return","src":"8118:12:12"}]},"documentation":{"id":2024,"nodeType":"StructuredDocumentation","src":"7587:296:12","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2054,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:12","nodeType":"FunctionDefinition","parameters":{"id":2031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2026,"mutability":"mutable","name":"input","nameLocation":"7920:5:12","nodeType":"VariableDeclaration","scope":2054,"src":"7906:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2025,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2028,"mutability":"mutable","name":"begin","nameLocation":"7935:5:12","nodeType":"VariableDeclaration","scope":2054,"src":"7927:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2027,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2030,"mutability":"mutable","name":"end","nameLocation":"7950:3:12","nodeType":"VariableDeclaration","scope":2054,"src":"7942:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:12"},"returnParameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2054,"src":"7978:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2032,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:12"},"scope":2863,"src":"7888:249:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2074,"nodeType":"Block","src":"8528:82:12","statements":[{"expression":{"arguments":[{"id":2065,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"8573:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2069,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"8589:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2067,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:12","typeDescriptions":{}}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:12","memberName":"length","nodeType":"MemberAccess","src":"8583:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2064,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"8545:27:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2063,"id":2073,"nodeType":"Return","src":"8538:65:12"}]},"documentation":{"id":2055,"nodeType":"StructuredDocumentation","src":"8143:287:12","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2075,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:12","nodeType":"FunctionDefinition","parameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"mutability":"mutable","name":"input","nameLocation":"8470:5:12","nodeType":"VariableDeclaration","scope":2075,"src":"8456:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2056,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:12"},"returnParameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"success","nameLocation":"8505:7:12","nodeType":"VariableDeclaration","scope":2075,"src":"8500:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2059,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2062,"mutability":"mutable","name":"value","nameLocation":"8521:5:12","nodeType":"VariableDeclaration","scope":2075,"src":"8514:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2061,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:12"},"scope":2863,"src":"8435:175:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2080,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:12","nodeType":"VariableDeclaration","scope":2863,"src":"8616:50:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:12","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2116,"nodeType":"Block","src":"9132:143:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2094,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"9146:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2097,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"9158:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2095,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:12","typeDescriptions":{}}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:12","memberName":"length","nodeType":"MemberAccess","src":"9152:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2101,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"9175:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2102,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"9183:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2109,"nodeType":"IfStatement","src":"9142:63:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2093,"id":2108,"nodeType":"Return","src":"9188:17:12"}},{"expression":{"arguments":[{"id":2111,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"9250:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2112,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"9257:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2113,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"9264:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2110,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"9222:27:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2093,"id":2115,"nodeType":"Return","src":"9215:53:12"}]},"documentation":{"id":2081,"nodeType":"StructuredDocumentation","src":"8673:303:12","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2117,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:12","nodeType":"FunctionDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"input","nameLocation":"9025:5:12","nodeType":"VariableDeclaration","scope":2117,"src":"9011:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2082,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2085,"mutability":"mutable","name":"begin","nameLocation":"9048:5:12","nodeType":"VariableDeclaration","scope":2117,"src":"9040:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2084,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2087,"mutability":"mutable","name":"end","nameLocation":"9071:3:12","nodeType":"VariableDeclaration","scope":2117,"src":"9063:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:12"},"returnParameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"success","nameLocation":"9109:7:12","nodeType":"VariableDeclaration","scope":2117,"src":"9104:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2089,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2092,"mutability":"mutable","name":"value","nameLocation":"9125:5:12","nodeType":"VariableDeclaration","scope":2117,"src":"9118:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2091,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:12"},"scope":2863,"src":"8981:294:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2237,"nodeType":"Block","src":"9675:812:12","statements":[{"assignments":[2132],"declarations":[{"constant":false,"id":2132,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:12","nodeType":"VariableDeclaration","scope":2237,"src":"9685:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2131,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2137,"initialValue":{"arguments":[{"id":2135,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"9713:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2133,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:12","typeDescriptions":{}}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:12"},{"assignments":[2139],"declarations":[{"constant":false,"id":2139,"mutability":"mutable","name":"sign","nameLocation":"9783:4:12","nodeType":"VariableDeclaration","scope":2237,"src":"9776:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2138,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2155,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2140,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"9790:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2141,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"9799:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2150,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"9847:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2151,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"9855:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2149,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"9824:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2147,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:12","typeDescriptions":{}}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:12","trueExpression":{"arguments":[{"hexValue":"30","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2143,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:12","typeDescriptions":{}}},"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:12"},{"assignments":[2157],"declarations":[{"constant":false,"id":2157,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:12","nodeType":"VariableDeclaration","scope":2237,"src":"9943:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2156,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2164,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2158,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"9963:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2159,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:12","typeDescriptions":{}}},"id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:12"},{"assignments":[2166],"declarations":[{"constant":false,"id":2166,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:12","nodeType":"VariableDeclaration","scope":2237,"src":"9992:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2165,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2173,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2167,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"10012:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2168,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:12","typeDescriptions":{}}},"id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:12"},{"assignments":[2175],"declarations":[{"constant":false,"id":2175,"mutability":"mutable","name":"offset","nameLocation":"10049:6:12","nodeType":"VariableDeclaration","scope":2237,"src":"10041:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2174,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2182,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2176,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"10059:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2177,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"10075:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"10058:37:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:12"},{"assignments":[2184,2186],"declarations":[{"constant":false,"id":2184,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:12","nodeType":"VariableDeclaration","scope":2237,"src":"10109:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2183,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2186,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:12","nodeType":"VariableDeclaration","scope":2237,"src":"10126:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2194,"initialValue":{"arguments":[{"id":2188,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"10159:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2189,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"10166:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2190,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"10174:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2192,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"10182:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2187,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1897,1934],"referencedDeclaration":1934,"src":"10146:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2195,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"10201:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2196,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"10215:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2197,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"10226:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2215,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"10343:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2216,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"10357:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2218,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"10373:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2219,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"10385:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2233,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2130,"id":2234,"nodeType":"Return","src":"10463:17:12"},"id":2235,"nodeType":"IfStatement","src":"10339:141:12","trueBody":{"id":2230,"nodeType":"Block","src":"10401:56:12","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2224,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2223,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:12","memberName":"min","nodeType":"MemberAccess","src":"10429:16:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2228,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2130,"id":2229,"nodeType":"Return","src":"10415:31:12"}]}},"id":2236,"nodeType":"IfStatement","src":"10197:283:12","trueBody":{"id":2214,"nodeType":"Block","src":"10242:91:12","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2201,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"10270:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2209,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"10312:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2207,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:12","typeDescriptions":{}}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:12","trueExpression":{"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:12","subExpression":{"arguments":[{"id":2204,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"10293:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2202,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:12","typeDescriptions":{}}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2130,"id":2213,"nodeType":"Return","src":"10256:66:12"}]}}]},"documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"9281:223:12","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2238,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:12","nodeType":"FunctionDefinition","parameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"input","nameLocation":"9569:5:12","nodeType":"VariableDeclaration","scope":2238,"src":"9555:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2119,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2122,"mutability":"mutable","name":"begin","nameLocation":"9592:5:12","nodeType":"VariableDeclaration","scope":2238,"src":"9584:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2121,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2124,"mutability":"mutable","name":"end","nameLocation":"9615:3:12","nodeType":"VariableDeclaration","scope":2238,"src":"9607:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:12"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"success","nameLocation":"9652:7:12","nodeType":"VariableDeclaration","scope":2238,"src":"9647:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2126,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"value","nameLocation":"9668:5:12","nodeType":"VariableDeclaration","scope":2238,"src":"9661:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2128,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:12"},"scope":2863,"src":"9509:978:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2256,"nodeType":"Block","src":"10832:67:12","statements":[{"expression":{"arguments":[{"id":2247,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"10862:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2251,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"10878:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2249,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:12","typeDescriptions":{}}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:12","memberName":"length","nodeType":"MemberAccess","src":"10872:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2246,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2257,2288],"referencedDeclaration":2288,"src":"10849:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2245,"id":2255,"nodeType":"Return","src":"10842:50:12"}]},"documentation":{"id":2239,"nodeType":"StructuredDocumentation","src":"10493:259:12","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2257,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:12","nodeType":"FunctionDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"input","nameLocation":"10793:5:12","nodeType":"VariableDeclaration","scope":2257,"src":"10779:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2240,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:12"},"returnParameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2257,"src":"10823:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:12"},"scope":2863,"src":"10757:142:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2287,"nodeType":"Block","src":"11320:156:12","statements":[{"assignments":[2270,2272],"declarations":[{"constant":false,"id":2270,"mutability":"mutable","name":"success","nameLocation":"11336:7:12","nodeType":"VariableDeclaration","scope":2287,"src":"11331:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2269,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2272,"mutability":"mutable","name":"value","nameLocation":"11353:5:12","nodeType":"VariableDeclaration","scope":2287,"src":"11345:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2278,"initialValue":{"arguments":[{"id":2274,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"11378:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2275,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"11385:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2276,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"11392:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2273,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2309,2346],"referencedDeclaration":2346,"src":"11362:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:12"},{"condition":{"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:12","subExpression":{"id":2279,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"11411:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2284,"nodeType":"IfStatement","src":"11406:41:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2281,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"11427:18:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2283,"nodeType":"RevertStatement","src":"11420:27:12"}},{"expression":{"id":2285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"11464:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2268,"id":2286,"nodeType":"Return","src":"11457:12:12"}]},"documentation":{"id":2258,"nodeType":"StructuredDocumentation","src":"10905:307:12","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2288,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:12","nodeType":"FunctionDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"input","nameLocation":"11253:5:12","nodeType":"VariableDeclaration","scope":2288,"src":"11239:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2259,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2262,"mutability":"mutable","name":"begin","nameLocation":"11268:5:12","nodeType":"VariableDeclaration","scope":2288,"src":"11260:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2264,"mutability":"mutable","name":"end","nameLocation":"11283:3:12","nodeType":"VariableDeclaration","scope":2288,"src":"11275:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2263,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:12"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2288,"src":"11311:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:12"},"scope":2863,"src":"11217:259:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2308,"nodeType":"Block","src":"11803:86:12","statements":[{"expression":{"arguments":[{"id":2299,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"11852:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2303,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"11868:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2301,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:12","typeDescriptions":{}}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:12","memberName":"length","nodeType":"MemberAccess","src":"11862:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2298,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"11820:31:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2297,"id":2307,"nodeType":"Return","src":"11813:69:12"}]},"documentation":{"id":2289,"nodeType":"StructuredDocumentation","src":"11482:218:12","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2309,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:12","nodeType":"FunctionDefinition","parameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"input","nameLocation":"11744:5:12","nodeType":"VariableDeclaration","scope":2309,"src":"11730:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2290,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:12"},"returnParameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"success","nameLocation":"11779:7:12","nodeType":"VariableDeclaration","scope":2309,"src":"11774:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2293,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"value","nameLocation":"11796:5:12","nodeType":"VariableDeclaration","scope":2309,"src":"11788:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:12"},"scope":2863,"src":"11705:184:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2345,"nodeType":"Block","src":"12297:147:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2323,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"12311:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2326,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"12323:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2324,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:12","typeDescriptions":{}}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:12","memberName":"length","nodeType":"MemberAccess","src":"12317:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2330,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"12340:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2331,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"12348:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2338,"nodeType":"IfStatement","src":"12307:63:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2336,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2322,"id":2337,"nodeType":"Return","src":"12353:17:12"}},{"expression":{"arguments":[{"id":2340,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"12419:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2341,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"12426:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2342,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"12433:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2339,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"12387:31:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2322,"id":2344,"nodeType":"Return","src":"12380:57:12"}]},"documentation":{"id":2310,"nodeType":"StructuredDocumentation","src":"11895:241:12","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2346,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:12","nodeType":"FunctionDefinition","parameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"input","nameLocation":"12189:5:12","nodeType":"VariableDeclaration","scope":2346,"src":"12175:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2311,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2314,"mutability":"mutable","name":"begin","nameLocation":"12212:5:12","nodeType":"VariableDeclaration","scope":2346,"src":"12204:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2316,"mutability":"mutable","name":"end","nameLocation":"12235:3:12","nodeType":"VariableDeclaration","scope":2346,"src":"12227:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2315,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:12"},"returnParameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"success","nameLocation":"12273:7:12","nodeType":"VariableDeclaration","scope":2346,"src":"12268:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2318,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"value","nameLocation":"12290:5:12","nodeType":"VariableDeclaration","scope":2346,"src":"12282:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:12"},"scope":2863,"src":"12141:303:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2448,"nodeType":"Block","src":"12853:881:12","statements":[{"assignments":[2361],"declarations":[{"constant":false,"id":2361,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:12","nodeType":"VariableDeclaration","scope":2448,"src":"12863:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2360,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2366,"initialValue":{"arguments":[{"id":2364,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"12891:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2362,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:12","typeDescriptions":{}}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:12"},{"assignments":[2368],"declarations":[{"constant":false,"id":2368,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:12","nodeType":"VariableDeclaration","scope":2448,"src":"12945:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2367,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2388,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2369,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"12963:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2370,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"12969:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2374,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2378,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"13013:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2379,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"13021:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2377,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"12990:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2375,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:12","typeDescriptions":{}}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2382,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:12","typeDescriptions":{}}},"id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:12"},{"assignments":[2390],"declarations":[{"constant":false,"id":2390,"mutability":"mutable","name":"offset","nameLocation":"13133:6:12","nodeType":"VariableDeclaration","scope":2448,"src":"13125:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2396,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2391,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"13142:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"13142:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:12"},{"assignments":[2398],"declarations":[{"constant":false,"id":2398,"mutability":"mutable","name":"result","nameLocation":"13183:6:12","nodeType":"VariableDeclaration","scope":2448,"src":"13175:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2400,"initialValue":{"hexValue":"30","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:12"},{"body":{"id":2442,"nodeType":"Block","src":"13250:447:12","statements":[{"assignments":[2414],"declarations":[{"constant":false,"id":2414,"mutability":"mutable","name":"chr","nameLocation":"13270:3:12","nodeType":"VariableDeclaration","scope":2442,"src":"13264:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2413,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2424,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2419,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"13319:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2420,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"13327:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2418,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"13296:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2416,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:12","typeDescriptions":{}}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2415,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"13276:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"13349:3:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2432,"nodeType":"IfStatement","src":"13345:31:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2359,"id":2431,"nodeType":"Return","src":"13359:17:12"}},{"expression":{"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2433,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"13390:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2436,"nodeType":"ExpressionStatement","src":"13390:12:12"},{"id":2441,"nodeType":"UncheckedBlock","src":"13416:271:12","statements":[{"expression":{"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2437,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"13659:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2438,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"13669:3:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2440,"nodeType":"ExpressionStatement","src":"13659:13:12"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2407,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"13236:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2408,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"13240:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2443,"initializationExpression":{"assignments":[2402],"declarations":[{"constant":false,"id":2402,"mutability":"mutable","name":"i","nameLocation":"13216:1:12","nodeType":"VariableDeclaration","scope":2443,"src":"13208:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2401,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2406,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2403,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"13220:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2404,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"13228:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:12"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:12","subExpression":{"id":2410,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"13247:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2412,"nodeType":"ExpressionStatement","src":"13245:3:12"},"nodeType":"ForStatement","src":"13203:494:12"},{"expression":{"components":[{"hexValue":"74727565","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2445,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"13720:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2359,"id":2447,"nodeType":"Return","src":"13706:21:12"}]},"documentation":{"id":2347,"nodeType":"StructuredDocumentation","src":"12450:227:12","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2449,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:12","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"input","nameLocation":"12746:5:12","nodeType":"VariableDeclaration","scope":2449,"src":"12732:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2348,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2351,"mutability":"mutable","name":"begin","nameLocation":"12769:5:12","nodeType":"VariableDeclaration","scope":2449,"src":"12761:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2353,"mutability":"mutable","name":"end","nameLocation":"12792:3:12","nodeType":"VariableDeclaration","scope":2449,"src":"12784:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:12"},"returnParameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"success","nameLocation":"12829:7:12","nodeType":"VariableDeclaration","scope":2449,"src":"12824:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2355,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2358,"mutability":"mutable","name":"value","nameLocation":"12846:5:12","nodeType":"VariableDeclaration","scope":2449,"src":"12838:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:12"},"scope":2863,"src":"12682:1052:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2467,"nodeType":"Block","src":"14032:67:12","statements":[{"expression":{"arguments":[{"id":2458,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"14062:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2462,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"14078:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2460,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:12","typeDescriptions":{}}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:12","memberName":"length","nodeType":"MemberAccess","src":"14072:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2457,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2468,2499],"referencedDeclaration":2499,"src":"14049:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2456,"id":2466,"nodeType":"Return","src":"14042:50:12"}]},"documentation":{"id":2450,"nodeType":"StructuredDocumentation","src":"13740:212:12","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2468,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:12","nodeType":"FunctionDefinition","parameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"input","nameLocation":"13993:5:12","nodeType":"VariableDeclaration","scope":2468,"src":"13979:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2451,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:12"},"returnParameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2468,"src":"14023:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:12"},"scope":2863,"src":"13957:142:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2498,"nodeType":"Block","src":"14472:165:12","statements":[{"assignments":[2481,2483],"declarations":[{"constant":false,"id":2481,"mutability":"mutable","name":"success","nameLocation":"14488:7:12","nodeType":"VariableDeclaration","scope":2498,"src":"14483:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2480,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2483,"mutability":"mutable","name":"value","nameLocation":"14505:5:12","nodeType":"VariableDeclaration","scope":2498,"src":"14497:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2482,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2489,"initialValue":{"arguments":[{"id":2485,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"14530:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2486,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"14537:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2487,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"14544:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2484,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2520,2624],"referencedDeclaration":2624,"src":"14514:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:12"},{"condition":{"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:12","subExpression":{"id":2490,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"14563:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2495,"nodeType":"IfStatement","src":"14558:50:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2492,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"14579:27:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2494,"nodeType":"RevertStatement","src":"14572:36:12"}},{"expression":{"id":2496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"14625:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2479,"id":2497,"nodeType":"Return","src":"14618:12:12"}]},"documentation":{"id":2469,"nodeType":"StructuredDocumentation","src":"14105:259:12","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2499,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:12","nodeType":"FunctionDefinition","parameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"input","nameLocation":"14405:5:12","nodeType":"VariableDeclaration","scope":2499,"src":"14391:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2470,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"begin","nameLocation":"14420:5:12","nodeType":"VariableDeclaration","scope":2499,"src":"14412:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2475,"mutability":"mutable","name":"end","nameLocation":"14435:3:12","nodeType":"VariableDeclaration","scope":2499,"src":"14427:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:12"},"returnParameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2499,"src":"14463:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2477,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:12"},"scope":2863,"src":"14369:268:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2519,"nodeType":"Block","src":"14944:70:12","statements":[{"expression":{"arguments":[{"id":2510,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"14977:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2514,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"14993:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2512,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:12","typeDescriptions":{}}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:12","memberName":"length","nodeType":"MemberAccess","src":"14987:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2509,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2520,2624],"referencedDeclaration":2624,"src":"14961:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2508,"id":2518,"nodeType":"Return","src":"14954:53:12"}]},"documentation":{"id":2500,"nodeType":"StructuredDocumentation","src":"14643:198:12","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2520,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:12","nodeType":"FunctionDefinition","parameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2502,"mutability":"mutable","name":"input","nameLocation":"14885:5:12","nodeType":"VariableDeclaration","scope":2520,"src":"14871:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2501,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:12"},"returnParameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"success","nameLocation":"14920:7:12","nodeType":"VariableDeclaration","scope":2520,"src":"14915:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2504,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"value","nameLocation":"14937:5:12","nodeType":"VariableDeclaration","scope":2520,"src":"14929:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2506,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:12"},"scope":2863,"src":"14846:168:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2623,"nodeType":"Block","src":"15407:733:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2534,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"15421:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2537,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"15433:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2535,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:12","typeDescriptions":{}}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:12","memberName":"length","nodeType":"MemberAccess","src":"15427:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2541,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"15450:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2542,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"15458:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2552,"nodeType":"IfStatement","src":"15417:72:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2546,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:12","typeDescriptions":{}}},"id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2533,"id":2551,"nodeType":"Return","src":"15463:26:12"}},{"assignments":[2554],"declarations":[{"constant":false,"id":2554,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:12","nodeType":"VariableDeclaration","scope":2623,"src":"15500:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2553,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2577,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2555,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"15518:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2556,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"15524:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2566,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"15574:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2564,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:12","typeDescriptions":{}}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2568,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"15582:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2563,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"15545:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2561,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:12","typeDescriptions":{}}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2571,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:12","typeDescriptions":{}}},"id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:12"},{"assignments":[2579],"declarations":[{"constant":false,"id":2579,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:12","nodeType":"VariableDeclaration","scope":2623,"src":"15686:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2587,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:12","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2581,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"15716:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"15716:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2588,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"15803:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2589,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"15809:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2591,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"15818:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2621,"nodeType":"Block","src":"16083:51:12","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2615,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:12","typeDescriptions":{}}},"id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2533,"id":2620,"nodeType":"Return","src":"16097:26:12"}]},"id":2622,"nodeType":"IfStatement","src":"15799:335:12","trueBody":{"id":2613,"nodeType":"Block","src":"15834:243:12","statements":[{"assignments":[2594,2596],"declarations":[{"constant":false,"id":2594,"mutability":"mutable","name":"s","nameLocation":"15955:1:12","nodeType":"VariableDeclaration","scope":2613,"src":"15950:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2593,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2596,"mutability":"mutable","name":"v","nameLocation":"15966:1:12","nodeType":"VariableDeclaration","scope":2613,"src":"15958:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2602,"initialValue":{"arguments":[{"id":2598,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"16003:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2599,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"16010:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2600,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"16017:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2597,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"15971:31:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:12"},{"expression":{"components":[{"id":2603,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"16043:1:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2608,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"16062:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2606,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:12","typeDescriptions":{}}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2604,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:12","typeDescriptions":{}}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2533,"id":2612,"nodeType":"Return","src":"16035:31:12"}]}}]},"documentation":{"id":2521,"nodeType":"StructuredDocumentation","src":"15020:226:12","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2624,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:12","nodeType":"FunctionDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"input","nameLocation":"15299:5:12","nodeType":"VariableDeclaration","scope":2624,"src":"15285:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2522,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"begin","nameLocation":"15322:5:12","nodeType":"VariableDeclaration","scope":2624,"src":"15314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2527,"mutability":"mutable","name":"end","nameLocation":"15345:3:12","nodeType":"VariableDeclaration","scope":2624,"src":"15337:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2526,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:12"},"returnParameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"success","nameLocation":"15383:7:12","nodeType":"VariableDeclaration","scope":2624,"src":"15378:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2529,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2532,"mutability":"mutable","name":"value","nameLocation":"15400:5:12","nodeType":"VariableDeclaration","scope":2624,"src":"15392:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2531,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:12"},"scope":2863,"src":"15251:889:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2683,"nodeType":"Block","src":"16209:461:12","statements":[{"assignments":[2632],"declarations":[{"constant":false,"id":2632,"mutability":"mutable","name":"value","nameLocation":"16225:5:12","nodeType":"VariableDeclaration","scope":2683,"src":"16219:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2631,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2637,"initialValue":{"arguments":[{"id":2635,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"16239:3:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2633,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:12","typeDescriptions":{}}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:12"},{"id":2680,"nodeType":"UncheckedBlock","src":"16403:238:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"16431:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:12","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"16445:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:12","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"16491:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:12","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"16505:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:12","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"16552:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"16566:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:12","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2672,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2671,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:12","memberName":"max","nodeType":"MemberAccess","src":"16615:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2630,"id":2676,"nodeType":"Return","src":"16608:22:12"},"id":2677,"nodeType":"IfStatement","src":"16548:82:12","trueBody":{"expression":{"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"16578:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:12","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2670,"nodeType":"ExpressionStatement","src":"16578:11:12"}},"id":2678,"nodeType":"IfStatement","src":"16487:143:12","trueBody":{"expression":{"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"16518:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:12","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2659,"nodeType":"ExpressionStatement","src":"16518:11:12"}},"id":2679,"nodeType":"IfStatement","src":"16427:203:12","trueBody":{"expression":{"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"16457:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:12","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2648,"nodeType":"ExpressionStatement","src":"16457:11:12"}}]},{"expression":{"id":2681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"16658:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2630,"id":2682,"nodeType":"Return","src":"16651:12:12"}]},"id":2684,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:12","nodeType":"FunctionDefinition","parameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2626,"mutability":"mutable","name":"chr","nameLocation":"16175:3:12","nodeType":"VariableDeclaration","scope":2684,"src":"16168:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2625,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:12"},"returnParameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2684,"src":"16202:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2628,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:12"},"scope":2863,"src":"16146:524:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2849,"nodeType":"Block","src":"17336:1331:12","statements":[{"assignments":[2693],"declarations":[{"constant":false,"id":2693,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:12","nodeType":"VariableDeclaration","scope":2849,"src":"17346:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2692,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2698,"initialValue":{"arguments":[{"id":2696,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"17374:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2694,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:12","typeDescriptions":{}}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:12"},{"assignments":[2700],"declarations":[{"constant":false,"id":2700,"mutability":"mutable","name":"output","nameLocation":"17403:6:12","nodeType":"VariableDeclaration","scope":2849,"src":"17390:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2699,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2708,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2704,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"17426:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:12","memberName":"length","nodeType":"MemberAccess","src":"17426:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2701,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:12"},{"assignments":[2710],"declarations":[{"constant":false,"id":2710,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:12","nodeType":"VariableDeclaration","scope":2849,"src":"17473:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2709,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2712,"initialValue":{"hexValue":"30","id":2711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:12"},{"body":{"id":2841,"nodeType":"Block","src":"17548:854:12","statements":[{"assignments":[2724],"declarations":[{"constant":false,"id":2724,"mutability":"mutable","name":"char","nameLocation":"17569:4:12","nodeType":"VariableDeclaration","scope":2841,"src":"17562:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2723,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2732,"initialValue":{"arguments":[{"arguments":[{"id":2728,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"17606:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2729,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"17614:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2727,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"17583:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2725,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:12","typeDescriptions":{}}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:12"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2733,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"17637:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":2737,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"17672:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2735,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:12","typeDescriptions":{}}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2740,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2839,"nodeType":"Block","src":"18330:62:12","statements":[{"expression":{"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2832,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"18348:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2835,"indexExpression":{"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:12","subExpression":{"id":2833,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"18355:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2836,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"18373:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2838,"nodeType":"ExpressionStatement","src":"18348:29:12"}]},"id":2840,"nodeType":"IfStatement","src":"17631:761:12","trueBody":{"id":2831,"nodeType":"Block","src":"17687:637:12","statements":[{"expression":{"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2746,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"17705:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2749,"indexExpression":{"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:12","subExpression":{"id":2747,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"17712:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2752,"nodeType":"ExpressionStatement","src":"17705:29:12"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2753,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"17756:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2763,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"17825:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":2764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:12","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2773,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"17894:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2783,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"17963:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:12","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2793,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"18032:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:12","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2803,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"18101:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:12","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2813,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"18171:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:12","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2824,"nodeType":"IfStatement","src":"18167:143:12","trueBody":{"id":2823,"nodeType":"Block","src":"18185:125:12","statements":[{"expression":{"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2816,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"18263:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2819,"indexExpression":{"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:12","subExpression":{"id":2817,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"18270:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2822,"nodeType":"ExpressionStatement","src":"18263:28:12"}]}},"id":2825,"nodeType":"IfStatement","src":"18097:213:12","trueBody":{"expression":{"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2806,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"18115:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2809,"indexExpression":{"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:12","subExpression":{"id":2807,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"18122:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2812,"nodeType":"ExpressionStatement","src":"18115:29:12"}},"id":2826,"nodeType":"IfStatement","src":"18028:282:12","trueBody":{"expression":{"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2796,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"18046:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2799,"indexExpression":{"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:12","subExpression":{"id":2797,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"18053:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2802,"nodeType":"ExpressionStatement","src":"18046:28:12"}},"id":2827,"nodeType":"IfStatement","src":"17959:351:12","trueBody":{"expression":{"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2786,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"17977:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2789,"indexExpression":{"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:12","subExpression":{"id":2787,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"17984:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2792,"nodeType":"ExpressionStatement","src":"17977:28:12"}},"id":2828,"nodeType":"IfStatement","src":"17890:420:12","trueBody":{"expression":{"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2776,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"17908:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2779,"indexExpression":{"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:12","subExpression":{"id":2777,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"17915:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2782,"nodeType":"ExpressionStatement","src":"17908:28:12"}},"id":2829,"nodeType":"IfStatement","src":"17821:489:12","trueBody":{"expression":{"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2766,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"17839:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2769,"indexExpression":{"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:12","subExpression":{"id":2767,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"17846:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2772,"nodeType":"ExpressionStatement","src":"17839:28:12"}},"id":2830,"nodeType":"IfStatement","src":"17752:558:12","trueBody":{"expression":{"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2756,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"17770:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2759,"indexExpression":{"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:12","subExpression":{"id":2757,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"17777:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2762,"nodeType":"ExpressionStatement","src":"17770:28:12"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2716,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"17524:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2717,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"17528:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:12","memberName":"length","nodeType":"MemberAccess","src":"17528:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2842,"initializationExpression":{"assignments":[2714],"declarations":[{"constant":false,"id":2714,"mutability":"mutable","name":"i","nameLocation":"17521:1:12","nodeType":"VariableDeclaration","scope":2842,"src":"17513:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2713,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2715,"nodeType":"VariableDeclarationStatement","src":"17513:9:12"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:12","subExpression":{"id":2720,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"17545:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2722,"nodeType":"ExpressionStatement","src":"17543:3:12"},"nodeType":"ForStatement","src":"17508:894:12"},{"AST":{"nativeSrc":"18500:129:12","nodeType":"YulBlock","src":"18500:129:12","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:12","nodeType":"YulIdentifier","src":"18521:6:12"},{"name":"outputLength","nativeSrc":"18529:12:12","nodeType":"YulIdentifier","src":"18529:12:12"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:12","nodeType":"YulIdentifier","src":"18514:6:12"},"nativeSrc":"18514:28:12","nodeType":"YulFunctionCall","src":"18514:28:12"},"nativeSrc":"18514:28:12","nodeType":"YulExpressionStatement","src":"18514:28:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:12","nodeType":"YulLiteral","src":"18562:4:12","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:12","nodeType":"YulIdentifier","src":"18572:6:12"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:12","nodeType":"YulLiteral","src":"18584:1:12","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:12","nodeType":"YulLiteral","src":"18591:1:12","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:12","nodeType":"YulIdentifier","src":"18598:12:12"},{"kind":"number","nativeSrc":"18612:2:12","nodeType":"YulLiteral","src":"18612:2:12","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:12","nodeType":"YulIdentifier","src":"18594:3:12"},"nativeSrc":"18594:21:12","nodeType":"YulFunctionCall","src":"18594:21:12"}],"functionName":{"name":"shr","nativeSrc":"18587:3:12","nodeType":"YulIdentifier","src":"18587:3:12"},"nativeSrc":"18587:29:12","nodeType":"YulFunctionCall","src":"18587:29:12"}],"functionName":{"name":"shl","nativeSrc":"18580:3:12","nodeType":"YulIdentifier","src":"18580:3:12"},"nativeSrc":"18580:37:12","nodeType":"YulFunctionCall","src":"18580:37:12"}],"functionName":{"name":"add","nativeSrc":"18568:3:12","nodeType":"YulIdentifier","src":"18568:3:12"},"nativeSrc":"18568:50:12","nodeType":"YulFunctionCall","src":"18568:50:12"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:12","nodeType":"YulIdentifier","src":"18555:6:12"},"nativeSrc":"18555:64:12","nodeType":"YulFunctionCall","src":"18555:64:12"},"nativeSrc":"18555:64:12","nodeType":"YulExpressionStatement","src":"18555:64:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":2700,"isOffset":false,"isSlot":false,"src":"18521:6:12","valueSize":1},{"declaration":2700,"isOffset":false,"isSlot":false,"src":"18572:6:12","valueSize":1},{"declaration":2710,"isOffset":false,"isSlot":false,"src":"18529:12:12","valueSize":1},{"declaration":2710,"isOffset":false,"isSlot":false,"src":"18598:12:12","valueSize":1}],"flags":["memory-safe"],"id":2843,"nodeType":"InlineAssembly","src":"18475:154:12"},{"expression":{"arguments":[{"id":2846,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"18653:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2844,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:12","typeDescriptions":{}}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2691,"id":2848,"nodeType":"Return","src":"18639:21:12"}]},"documentation":{"id":2685,"nodeType":"StructuredDocumentation","src":"16676:576:12","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":2850,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:12","nodeType":"FunctionDefinition","parameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2687,"mutability":"mutable","name":"input","nameLocation":"17291:5:12","nodeType":"VariableDeclaration","scope":2850,"src":"17277:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2686,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:12"},"returnParameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2850,"src":"17321:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2689,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:12"},"scope":2863,"src":"17257:1410:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2861,"nodeType":"Block","src":"19052:225:12","statements":[{"AST":{"nativeSrc":"19201:70:12","nodeType":"YulBlock","src":"19201:70:12","statements":[{"nativeSrc":"19215:46:12","nodeType":"YulAssignment","src":"19215:46:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:12","nodeType":"YulIdentifier","src":"19238:6:12"},{"kind":"number","nativeSrc":"19246:4:12","nodeType":"YulLiteral","src":"19246:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:12","nodeType":"YulIdentifier","src":"19234:3:12"},"nativeSrc":"19234:17:12","nodeType":"YulFunctionCall","src":"19234:17:12"},{"name":"offset","nativeSrc":"19253:6:12","nodeType":"YulIdentifier","src":"19253:6:12"}],"functionName":{"name":"add","nativeSrc":"19230:3:12","nodeType":"YulIdentifier","src":"19230:3:12"},"nativeSrc":"19230:30:12","nodeType":"YulFunctionCall","src":"19230:30:12"}],"functionName":{"name":"mload","nativeSrc":"19224:5:12","nodeType":"YulIdentifier","src":"19224:5:12"},"nativeSrc":"19224:37:12","nodeType":"YulFunctionCall","src":"19224:37:12"},"variableNames":[{"name":"value","nativeSrc":"19215:5:12","nodeType":"YulIdentifier","src":"19215:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2853,"isOffset":false,"isSlot":false,"src":"19238:6:12","valueSize":1},{"declaration":2855,"isOffset":false,"isSlot":false,"src":"19253:6:12","valueSize":1},{"declaration":2858,"isOffset":false,"isSlot":false,"src":"19215:5:12","valueSize":1}],"flags":["memory-safe"],"id":2860,"nodeType":"InlineAssembly","src":"19176:95:12"}]},"documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"18673:268:12","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2862,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:12","nodeType":"FunctionDefinition","parameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:12","nodeType":"VariableDeclaration","scope":2862,"src":"18978:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2852,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2855,"mutability":"mutable","name":"offset","nameLocation":"19007:6:12","nodeType":"VariableDeclaration","scope":2862,"src":"18999:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2854,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:12"},"returnParameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"mutability":"mutable","name":"value","nameLocation":"19045:5:12","nodeType":"VariableDeclaration","scope":2862,"src":"19037:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:12"},"scope":2863,"src":"18946:331:12","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2864,"src":"297:18982:12","usedErrors":[1521,1524,1527],"usedEvents":[]}],"src":"101:19179:12"},"id":12},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3211]},"id":3212,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2865,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2866,"nodeType":"StructuredDocumentation","src":"138:205:13","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3211,"linearizedBaseContracts":[3211],"name":"ECDSA","nameLocation":"352:5:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2871,"members":[{"id":2867,"name":"NoError","nameLocation":"392:7:13","nodeType":"EnumValue","src":"392:7:13"},{"id":2868,"name":"InvalidSignature","nameLocation":"409:16:13","nodeType":"EnumValue","src":"409:16:13"},{"id":2869,"name":"InvalidSignatureLength","nameLocation":"435:22:13","nodeType":"EnumValue","src":"435:22:13"},{"id":2870,"name":"InvalidSignatureS","nameLocation":"467:17:13","nodeType":"EnumValue","src":"467:17:13"}],"name":"RecoverError","nameLocation":"369:12:13","nodeType":"EnumDefinition","src":"364:126:13"},{"documentation":{"id":2872,"nodeType":"StructuredDocumentation","src":"496:63:13","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2874,"name":"ECDSAInvalidSignature","nameLocation":"570:21:13","nodeType":"ErrorDefinition","parameters":{"id":2873,"nodeType":"ParameterList","parameters":[],"src":"591:2:13"},"src":"564:30:13"},{"documentation":{"id":2875,"nodeType":"StructuredDocumentation","src":"600:60:13","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2879,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:13","nodeType":"ErrorDefinition","parameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2877,"mutability":"mutable","name":"length","nameLocation":"707:6:13","nodeType":"VariableDeclaration","scope":2879,"src":"699:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2876,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:13"},"src":"665:50:13"},{"documentation":{"id":2880,"nodeType":"StructuredDocumentation","src":"721:85:13","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2884,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:13","nodeType":"ErrorDefinition","parameters":{"id":2883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"s","nameLocation":"848:1:13","nodeType":"VariableDeclaration","scope":2884,"src":"840:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:13"},"src":"811:40:13"},{"body":{"id":2936,"nodeType":"Block","src":"2285:622:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2899,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"2299:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:13","memberName":"length","nodeType":"MemberAccess","src":"2299:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:13","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2934,"nodeType":"Block","src":"2793:108:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2921,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:13","typeDescriptions":{}}},"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2925,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"2827:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2871_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:13","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2869,"src":"2827:35:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2929,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"2872:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:13","memberName":"length","nodeType":"MemberAccess","src":"2872:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2927,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:13","typeDescriptions":{}}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2871_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2898,"id":2933,"nodeType":"Return","src":"2807:83:13"}]},"id":2935,"nodeType":"IfStatement","src":"2295:606:13","trueBody":{"id":2920,"nodeType":"Block","src":"2323:464:13","statements":[{"assignments":[2904],"declarations":[{"constant":false,"id":2904,"mutability":"mutable","name":"r","nameLocation":"2345:1:13","nodeType":"VariableDeclaration","scope":2920,"src":"2337:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2905,"nodeType":"VariableDeclarationStatement","src":"2337:9:13"},{"assignments":[2907],"declarations":[{"constant":false,"id":2907,"mutability":"mutable","name":"s","nameLocation":"2368:1:13","nodeType":"VariableDeclaration","scope":2920,"src":"2360:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2908,"nodeType":"VariableDeclarationStatement","src":"2360:9:13"},{"assignments":[2910],"declarations":[{"constant":false,"id":2910,"mutability":"mutable","name":"v","nameLocation":"2389:1:13","nodeType":"VariableDeclaration","scope":2920,"src":"2383:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2909,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2911,"nodeType":"VariableDeclarationStatement","src":"2383:7:13"},{"AST":{"nativeSrc":"2560:171:13","nodeType":"YulBlock","src":"2560:171:13","statements":[{"nativeSrc":"2578:32:13","nodeType":"YulAssignment","src":"2578:32:13","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:13","nodeType":"YulIdentifier","src":"2593:9:13"},{"kind":"number","nativeSrc":"2604:4:13","nodeType":"YulLiteral","src":"2604:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:13","nodeType":"YulIdentifier","src":"2589:3:13"},"nativeSrc":"2589:20:13","nodeType":"YulFunctionCall","src":"2589:20:13"}],"functionName":{"name":"mload","nativeSrc":"2583:5:13","nodeType":"YulIdentifier","src":"2583:5:13"},"nativeSrc":"2583:27:13","nodeType":"YulFunctionCall","src":"2583:27:13"},"variableNames":[{"name":"r","nativeSrc":"2578:1:13","nodeType":"YulIdentifier","src":"2578:1:13"}]},{"nativeSrc":"2627:32:13","nodeType":"YulAssignment","src":"2627:32:13","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:13","nodeType":"YulIdentifier","src":"2642:9:13"},{"kind":"number","nativeSrc":"2653:4:13","nodeType":"YulLiteral","src":"2653:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:13","nodeType":"YulIdentifier","src":"2638:3:13"},"nativeSrc":"2638:20:13","nodeType":"YulFunctionCall","src":"2638:20:13"}],"functionName":{"name":"mload","nativeSrc":"2632:5:13","nodeType":"YulIdentifier","src":"2632:5:13"},"nativeSrc":"2632:27:13","nodeType":"YulFunctionCall","src":"2632:27:13"},"variableNames":[{"name":"s","nativeSrc":"2627:1:13","nodeType":"YulIdentifier","src":"2627:1:13"}]},{"nativeSrc":"2676:41:13","nodeType":"YulAssignment","src":"2676:41:13","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:13","nodeType":"YulLiteral","src":"2686:1:13","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:13","nodeType":"YulIdentifier","src":"2699:9:13"},{"kind":"number","nativeSrc":"2710:4:13","nodeType":"YulLiteral","src":"2710:4:13","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:13","nodeType":"YulIdentifier","src":"2695:3:13"},"nativeSrc":"2695:20:13","nodeType":"YulFunctionCall","src":"2695:20:13"}],"functionName":{"name":"mload","nativeSrc":"2689:5:13","nodeType":"YulIdentifier","src":"2689:5:13"},"nativeSrc":"2689:27:13","nodeType":"YulFunctionCall","src":"2689:27:13"}],"functionName":{"name":"byte","nativeSrc":"2681:4:13","nodeType":"YulIdentifier","src":"2681:4:13"},"nativeSrc":"2681:36:13","nodeType":"YulFunctionCall","src":"2681:36:13"},"variableNames":[{"name":"v","nativeSrc":"2676:1:13","nodeType":"YulIdentifier","src":"2676:1:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2904,"isOffset":false,"isSlot":false,"src":"2578:1:13","valueSize":1},{"declaration":2907,"isOffset":false,"isSlot":false,"src":"2627:1:13","valueSize":1},{"declaration":2889,"isOffset":false,"isSlot":false,"src":"2593:9:13","valueSize":1},{"declaration":2889,"isOffset":false,"isSlot":false,"src":"2642:9:13","valueSize":1},{"declaration":2889,"isOffset":false,"isSlot":false,"src":"2699:9:13","valueSize":1},{"declaration":2910,"isOffset":false,"isSlot":false,"src":"2676:1:13","valueSize":1}],"flags":["memory-safe"],"id":2912,"nodeType":"InlineAssembly","src":"2535:196:13"},{"expression":{"arguments":[{"id":2914,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"2762:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2915,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"2768:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2916,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"2771:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2917,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"2774:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2913,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2937,3017,3125],"referencedDeclaration":3125,"src":"2751:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2871_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2871_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2898,"id":2919,"nodeType":"Return","src":"2744:32:13"}]}}]},"documentation":{"id":2885,"nodeType":"StructuredDocumentation","src":"857:1267:13","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2937,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:13","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"hash","nameLocation":"2166:4:13","nodeType":"VariableDeclaration","scope":2937,"src":"2158:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"signature","nameLocation":"2193:9:13","nodeType":"VariableDeclaration","scope":2937,"src":"2180:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2888,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:13"},"returnParameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:13","nodeType":"VariableDeclaration","scope":2937,"src":"2232:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2891,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2895,"mutability":"mutable","name":"err","nameLocation":"2264:3:13","nodeType":"VariableDeclaration","scope":2937,"src":"2251:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2894,"nodeType":"UserDefinedTypeName","pathNode":{"id":2893,"name":"RecoverError","nameLocations":["2251:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":2871,"src":"2251:12:13"},"referencedDeclaration":2871,"src":"2251:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:13","nodeType":"VariableDeclaration","scope":2937,"src":"2269:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:13"},"scope":3211,"src":"2129:778:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2966,"nodeType":"Block","src":"3801:168:13","statements":[{"assignments":[2948,2951,2953],"declarations":[{"constant":false,"id":2948,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:13","nodeType":"VariableDeclaration","scope":2966,"src":"3812:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2947,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2951,"mutability":"mutable","name":"error","nameLocation":"3844:5:13","nodeType":"VariableDeclaration","scope":2966,"src":"3831:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2950,"nodeType":"UserDefinedTypeName","pathNode":{"id":2949,"name":"RecoverError","nameLocations":["3831:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":2871,"src":"3831:12:13"},"referencedDeclaration":2871,"src":"3831:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2953,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:13","nodeType":"VariableDeclaration","scope":2966,"src":"3851:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2952,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2958,"initialValue":{"arguments":[{"id":2955,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"3882:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2956,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"3888:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2954,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2937,3017,3125],"referencedDeclaration":2937,"src":"3871:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2871_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2871_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:13"},{"expression":{"arguments":[{"id":2960,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"3920:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},{"id":2961,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"3927:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2959,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"3908:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2871_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2963,"nodeType":"ExpressionStatement","src":"3908:28:13"},{"expression":{"id":2964,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"3953:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2946,"id":2965,"nodeType":"Return","src":"3946:16:13"}]},"documentation":{"id":2938,"nodeType":"StructuredDocumentation","src":"2913:796:13","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2967,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:13","nodeType":"FunctionDefinition","parameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"hash","nameLocation":"3739:4:13","nodeType":"VariableDeclaration","scope":2967,"src":"3731:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2942,"mutability":"mutable","name":"signature","nameLocation":"3758:9:13","nodeType":"VariableDeclaration","scope":2967,"src":"3745:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2941,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:13"},"returnParameters":{"id":2946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2967,"src":"3792:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2944,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:13"},"scope":3211,"src":"3714:255:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3016,"nodeType":"Block","src":"4348:342:13","statements":[{"id":3015,"nodeType":"UncheckedBlock","src":"4358:326:13","statements":[{"assignments":[2985],"declarations":[{"constant":false,"id":2985,"mutability":"mutable","name":"s","nameLocation":"4390:1:13","nodeType":"VariableDeclaration","scope":3015,"src":"4382:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2984,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2992,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2986,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"4394:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:13","typeDescriptions":{}}},"id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:13"},{"assignments":[2994],"declarations":[{"constant":false,"id":2994,"mutability":"mutable","name":"v","nameLocation":"4591:1:13","nodeType":"VariableDeclaration","scope":3015,"src":"4585:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2993,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3007,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2999,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"4610:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:13","typeDescriptions":{}}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:13","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2995,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:13","typeDescriptions":{}}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:13"},{"expression":{"arguments":[{"id":3009,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"4659:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3010,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"4665:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3011,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"4668:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3012,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"4671:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3008,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2937,3017,3125],"referencedDeclaration":3125,"src":"4648:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2871_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2871_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2983,"id":3014,"nodeType":"Return","src":"4641:32:13"}]}]},"documentation":{"id":2968,"nodeType":"StructuredDocumentation","src":"3975:205:13","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3017,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:13","nodeType":"FunctionDefinition","parameters":{"id":2975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"hash","nameLocation":"4222:4:13","nodeType":"VariableDeclaration","scope":3017,"src":"4214:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2972,"mutability":"mutable","name":"r","nameLocation":"4244:1:13","nodeType":"VariableDeclaration","scope":3017,"src":"4236:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"vs","nameLocation":"4263:2:13","nodeType":"VariableDeclaration","scope":3017,"src":"4255:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:13"},"returnParameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2977,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:13","nodeType":"VariableDeclaration","scope":3017,"src":"4295:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2976,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2980,"mutability":"mutable","name":"err","nameLocation":"4327:3:13","nodeType":"VariableDeclaration","scope":3017,"src":"4314:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2979,"nodeType":"UserDefinedTypeName","pathNode":{"id":2978,"name":"RecoverError","nameLocations":["4314:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":2871,"src":"4314:12:13"},"referencedDeclaration":2871,"src":"4314:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2982,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:13","nodeType":"VariableDeclaration","scope":3017,"src":"4332:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:13"},"scope":3211,"src":"4185:505:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3049,"nodeType":"Block","src":"4903:164:13","statements":[{"assignments":[3030,3033,3035],"declarations":[{"constant":false,"id":3030,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:13","nodeType":"VariableDeclaration","scope":3049,"src":"4914:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3029,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3033,"mutability":"mutable","name":"error","nameLocation":"4946:5:13","nodeType":"VariableDeclaration","scope":3049,"src":"4933:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3032,"nodeType":"UserDefinedTypeName","pathNode":{"id":3031,"name":"RecoverError","nameLocations":["4933:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":2871,"src":"4933:12:13"},"referencedDeclaration":2871,"src":"4933:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3035,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:13","nodeType":"VariableDeclaration","scope":3049,"src":"4953:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3041,"initialValue":{"arguments":[{"id":3037,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"4984:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3038,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"4990:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3039,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"4993:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3036,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2937,3017,3125],"referencedDeclaration":3017,"src":"4973:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2871_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2871_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:13"},{"expression":{"arguments":[{"id":3043,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"5018:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},{"id":3044,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"5025:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3042,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"5006:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2871_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3046,"nodeType":"ExpressionStatement","src":"5006:28:13"},{"expression":{"id":3047,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"5051:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3028,"id":3048,"nodeType":"Return","src":"5044:16:13"}]},"documentation":{"id":3018,"nodeType":"StructuredDocumentation","src":"4696:116:13","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3050,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:13","nodeType":"FunctionDefinition","parameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"hash","nameLocation":"4842:4:13","nodeType":"VariableDeclaration","scope":3050,"src":"4834:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"r","nameLocation":"4856:1:13","nodeType":"VariableDeclaration","scope":3050,"src":"4848:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3024,"mutability":"mutable","name":"vs","nameLocation":"4867:2:13","nodeType":"VariableDeclaration","scope":3050,"src":"4859:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:13"},"returnParameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3050,"src":"4894:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3026,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:13"},"scope":3211,"src":"4817:250:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3124,"nodeType":"Block","src":"5382:1372:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3071,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"6278:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:13","typeDescriptions":{}}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3085,"nodeType":"IfStatement","src":"6266:164:13","trueBody":{"id":3084,"nodeType":"Block","src":"6351:79:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3075,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:13","typeDescriptions":{}}},"id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3079,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"6385:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2871_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:13","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2870,"src":"6385:30:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},{"id":3081,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"6417:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2871_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3068,"id":3083,"nodeType":"Return","src":"6365:54:13"}]}},{"assignments":[3087],"declarations":[{"constant":false,"id":3087,"mutability":"mutable","name":"signer","nameLocation":"6532:6:13","nodeType":"VariableDeclaration","scope":3124,"src":"6524:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3086,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3094,"initialValue":{"arguments":[{"id":3089,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"6551:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3090,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"6557:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3091,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"6560:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3092,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"6563:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3088,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:13","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3095,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"6579:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3096,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:13","typeDescriptions":{}}},"id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3114,"nodeType":"IfStatement","src":"6575:113:13","trueBody":{"id":3113,"nodeType":"Block","src":"6601:87:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3101,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:13","typeDescriptions":{}}},"id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3105,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"6635:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2871_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:13","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2868,"src":"6635:29:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:13","typeDescriptions":{}}},"id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3111,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2871_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3068,"id":3112,"nodeType":"Return","src":"6615:62:13"}]}},{"expression":{"components":[{"id":3115,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"6706:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3116,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"6714:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2871_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:13","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2867,"src":"6714:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:13","typeDescriptions":{}}},"id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2871_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3068,"id":3123,"nodeType":"Return","src":"6698:49:13"}]},"documentation":{"id":3051,"nodeType":"StructuredDocumentation","src":"5073:125:13","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3125,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:13","nodeType":"FunctionDefinition","parameters":{"id":3060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3053,"mutability":"mutable","name":"hash","nameLocation":"5240:4:13","nodeType":"VariableDeclaration","scope":3125,"src":"5232:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3055,"mutability":"mutable","name":"v","nameLocation":"5260:1:13","nodeType":"VariableDeclaration","scope":3125,"src":"5254:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3054,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"r","nameLocation":"5279:1:13","nodeType":"VariableDeclaration","scope":3125,"src":"5271:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3059,"mutability":"mutable","name":"s","nameLocation":"5298:1:13","nodeType":"VariableDeclaration","scope":3125,"src":"5290:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:13"},"returnParameters":{"id":3068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3062,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:13","nodeType":"VariableDeclaration","scope":3125,"src":"5329:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3061,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3065,"mutability":"mutable","name":"err","nameLocation":"5361:3:13","nodeType":"VariableDeclaration","scope":3125,"src":"5348:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3064,"nodeType":"UserDefinedTypeName","pathNode":{"id":3063,"name":"RecoverError","nameLocations":["5348:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":2871,"src":"5348:12:13"},"referencedDeclaration":2871,"src":"5348:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3067,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:13","nodeType":"VariableDeclaration","scope":3125,"src":"5366:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:13"},"scope":3211,"src":"5203:1551:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3160,"nodeType":"Block","src":"6981:166:13","statements":[{"assignments":[3140,3143,3145],"declarations":[{"constant":false,"id":3140,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:13","nodeType":"VariableDeclaration","scope":3160,"src":"6992:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3139,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3143,"mutability":"mutable","name":"error","nameLocation":"7024:5:13","nodeType":"VariableDeclaration","scope":3160,"src":"7011:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3142,"nodeType":"UserDefinedTypeName","pathNode":{"id":3141,"name":"RecoverError","nameLocations":["7011:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":2871,"src":"7011:12:13"},"referencedDeclaration":2871,"src":"7011:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3145,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:13","nodeType":"VariableDeclaration","scope":3160,"src":"7031:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3152,"initialValue":{"arguments":[{"id":3147,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"7062:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3148,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"7068:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3149,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"7071:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3150,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"7074:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3146,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2937,3017,3125],"referencedDeclaration":3125,"src":"7051:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2871_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2871_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:13"},{"expression":{"arguments":[{"id":3154,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"7098:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},{"id":3155,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"7105:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3153,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"7086:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2871_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3157,"nodeType":"ExpressionStatement","src":"7086:28:13"},{"expression":{"id":3158,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"7131:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3138,"id":3159,"nodeType":"Return","src":"7124:16:13"}]},"documentation":{"id":3126,"nodeType":"StructuredDocumentation","src":"6760:122:13","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3161,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:13","nodeType":"FunctionDefinition","parameters":{"id":3135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"hash","nameLocation":"6912:4:13","nodeType":"VariableDeclaration","scope":3161,"src":"6904:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3130,"mutability":"mutable","name":"v","nameLocation":"6924:1:13","nodeType":"VariableDeclaration","scope":3161,"src":"6918:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3129,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3132,"mutability":"mutable","name":"r","nameLocation":"6935:1:13","nodeType":"VariableDeclaration","scope":3161,"src":"6927:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3134,"mutability":"mutable","name":"s","nameLocation":"6946:1:13","nodeType":"VariableDeclaration","scope":3161,"src":"6938:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:13"},"returnParameters":{"id":3138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3161,"src":"6972:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3136,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:13"},"scope":3211,"src":"6887:260:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3209,"nodeType":"Block","src":"7352:460:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3170,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"7366:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3171,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"7375:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2871_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:13","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2867,"src":"7375:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3176,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"7462:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3177,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"7471:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2871_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:13","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2868,"src":"7471:29:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3184,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"7567:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3185,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"7576:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2871_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:13","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2869,"src":"7576:35:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3196,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"7701:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3197,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"7710:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2871_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:13","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2870,"src":"7710:30:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3205,"nodeType":"IfStatement","src":"7697:109:13","trueBody":{"id":3204,"nodeType":"Block","src":"7742:64:13","statements":[{"errorCall":{"arguments":[{"id":3201,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"7786:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3200,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"7763:22:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3203,"nodeType":"RevertStatement","src":"7756:39:13"}]}},"id":3206,"nodeType":"IfStatement","src":"7563:243:13","trueBody":{"id":3195,"nodeType":"Block","src":"7613:78:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3191,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"7670:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3189,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:13","typeDescriptions":{}}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3188,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"7634:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3194,"nodeType":"RevertStatement","src":"7627:53:13"}]}},"id":3207,"nodeType":"IfStatement","src":"7458:348:13","trueBody":{"id":3183,"nodeType":"Block","src":"7502:55:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3180,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"7523:21:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3182,"nodeType":"RevertStatement","src":"7516:30:13"}]}},"id":3208,"nodeType":"IfStatement","src":"7362:444:13","trueBody":{"id":3175,"nodeType":"Block","src":"7397:55:13","statements":[{"functionReturnParameters":3169,"id":3174,"nodeType":"Return","src":"7411:7:13"}]}}]},"documentation":{"id":3162,"nodeType":"StructuredDocumentation","src":"7153:122:13","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3210,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:13","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"error","nameLocation":"7314:5:13","nodeType":"VariableDeclaration","scope":3210,"src":"7301:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3164,"nodeType":"UserDefinedTypeName","pathNode":{"id":3163,"name":"RecoverError","nameLocations":["7301:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":2871,"src":"7301:12:13"},"referencedDeclaration":2871,"src":"7301:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2871","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:13","nodeType":"VariableDeclaration","scope":3210,"src":"7321:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:13"},"returnParameters":{"id":3169,"nodeType":"ParameterList","parameters":[],"src":"7352:0:13"},"scope":3211,"src":"7280:532:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3212,"src":"344:7470:13","usedErrors":[2874,2879,2884],"usedEvents":[]}],"src":"112:7703:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3438],"IERC5267":[24],"MessageHashUtils":[3524],"ShortString":[1126],"ShortStrings":[1337]},"id":3439,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3213,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3215,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3439,"sourceUnit":3525,"src":"139:56:14","symbolAliases":[{"foreign":{"id":3214,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"147:16:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3218,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3439,"sourceUnit":1338,"src":"196:62:14","symbolAliases":[{"foreign":{"id":3216,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"204:12:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3217,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"218:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3220,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3439,"sourceUnit":25,"src":"259:55:14","symbolAliases":[{"foreign":{"id":3219,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"267:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3222,"name":"IERC5267","nameLocations":["1988:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":24,"src":"1988:8:14"},"id":3223,"nodeType":"InheritanceSpecifier","src":"1988:8:14"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3221,"nodeType":"StructuredDocumentation","src":"316:1643:14","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3438,"linearizedBaseContracts":[3438,24],"name":"EIP712","nameLocation":"1978:6:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3225,"libraryName":{"id":3224,"name":"ShortStrings","nameLocations":["2009:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1337,"src":"2009:12:14"},"nodeType":"UsingForDirective","src":"2003:25:14"},{"constant":true,"id":3230,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:14","nodeType":"VariableDeclaration","scope":3438,"src":"2034:140:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3227,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3232,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:14","nodeType":"VariableDeclaration","scope":3438,"src":"2373:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3234,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:14","nodeType":"VariableDeclaration","scope":3438,"src":"2427:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3233,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3236,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:14","nodeType":"VariableDeclaration","scope":3438,"src":"2473:37:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3235,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3238,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:14","nodeType":"VariableDeclaration","scope":3438,"src":"2517:37:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3240,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:14","nodeType":"VariableDeclaration","scope":3438,"src":"2560:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3243,"mutability":"immutable","name":"_name","nameLocation":"2637:5:14","nodeType":"VariableDeclaration","scope":3438,"src":"2607:35:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"},"typeName":{"id":3242,"nodeType":"UserDefinedTypeName","pathNode":{"id":3241,"name":"ShortString","nameLocations":["2607:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1126,"src":"2607:11:14"},"referencedDeclaration":1126,"src":"2607:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3246,"mutability":"immutable","name":"_version","nameLocation":"2678:8:14","nodeType":"VariableDeclaration","scope":3438,"src":"2648:38:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"},"typeName":{"id":3245,"nodeType":"UserDefinedTypeName","pathNode":{"id":3244,"name":"ShortString","nameLocations":["2648:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1126,"src":"2648:11:14"},"referencedDeclaration":1126,"src":"2648:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3248,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:14","nodeType":"VariableDeclaration","scope":3438,"src":"2742:28:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3247,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3250,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:14","nodeType":"VariableDeclaration","scope":3438,"src":"2826:31:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3249,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3307,"nodeType":"Block","src":"3483:376:14","statements":[{"expression":{"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3258,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"3493:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3261,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"3532:13:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3259,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"3501:4:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:14","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1278,"src":"3501:30:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1126_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"src":"3493:53:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"id":3264,"nodeType":"ExpressionStatement","src":"3493:53:14"},{"expression":{"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3265,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"3556:8:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3268,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"3601:16:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3266,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"3567:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:14","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1278,"src":"3567:33:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1126_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"src":"3556:62:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"id":3271,"nodeType":"ExpressionStatement","src":"3556:62:14"},{"expression":{"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3272,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"3628:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3276,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"3658:4:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3274,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:14","typeDescriptions":{}}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3273,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3280,"nodeType":"ExpressionStatement","src":"3628:36:14"},{"expression":{"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3281,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"3674:14:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3285,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"3707:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3283,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:14","typeDescriptions":{}}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3282,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3289,"nodeType":"ExpressionStatement","src":"3674:42:14"},{"expression":{"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3290,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"3727:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3291,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3294,"nodeType":"ExpressionStatement","src":"3727:30:14"},{"expression":{"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3295,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"3767:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3296,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"3792:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3299,"nodeType":"ExpressionStatement","src":"3767:48:14"},{"expression":{"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3300,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"3825:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3303,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3438","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3438","typeString":"contract EIP712"}],"id":3302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3301,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:14","typeDescriptions":{}}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3306,"nodeType":"ExpressionStatement","src":"3825:27:14"}]},"documentation":{"id":3251,"nodeType":"StructuredDocumentation","src":"2864:559:14","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3308,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"name","nameLocation":"3454:4:14","nodeType":"VariableDeclaration","scope":3308,"src":"3440:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3252,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3255,"mutability":"mutable","name":"version","nameLocation":"3474:7:14","nodeType":"VariableDeclaration","scope":3308,"src":"3460:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3254,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:14"},"returnParameters":{"id":3257,"nodeType":"ParameterList","parameters":[],"src":"3483:0:14"},"scope":3438,"src":"3428:431:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3333,"nodeType":"Block","src":"4007:200:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3316,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3438","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3438","typeString":"contract EIP712"}],"id":3315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3314,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:14","typeDescriptions":{}}},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3318,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"4038:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3320,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3322,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"4070:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3331,"nodeType":"Block","src":"4146:55:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3328,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"4167:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3313,"id":3330,"nodeType":"Return","src":"4160:30:14"}]},"id":3332,"nodeType":"IfStatement","src":"4017:184:14","trueBody":{"id":3327,"nodeType":"Block","src":"4086:54:14","statements":[{"expression":{"id":3325,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"4107:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3313,"id":3326,"nodeType":"Return","src":"4100:29:14"}]}}]},"documentation":{"id":3309,"nodeType":"StructuredDocumentation","src":"3865:75:14","text":" @dev Returns the domain separator for the current chain."},"id":3334,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:14","nodeType":"FunctionDefinition","parameters":{"id":3310,"nodeType":"ParameterList","parameters":[],"src":"3972:2:14"},"returnParameters":{"id":3313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3334,"src":"3998:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:14"},"scope":3438,"src":"3945:262:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3354,"nodeType":"Block","src":"4277:115:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":3342,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"4315:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3343,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"4326:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3344,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"4339:14:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3345,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3349,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3438","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3438","typeString":"contract EIP712"}],"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3347,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:14","typeDescriptions":{}}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3340,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:14","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:14","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3339,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3338,"id":3353,"nodeType":"Return","src":"4287:98:14"}]},"id":3355,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:14","nodeType":"FunctionDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[],"src":"4243:2:14"},"returnParameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3355,"src":"4268:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:14"},"scope":3438,"src":"4213:179:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3370,"nodeType":"Block","src":"5103:90:14","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3365,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"5153:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3367,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"5175:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3363,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"5120:16:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3524_$","typeString":"type(library MessageHashUtils)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:14","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3523,"src":"5120:32:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3362,"id":3369,"nodeType":"Return","src":"5113:73:14"}]},"documentation":{"id":3356,"nodeType":"StructuredDocumentation","src":"4398:614:14","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3371,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:14","nodeType":"FunctionDefinition","parameters":{"id":3359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3358,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:14","nodeType":"VariableDeclaration","scope":3371,"src":"5043:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:14"},"returnParameters":{"id":3362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3371,"src":"5094:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:14"},"scope":3438,"src":"5017:176:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[23],"body":{"id":3412,"nodeType":"Block","src":"5556:229:14","statements":[{"expression":{"components":[{"hexValue":"0f","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5587:7:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3391,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"5617:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3393,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"5644:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3395,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5674:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"5674:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3399,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5709:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3438","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3438","typeString":"contract EIP712"}],"id":3398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5701:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3397,"name":"address","nodeType":"ElementaryTypeName","src":"5701:7:14","typeDescriptions":{}}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5736:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5728:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5728:7:14","typeDescriptions":{}}},"id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5728:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5766:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5752:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3405,"name":"uint256","nodeType":"ElementaryTypeName","src":"5756:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3406,"nodeType":"ArrayTypeName","src":"5756:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5573:205:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3389,"id":3411,"nodeType":"Return","src":"5566:212:14"}]},"documentation":{"id":3372,"nodeType":"StructuredDocumentation","src":"5199:24:14","text":"@inheritdoc IERC5267"},"functionSelector":"84b0196e","id":3413,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5237:12:14","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[],"src":"5249:2:14"},"returnParameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"fields","nameLocation":"5333:6:14","nodeType":"VariableDeclaration","scope":3413,"src":"5326:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3374,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5326:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3377,"mutability":"mutable","name":"name","nameLocation":"5367:4:14","nodeType":"VariableDeclaration","scope":3413,"src":"5353:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3376,"name":"string","nodeType":"ElementaryTypeName","src":"5353:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3379,"mutability":"mutable","name":"version","nameLocation":"5399:7:14","nodeType":"VariableDeclaration","scope":3413,"src":"5385:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3378,"name":"string","nodeType":"ElementaryTypeName","src":"5385:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3381,"mutability":"mutable","name":"chainId","nameLocation":"5428:7:14","nodeType":"VariableDeclaration","scope":3413,"src":"5420:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3380,"name":"uint256","nodeType":"ElementaryTypeName","src":"5420:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"verifyingContract","nameLocation":"5457:17:14","nodeType":"VariableDeclaration","scope":3413,"src":"5449:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3382,"name":"address","nodeType":"ElementaryTypeName","src":"5449:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3385,"mutability":"mutable","name":"salt","nameLocation":"5496:4:14","nodeType":"VariableDeclaration","scope":3413,"src":"5488:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5488:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3388,"mutability":"mutable","name":"extensions","nameLocation":"5531:10:14","nodeType":"VariableDeclaration","scope":3413,"src":"5514:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3386,"name":"uint256","nodeType":"ElementaryTypeName","src":"5514:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3387,"nodeType":"ArrayTypeName","src":"5514:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5312:239:14"},"scope":3438,"src":"5228:557:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3424,"nodeType":"Block","src":"6166:65:14","statements":[{"expression":{"arguments":[{"id":3421,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"6210:13:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3419,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"6183:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6189:20:14","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1305,"src":"6183:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1126_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1126_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6183:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3418,"id":3423,"nodeType":"Return","src":"6176:48:14"}]},"documentation":{"id":3414,"nodeType":"StructuredDocumentation","src":"5791:256:14","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3425,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6114:11:14","nodeType":"FunctionDefinition","parameters":{"id":3415,"nodeType":"ParameterList","parameters":[],"src":"6125:2:14"},"returnParameters":{"id":3418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3425,"src":"6151:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3416,"name":"string","nodeType":"ElementaryTypeName","src":"6151:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6150:15:14"},"scope":3438,"src":"6105:126:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3436,"nodeType":"Block","src":"6621:71:14","statements":[{"expression":{"arguments":[{"id":3433,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"6668:16:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3431,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"6638:8:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1126","typeString":"ShortString"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6647:20:14","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1305,"src":"6638:29:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1126_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1126_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6638:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3430,"id":3435,"nodeType":"Return","src":"6631:54:14"}]},"documentation":{"id":3426,"nodeType":"StructuredDocumentation","src":"6237:262:14","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3437,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6566:14:14","nodeType":"FunctionDefinition","parameters":{"id":3427,"nodeType":"ParameterList","parameters":[],"src":"6580:2:14"},"returnParameters":{"id":3430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3437,"src":"6606:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3428,"name":"string","nodeType":"ElementaryTypeName","src":"6606:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6605:15:14"},"scope":3438,"src":"6557:135:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3439,"src":"1960:4734:14","usedErrors":[1134,1136],"usedEvents":[4]}],"src":"113:6582:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3524],"Strings":[2863]},"id":3525,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3440,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3442,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3525,"sourceUnit":2864,"src":"149:39:15","symbolAliases":[{"foreign":{"id":3441,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"157:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3443,"nodeType":"StructuredDocumentation","src":"190:330:15","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3524,"linearizedBaseContracts":[3524],"name":"MessageHashUtils","nameLocation":"529:16:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3452,"nodeType":"Block","src":"1339:341:15","statements":[{"AST":{"nativeSrc":"1374:300:15","nodeType":"YulBlock","src":"1374:300:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:15","nodeType":"YulLiteral","src":"1395:4:15","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:15","nodeType":"YulLiteral","src":"1401:34:15","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:15","nodeType":"YulIdentifier","src":"1388:6:15"},"nativeSrc":"1388:48:15","nodeType":"YulFunctionCall","src":"1388:48:15"},"nativeSrc":"1388:48:15","nodeType":"YulExpressionStatement","src":"1388:48:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:15","nodeType":"YulLiteral","src":"1497:4:15","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:15","nodeType":"YulIdentifier","src":"1503:11:15"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:15","nodeType":"YulIdentifier","src":"1490:6:15"},"nativeSrc":"1490:25:15","nodeType":"YulFunctionCall","src":"1490:25:15"},"nativeSrc":"1490:25:15","nodeType":"YulExpressionStatement","src":"1490:25:15"},{"nativeSrc":"1569:31:15","nodeType":"YulAssignment","src":"1569:31:15","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:15","nodeType":"YulLiteral","src":"1589:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:15","nodeType":"YulLiteral","src":"1595:4:15","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:15","nodeType":"YulIdentifier","src":"1579:9:15"},"nativeSrc":"1579:21:15","nodeType":"YulFunctionCall","src":"1579:21:15"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:15","nodeType":"YulIdentifier","src":"1569:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3449,"isOffset":false,"isSlot":false,"src":"1569:6:15","valueSize":1},{"declaration":3446,"isOffset":false,"isSlot":false,"src":"1503:11:15","valueSize":1}],"flags":["memory-safe"],"id":3451,"nodeType":"InlineAssembly","src":"1349:325:15"}]},"documentation":{"id":3444,"nodeType":"StructuredDocumentation","src":"552:690:15","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3453,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:15","nodeType":"FunctionDefinition","parameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:15","nodeType":"VariableDeclaration","scope":3453,"src":"1279:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:15"},"returnParameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"mutability":"mutable","name":"digest","nameLocation":"1331:6:15","nodeType":"VariableDeclaration","scope":3453,"src":"1323:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:15"},"scope":3524,"src":"1247:433:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3478,"nodeType":"Block","src":"2257:143:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3470,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"2366:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:15","memberName":"length","nodeType":"MemberAccess","src":"2366:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3468,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"2349:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2863_$","typeString":"type(library Strings)"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:15","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1575,"src":"2349:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3466,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:15","typeDescriptions":{}}},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3474,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"2384:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3462,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:15","typeDescriptions":{}}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:15","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:15","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3461,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3460,"id":3477,"nodeType":"Return","src":"2267:126:15"}]},"documentation":{"id":3454,"nodeType":"StructuredDocumentation","src":"1686:480:15","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3479,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:15","nodeType":"FunctionDefinition","parameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"message","nameLocation":"2216:7:15","nodeType":"VariableDeclaration","scope":3479,"src":"2203:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3455,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:15"},"returnParameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3479,"src":"2248:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:15"},"scope":3524,"src":"2171:229:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3498,"nodeType":"Block","src":"2854:80:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3493,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"2910:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3494,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"2921:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3490,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3489,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3488,"id":3497,"nodeType":"Return","src":"2864:63:15"}]},"documentation":{"id":3480,"nodeType":"StructuredDocumentation","src":"2406:332:15","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3499,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:15","nodeType":"FunctionDefinition","parameters":{"id":3485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3482,"mutability":"mutable","name":"validator","nameLocation":"2792:9:15","nodeType":"VariableDeclaration","scope":3499,"src":"2784:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3481,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3484,"mutability":"mutable","name":"data","nameLocation":"2816:4:15","nodeType":"VariableDeclaration","scope":3499,"src":"2803:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3483,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:15"},"returnParameters":{"id":3488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3499,"src":"2845:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:15"},"scope":3524,"src":"2743:191:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3510,"nodeType":"Block","src":"3216:216:15","statements":[{"AST":{"nativeSrc":"3251:175:15","nodeType":"YulBlock","src":"3251:175:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:15","nodeType":"YulLiteral","src":"3272:4:15","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:15","nodeType":"YulLiteral","src":"3278:10:15","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:15","nodeType":"YulIdentifier","src":"3265:6:15"},"nativeSrc":"3265:24:15","nodeType":"YulFunctionCall","src":"3265:24:15"},"nativeSrc":"3265:24:15","nodeType":"YulExpressionStatement","src":"3265:24:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:15","nodeType":"YulLiteral","src":"3309:4:15","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:15","nodeType":"YulLiteral","src":"3319:2:15","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:15","nodeType":"YulIdentifier","src":"3323:9:15"}],"functionName":{"name":"shl","nativeSrc":"3315:3:15","nodeType":"YulIdentifier","src":"3315:3:15"},"nativeSrc":"3315:18:15","nodeType":"YulFunctionCall","src":"3315:18:15"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:15","nodeType":"YulIdentifier","src":"3302:6:15"},"nativeSrc":"3302:32:15","nodeType":"YulFunctionCall","src":"3302:32:15"},"nativeSrc":"3302:32:15","nodeType":"YulExpressionStatement","src":"3302:32:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:15","nodeType":"YulLiteral","src":"3354:4:15","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:15","nodeType":"YulIdentifier","src":"3360:11:15"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:15","nodeType":"YulIdentifier","src":"3347:6:15"},"nativeSrc":"3347:25:15","nodeType":"YulFunctionCall","src":"3347:25:15"},"nativeSrc":"3347:25:15","nodeType":"YulExpressionStatement","src":"3347:25:15"},{"nativeSrc":"3385:31:15","nodeType":"YulAssignment","src":"3385:31:15","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:15","nodeType":"YulLiteral","src":"3405:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:15","nodeType":"YulLiteral","src":"3411:4:15","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:15","nodeType":"YulIdentifier","src":"3395:9:15"},"nativeSrc":"3395:21:15","nodeType":"YulFunctionCall","src":"3395:21:15"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:15","nodeType":"YulIdentifier","src":"3385:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3507,"isOffset":false,"isSlot":false,"src":"3385:6:15","valueSize":1},{"declaration":3504,"isOffset":false,"isSlot":false,"src":"3360:11:15","valueSize":1},{"declaration":3502,"isOffset":false,"isSlot":false,"src":"3323:9:15","valueSize":1}],"flags":["memory-safe"],"id":3509,"nodeType":"InlineAssembly","src":"3226:200:15"}]},"documentation":{"id":3500,"nodeType":"StructuredDocumentation","src":"2940:129:15","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":3511,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:15","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"validator","nameLocation":"3132:9:15","nodeType":"VariableDeclaration","scope":3511,"src":"3124:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3501,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3504,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:15","nodeType":"VariableDeclaration","scope":3511,"src":"3151:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:15"},"returnParameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"digest","nameLocation":"3208:6:15","nodeType":"VariableDeclaration","scope":3511,"src":"3200:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:15"},"scope":3524,"src":"3074:358:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3522,"nodeType":"Block","src":"3983:265:15","statements":[{"AST":{"nativeSrc":"4018:224:15","nodeType":"YulBlock","src":"4018:224:15","statements":[{"nativeSrc":"4032:22:15","nodeType":"YulVariableDeclaration","src":"4032:22:15","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:15","nodeType":"YulLiteral","src":"4049:4:15","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:15","nodeType":"YulIdentifier","src":"4043:5:15"},"nativeSrc":"4043:11:15","nodeType":"YulFunctionCall","src":"4043:11:15"},"variables":[{"name":"ptr","nativeSrc":"4036:3:15","nodeType":"YulTypedName","src":"4036:3:15","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:15","nodeType":"YulIdentifier","src":"4074:3:15"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:15","nodeType":"YulLiteral","src":"4079:10:15","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:15","nodeType":"YulIdentifier","src":"4067:6:15"},"nativeSrc":"4067:23:15","nodeType":"YulFunctionCall","src":"4067:23:15"},"nativeSrc":"4067:23:15","nodeType":"YulExpressionStatement","src":"4067:23:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:15","nodeType":"YulIdentifier","src":"4114:3:15"},{"kind":"number","nativeSrc":"4119:4:15","nodeType":"YulLiteral","src":"4119:4:15","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:15","nodeType":"YulIdentifier","src":"4110:3:15"},"nativeSrc":"4110:14:15","nodeType":"YulFunctionCall","src":"4110:14:15"},{"name":"domainSeparator","nativeSrc":"4126:15:15","nodeType":"YulIdentifier","src":"4126:15:15"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:15","nodeType":"YulIdentifier","src":"4103:6:15"},"nativeSrc":"4103:39:15","nodeType":"YulFunctionCall","src":"4103:39:15"},"nativeSrc":"4103:39:15","nodeType":"YulExpressionStatement","src":"4103:39:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:15","nodeType":"YulIdentifier","src":"4166:3:15"},{"kind":"number","nativeSrc":"4171:4:15","nodeType":"YulLiteral","src":"4171:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:15","nodeType":"YulIdentifier","src":"4162:3:15"},"nativeSrc":"4162:14:15","nodeType":"YulFunctionCall","src":"4162:14:15"},{"name":"structHash","nativeSrc":"4178:10:15","nodeType":"YulIdentifier","src":"4178:10:15"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:15","nodeType":"YulIdentifier","src":"4155:6:15"},"nativeSrc":"4155:34:15","nodeType":"YulFunctionCall","src":"4155:34:15"},"nativeSrc":"4155:34:15","nodeType":"YulExpressionStatement","src":"4155:34:15"},{"nativeSrc":"4202:30:15","nodeType":"YulAssignment","src":"4202:30:15","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:15","nodeType":"YulIdentifier","src":"4222:3:15"},{"kind":"number","nativeSrc":"4227:4:15","nodeType":"YulLiteral","src":"4227:4:15","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:15","nodeType":"YulIdentifier","src":"4212:9:15"},"nativeSrc":"4212:20:15","nodeType":"YulFunctionCall","src":"4212:20:15"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:15","nodeType":"YulIdentifier","src":"4202:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3519,"isOffset":false,"isSlot":false,"src":"4202:6:15","valueSize":1},{"declaration":3514,"isOffset":false,"isSlot":false,"src":"4126:15:15","valueSize":1},{"declaration":3516,"isOffset":false,"isSlot":false,"src":"4178:10:15","valueSize":1}],"flags":["memory-safe"],"id":3521,"nodeType":"InlineAssembly","src":"3993:249:15"}]},"documentation":{"id":3512,"nodeType":"StructuredDocumentation","src":"3438:431:15","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3523,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:15","nodeType":"FunctionDefinition","parameters":{"id":3517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3514,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:15","nodeType":"VariableDeclaration","scope":3523,"src":"3899:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3516,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:15","nodeType":"VariableDeclaration","scope":3523,"src":"3924:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:15"},"returnParameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"digest","nameLocation":"3975:6:15","nodeType":"VariableDeclaration","scope":3523,"src":"3967:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:15"},"scope":3524,"src":"3874:374:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3525,"src":"521:3729:15","usedErrors":[],"usedEvents":[]}],"src":"123:4128:15"},"id":15},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5145],"Panic":[1120],"SafeCast":[6910]},"id":5146,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3526,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3528,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5146,"sourceUnit":1121,"src":"129:35:16","symbolAliases":[{"foreign":{"id":3527,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"137:5:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5146,"sourceUnit":6911,"src":"165:40:16","symbolAliases":[{"foreign":{"id":3529,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"173:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3531,"nodeType":"StructuredDocumentation","src":"207:73:16","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5145,"linearizedBaseContracts":[5145],"name":"Math","nameLocation":"289:4:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3536,"members":[{"id":3532,"name":"Floor","nameLocation":"324:5:16","nodeType":"EnumValue","src":"324:5:16"},{"id":3533,"name":"Ceil","nameLocation":"367:4:16","nodeType":"EnumValue","src":"367:4:16"},{"id":3534,"name":"Trunc","nameLocation":"409:5:16","nodeType":"EnumValue","src":"409:5:16"},{"id":3535,"name":"Expand","nameLocation":"439:6:16","nodeType":"EnumValue","src":"439:6:16"}],"name":"Rounding","nameLocation":"305:8:16","nodeType":"EnumDefinition","src":"300:169:16"},{"body":{"id":3549,"nodeType":"Block","src":"731:112:16","statements":[{"AST":{"nativeSrc":"766:71:16","nodeType":"YulBlock","src":"766:71:16","statements":[{"nativeSrc":"780:16:16","nodeType":"YulAssignment","src":"780:16:16","value":{"arguments":[{"name":"a","nativeSrc":"791:1:16","nodeType":"YulIdentifier","src":"791:1:16"},{"name":"b","nativeSrc":"794:1:16","nodeType":"YulIdentifier","src":"794:1:16"}],"functionName":{"name":"add","nativeSrc":"787:3:16","nodeType":"YulIdentifier","src":"787:3:16"},"nativeSrc":"787:9:16","nodeType":"YulFunctionCall","src":"787:9:16"},"variableNames":[{"name":"low","nativeSrc":"780:3:16","nodeType":"YulIdentifier","src":"780:3:16"}]},{"nativeSrc":"809:18:16","nodeType":"YulAssignment","src":"809:18:16","value":{"arguments":[{"name":"low","nativeSrc":"820:3:16","nodeType":"YulIdentifier","src":"820:3:16"},{"name":"a","nativeSrc":"825:1:16","nodeType":"YulIdentifier","src":"825:1:16"}],"functionName":{"name":"lt","nativeSrc":"817:2:16","nodeType":"YulIdentifier","src":"817:2:16"},"nativeSrc":"817:10:16","nodeType":"YulFunctionCall","src":"817:10:16"},"variableNames":[{"name":"high","nativeSrc":"809:4:16","nodeType":"YulIdentifier","src":"809:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3539,"isOffset":false,"isSlot":false,"src":"791:1:16","valueSize":1},{"declaration":3539,"isOffset":false,"isSlot":false,"src":"825:1:16","valueSize":1},{"declaration":3541,"isOffset":false,"isSlot":false,"src":"794:1:16","valueSize":1},{"declaration":3544,"isOffset":false,"isSlot":false,"src":"809:4:16","valueSize":1},{"declaration":3546,"isOffset":false,"isSlot":false,"src":"780:3:16","valueSize":1},{"declaration":3546,"isOffset":false,"isSlot":false,"src":"820:3:16","valueSize":1}],"flags":["memory-safe"],"id":3548,"nodeType":"InlineAssembly","src":"741:96:16"}]},"documentation":{"id":3537,"nodeType":"StructuredDocumentation","src":"475:163:16","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3550,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:16","nodeType":"FunctionDefinition","parameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"a","nameLocation":"667:1:16","nodeType":"VariableDeclaration","scope":3550,"src":"659:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3538,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3541,"mutability":"mutable","name":"b","nameLocation":"678:1:16","nodeType":"VariableDeclaration","scope":3550,"src":"670:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3540,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:16"},"returnParameters":{"id":3547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3544,"mutability":"mutable","name":"high","nameLocation":"712:4:16","nodeType":"VariableDeclaration","scope":3550,"src":"704:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3546,"mutability":"mutable","name":"low","nameLocation":"726:3:16","nodeType":"VariableDeclaration","scope":3550,"src":"718:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3545,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:16"},"scope":5145,"src":"643:200:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3563,"nodeType":"Block","src":"1115:462:16","statements":[{"AST":{"nativeSrc":"1437:134:16","nodeType":"YulBlock","src":"1437:134:16","statements":[{"nativeSrc":"1451:30:16","nodeType":"YulVariableDeclaration","src":"1451:30:16","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:16","nodeType":"YulIdentifier","src":"1468:1:16"},{"name":"b","nativeSrc":"1471:1:16","nodeType":"YulIdentifier","src":"1471:1:16"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:16","nodeType":"YulLiteral","src":"1478:1:16","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:16","nodeType":"YulIdentifier","src":"1474:3:16"},"nativeSrc":"1474:6:16","nodeType":"YulFunctionCall","src":"1474:6:16"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:16","nodeType":"YulIdentifier","src":"1461:6:16"},"nativeSrc":"1461:20:16","nodeType":"YulFunctionCall","src":"1461:20:16"},"variables":[{"name":"mm","nativeSrc":"1455:2:16","nodeType":"YulTypedName","src":"1455:2:16","type":""}]},{"nativeSrc":"1494:16:16","nodeType":"YulAssignment","src":"1494:16:16","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:16","nodeType":"YulIdentifier","src":"1505:1:16"},{"name":"b","nativeSrc":"1508:1:16","nodeType":"YulIdentifier","src":"1508:1:16"}],"functionName":{"name":"mul","nativeSrc":"1501:3:16","nodeType":"YulIdentifier","src":"1501:3:16"},"nativeSrc":"1501:9:16","nodeType":"YulFunctionCall","src":"1501:9:16"},"variableNames":[{"name":"low","nativeSrc":"1494:3:16","nodeType":"YulIdentifier","src":"1494:3:16"}]},{"nativeSrc":"1523:38:16","nodeType":"YulAssignment","src":"1523:38:16","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:16","nodeType":"YulIdentifier","src":"1539:2:16"},{"name":"low","nativeSrc":"1543:3:16","nodeType":"YulIdentifier","src":"1543:3:16"}],"functionName":{"name":"sub","nativeSrc":"1535:3:16","nodeType":"YulIdentifier","src":"1535:3:16"},"nativeSrc":"1535:12:16","nodeType":"YulFunctionCall","src":"1535:12:16"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:16","nodeType":"YulIdentifier","src":"1552:2:16"},{"name":"low","nativeSrc":"1556:3:16","nodeType":"YulIdentifier","src":"1556:3:16"}],"functionName":{"name":"lt","nativeSrc":"1549:2:16","nodeType":"YulIdentifier","src":"1549:2:16"},"nativeSrc":"1549:11:16","nodeType":"YulFunctionCall","src":"1549:11:16"}],"functionName":{"name":"sub","nativeSrc":"1531:3:16","nodeType":"YulIdentifier","src":"1531:3:16"},"nativeSrc":"1531:30:16","nodeType":"YulFunctionCall","src":"1531:30:16"},"variableNames":[{"name":"high","nativeSrc":"1523:4:16","nodeType":"YulIdentifier","src":"1523:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3553,"isOffset":false,"isSlot":false,"src":"1468:1:16","valueSize":1},{"declaration":3553,"isOffset":false,"isSlot":false,"src":"1505:1:16","valueSize":1},{"declaration":3555,"isOffset":false,"isSlot":false,"src":"1471:1:16","valueSize":1},{"declaration":3555,"isOffset":false,"isSlot":false,"src":"1508:1:16","valueSize":1},{"declaration":3558,"isOffset":false,"isSlot":false,"src":"1523:4:16","valueSize":1},{"declaration":3560,"isOffset":false,"isSlot":false,"src":"1494:3:16","valueSize":1},{"declaration":3560,"isOffset":false,"isSlot":false,"src":"1543:3:16","valueSize":1},{"declaration":3560,"isOffset":false,"isSlot":false,"src":"1556:3:16","valueSize":1}],"flags":["memory-safe"],"id":3562,"nodeType":"InlineAssembly","src":"1412:159:16"}]},"documentation":{"id":3551,"nodeType":"StructuredDocumentation","src":"849:173:16","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3564,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:16","nodeType":"FunctionDefinition","parameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"a","nameLocation":"1051:1:16","nodeType":"VariableDeclaration","scope":3564,"src":"1043:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3555,"mutability":"mutable","name":"b","nameLocation":"1062:1:16","nodeType":"VariableDeclaration","scope":3564,"src":"1054:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:16"},"returnParameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3558,"mutability":"mutable","name":"high","nameLocation":"1096:4:16","nodeType":"VariableDeclaration","scope":3564,"src":"1088:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3560,"mutability":"mutable","name":"low","nameLocation":"1110:3:16","nodeType":"VariableDeclaration","scope":3564,"src":"1102:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3559,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:16"},"scope":5145,"src":"1027:550:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3598,"nodeType":"Block","src":"1784:149:16","statements":[{"id":3597,"nodeType":"UncheckedBlock","src":"1794:133:16","statements":[{"assignments":[3577],"declarations":[{"constant":false,"id":3577,"mutability":"mutable","name":"c","nameLocation":"1826:1:16","nodeType":"VariableDeclaration","scope":3597,"src":"1818:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3581,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3578,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"1830:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3579,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"1834:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:16"},{"expression":{"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3582,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"1849:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3583,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"1859:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3584,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"1864:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3587,"nodeType":"ExpressionStatement","src":"1849:16:16"},{"expression":{"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3588,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"1879:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3589,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"1888:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3592,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"1908:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3590,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"1892:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"1892:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3596,"nodeType":"ExpressionStatement","src":"1879:37:16"}]}]},"documentation":{"id":3565,"nodeType":"StructuredDocumentation","src":"1583:105:16","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3599,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:16","nodeType":"FunctionDefinition","parameters":{"id":3570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3567,"mutability":"mutable","name":"a","nameLocation":"1717:1:16","nodeType":"VariableDeclaration","scope":3599,"src":"1709:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3566,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3569,"mutability":"mutable","name":"b","nameLocation":"1728:1:16","nodeType":"VariableDeclaration","scope":3599,"src":"1720:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:16"},"returnParameters":{"id":3575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3572,"mutability":"mutable","name":"success","nameLocation":"1759:7:16","nodeType":"VariableDeclaration","scope":3599,"src":"1754:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3571,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3574,"mutability":"mutable","name":"result","nameLocation":"1776:6:16","nodeType":"VariableDeclaration","scope":3599,"src":"1768:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:16"},"scope":5145,"src":"1693:240:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3633,"nodeType":"Block","src":"2143:149:16","statements":[{"id":3632,"nodeType":"UncheckedBlock","src":"2153:133:16","statements":[{"assignments":[3612],"declarations":[{"constant":false,"id":3612,"mutability":"mutable","name":"c","nameLocation":"2185:1:16","nodeType":"VariableDeclaration","scope":3632,"src":"2177:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3611,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3616,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3613,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"2189:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3614,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"2193:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:16"},{"expression":{"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3617,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"2208:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3618,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"2218:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3619,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"2223:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3622,"nodeType":"ExpressionStatement","src":"2208:16:16"},{"expression":{"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3623,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"2238:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3624,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"2247:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3627,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"2267:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3625,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"2251:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"2251:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3631,"nodeType":"ExpressionStatement","src":"2238:37:16"}]}]},"documentation":{"id":3600,"nodeType":"StructuredDocumentation","src":"1939:108:16","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3634,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:16","nodeType":"FunctionDefinition","parameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"mutability":"mutable","name":"a","nameLocation":"2076:1:16","nodeType":"VariableDeclaration","scope":3634,"src":"2068:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3604,"mutability":"mutable","name":"b","nameLocation":"2087:1:16","nodeType":"VariableDeclaration","scope":3634,"src":"2079:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:16"},"returnParameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"success","nameLocation":"2118:7:16","nodeType":"VariableDeclaration","scope":3634,"src":"2113:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3606,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3609,"mutability":"mutable","name":"result","nameLocation":"2135:6:16","nodeType":"VariableDeclaration","scope":3634,"src":"2127:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3608,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:16"},"scope":5145,"src":"2052:240:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3663,"nodeType":"Block","src":"2505:391:16","statements":[{"id":3662,"nodeType":"UncheckedBlock","src":"2515:375:16","statements":[{"assignments":[3647],"declarations":[{"constant":false,"id":3647,"mutability":"mutable","name":"c","nameLocation":"2547:1:16","nodeType":"VariableDeclaration","scope":3662,"src":"2539:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3646,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3651,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3648,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"2551:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3649,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"2555:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:16"},{"AST":{"nativeSrc":"2595:188:16","nodeType":"YulBlock","src":"2595:188:16","statements":[{"nativeSrc":"2727:42:16","nodeType":"YulAssignment","src":"2727:42:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:16","nodeType":"YulIdentifier","src":"2748:1:16"},{"name":"a","nativeSrc":"2751:1:16","nodeType":"YulIdentifier","src":"2751:1:16"}],"functionName":{"name":"div","nativeSrc":"2744:3:16","nodeType":"YulIdentifier","src":"2744:3:16"},"nativeSrc":"2744:9:16","nodeType":"YulFunctionCall","src":"2744:9:16"},{"name":"b","nativeSrc":"2755:1:16","nodeType":"YulIdentifier","src":"2755:1:16"}],"functionName":{"name":"eq","nativeSrc":"2741:2:16","nodeType":"YulIdentifier","src":"2741:2:16"},"nativeSrc":"2741:16:16","nodeType":"YulFunctionCall","src":"2741:16:16"},{"arguments":[{"name":"a","nativeSrc":"2766:1:16","nodeType":"YulIdentifier","src":"2766:1:16"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:16","nodeType":"YulIdentifier","src":"2759:6:16"},"nativeSrc":"2759:9:16","nodeType":"YulFunctionCall","src":"2759:9:16"}],"functionName":{"name":"or","nativeSrc":"2738:2:16","nodeType":"YulIdentifier","src":"2738:2:16"},"nativeSrc":"2738:31:16","nodeType":"YulFunctionCall","src":"2738:31:16"},"variableNames":[{"name":"success","nativeSrc":"2727:7:16","nodeType":"YulIdentifier","src":"2727:7:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3637,"isOffset":false,"isSlot":false,"src":"2751:1:16","valueSize":1},{"declaration":3637,"isOffset":false,"isSlot":false,"src":"2766:1:16","valueSize":1},{"declaration":3639,"isOffset":false,"isSlot":false,"src":"2755:1:16","valueSize":1},{"declaration":3647,"isOffset":false,"isSlot":false,"src":"2748:1:16","valueSize":1},{"declaration":3642,"isOffset":false,"isSlot":false,"src":"2727:7:16","valueSize":1}],"flags":["memory-safe"],"id":3652,"nodeType":"InlineAssembly","src":"2570:213:16"},{"expression":{"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3653,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"2842:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3654,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"2851:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3657,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"2871:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3655,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"2855:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"2855:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3661,"nodeType":"ExpressionStatement","src":"2842:37:16"}]}]},"documentation":{"id":3635,"nodeType":"StructuredDocumentation","src":"2298:111:16","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3664,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:16","nodeType":"FunctionDefinition","parameters":{"id":3640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3637,"mutability":"mutable","name":"a","nameLocation":"2438:1:16","nodeType":"VariableDeclaration","scope":3664,"src":"2430:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3639,"mutability":"mutable","name":"b","nameLocation":"2449:1:16","nodeType":"VariableDeclaration","scope":3664,"src":"2441:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:16"},"returnParameters":{"id":3645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"success","nameLocation":"2480:7:16","nodeType":"VariableDeclaration","scope":3664,"src":"2475:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3641,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3644,"mutability":"mutable","name":"result","nameLocation":"2497:6:16","nodeType":"VariableDeclaration","scope":3664,"src":"2489:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3643,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:16"},"scope":5145,"src":"2414:482:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3684,"nodeType":"Block","src":"3111:231:16","statements":[{"id":3683,"nodeType":"UncheckedBlock","src":"3121:215:16","statements":[{"expression":{"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3676,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"3145:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3677,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"3155:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3681,"nodeType":"ExpressionStatement","src":"3145:15:16"},{"AST":{"nativeSrc":"3199:127:16","nodeType":"YulBlock","src":"3199:127:16","statements":[{"nativeSrc":"3293:19:16","nodeType":"YulAssignment","src":"3293:19:16","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:16","nodeType":"YulIdentifier","src":"3307:1:16"},{"name":"b","nativeSrc":"3310:1:16","nodeType":"YulIdentifier","src":"3310:1:16"}],"functionName":{"name":"div","nativeSrc":"3303:3:16","nodeType":"YulIdentifier","src":"3303:3:16"},"nativeSrc":"3303:9:16","nodeType":"YulFunctionCall","src":"3303:9:16"},"variableNames":[{"name":"result","nativeSrc":"3293:6:16","nodeType":"YulIdentifier","src":"3293:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3667,"isOffset":false,"isSlot":false,"src":"3307:1:16","valueSize":1},{"declaration":3669,"isOffset":false,"isSlot":false,"src":"3310:1:16","valueSize":1},{"declaration":3674,"isOffset":false,"isSlot":false,"src":"3293:6:16","valueSize":1}],"flags":["memory-safe"],"id":3682,"nodeType":"InlineAssembly","src":"3174:152:16"}]}]},"documentation":{"id":3665,"nodeType":"StructuredDocumentation","src":"2902:113:16","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3685,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:16","nodeType":"FunctionDefinition","parameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3667,"mutability":"mutable","name":"a","nameLocation":"3044:1:16","nodeType":"VariableDeclaration","scope":3685,"src":"3036:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3669,"mutability":"mutable","name":"b","nameLocation":"3055:1:16","nodeType":"VariableDeclaration","scope":3685,"src":"3047:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:16"},"returnParameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"success","nameLocation":"3086:7:16","nodeType":"VariableDeclaration","scope":3685,"src":"3081:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3671,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3674,"mutability":"mutable","name":"result","nameLocation":"3103:6:16","nodeType":"VariableDeclaration","scope":3685,"src":"3095:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:16"},"scope":5145,"src":"3020:322:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3705,"nodeType":"Block","src":"3567:231:16","statements":[{"id":3704,"nodeType":"UncheckedBlock","src":"3577:215:16","statements":[{"expression":{"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3697,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"3601:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3698,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"3611:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3702,"nodeType":"ExpressionStatement","src":"3601:15:16"},{"AST":{"nativeSrc":"3655:127:16","nodeType":"YulBlock","src":"3655:127:16","statements":[{"nativeSrc":"3749:19:16","nodeType":"YulAssignment","src":"3749:19:16","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:16","nodeType":"YulIdentifier","src":"3763:1:16"},{"name":"b","nativeSrc":"3766:1:16","nodeType":"YulIdentifier","src":"3766:1:16"}],"functionName":{"name":"mod","nativeSrc":"3759:3:16","nodeType":"YulIdentifier","src":"3759:3:16"},"nativeSrc":"3759:9:16","nodeType":"YulFunctionCall","src":"3759:9:16"},"variableNames":[{"name":"result","nativeSrc":"3749:6:16","nodeType":"YulIdentifier","src":"3749:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3688,"isOffset":false,"isSlot":false,"src":"3763:1:16","valueSize":1},{"declaration":3690,"isOffset":false,"isSlot":false,"src":"3766:1:16","valueSize":1},{"declaration":3695,"isOffset":false,"isSlot":false,"src":"3749:6:16","valueSize":1}],"flags":["memory-safe"],"id":3703,"nodeType":"InlineAssembly","src":"3630:152:16"}]}]},"documentation":{"id":3686,"nodeType":"StructuredDocumentation","src":"3348:123:16","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3706,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:16","nodeType":"FunctionDefinition","parameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"a","nameLocation":"3500:1:16","nodeType":"VariableDeclaration","scope":3706,"src":"3492:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3687,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3690,"mutability":"mutable","name":"b","nameLocation":"3511:1:16","nodeType":"VariableDeclaration","scope":3706,"src":"3503:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3689,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:16"},"returnParameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"success","nameLocation":"3542:7:16","nodeType":"VariableDeclaration","scope":3706,"src":"3537:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3692,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3695,"mutability":"mutable","name":"result","nameLocation":"3559:6:16","nodeType":"VariableDeclaration","scope":3706,"src":"3551:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3694,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:16"},"scope":5145,"src":"3476:322:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3735,"nodeType":"Block","src":"3989:122:16","statements":[{"assignments":[3717,3719],"declarations":[{"constant":false,"id":3717,"mutability":"mutable","name":"success","nameLocation":"4005:7:16","nodeType":"VariableDeclaration","scope":3735,"src":"4000:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3716,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3719,"mutability":"mutable","name":"result","nameLocation":"4022:6:16","nodeType":"VariableDeclaration","scope":3735,"src":"4014:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3724,"initialValue":{"arguments":[{"id":3721,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"4039:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3722,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"4042:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3720,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"4032:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:16"},{"expression":{"arguments":[{"id":3726,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"4069:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3727,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"4078:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3728,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:16","memberName":"max","nodeType":"MemberAccess","src":"4086:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3725,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"4061:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3715,"id":3734,"nodeType":"Return","src":"4054:50:16"}]},"documentation":{"id":3707,"nodeType":"StructuredDocumentation","src":"3804:103:16","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3736,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:16","nodeType":"FunctionDefinition","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"a","nameLocation":"3943:1:16","nodeType":"VariableDeclaration","scope":3736,"src":"3935:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3711,"mutability":"mutable","name":"b","nameLocation":"3954:1:16","nodeType":"VariableDeclaration","scope":3736,"src":"3946:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:16"},"returnParameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3736,"src":"3980:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:16"},"scope":5145,"src":"3912:199:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3755,"nodeType":"Block","src":"4294:73:16","statements":[{"assignments":[null,3747],"declarations":[null,{"constant":false,"id":3747,"mutability":"mutable","name":"result","nameLocation":"4315:6:16","nodeType":"VariableDeclaration","scope":3755,"src":"4307:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3746,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3752,"initialValue":{"arguments":[{"id":3749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"4332:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3750,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"4335:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3748,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"4325:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:16"},{"expression":{"id":3753,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"4354:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3745,"id":3754,"nodeType":"Return","src":"4347:13:16"}]},"documentation":{"id":3737,"nodeType":"StructuredDocumentation","src":"4117:95:16","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3756,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:16","nodeType":"FunctionDefinition","parameters":{"id":3742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"a","nameLocation":"4248:1:16","nodeType":"VariableDeclaration","scope":3756,"src":"4240:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3738,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3741,"mutability":"mutable","name":"b","nameLocation":"4259:1:16","nodeType":"VariableDeclaration","scope":3756,"src":"4251:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3740,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:16"},"returnParameters":{"id":3745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3756,"src":"4285:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:16"},"scope":5145,"src":"4217:150:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3785,"nodeType":"Block","src":"4564:122:16","statements":[{"assignments":[3767,3769],"declarations":[{"constant":false,"id":3767,"mutability":"mutable","name":"success","nameLocation":"4580:7:16","nodeType":"VariableDeclaration","scope":3785,"src":"4575:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3766,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3769,"mutability":"mutable","name":"result","nameLocation":"4597:6:16","nodeType":"VariableDeclaration","scope":3785,"src":"4589:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3774,"initialValue":{"arguments":[{"id":3771,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"4614:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3772,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"4617:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3770,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"4607:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:16"},{"expression":{"arguments":[{"id":3776,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"4644:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3777,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"4653:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3778,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:16","memberName":"max","nodeType":"MemberAccess","src":"4661:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3775,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"4636:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3765,"id":3784,"nodeType":"Return","src":"4629:50:16"}]},"documentation":{"id":3757,"nodeType":"StructuredDocumentation","src":"4373:109:16","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3786,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:16","nodeType":"FunctionDefinition","parameters":{"id":3762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3759,"mutability":"mutable","name":"a","nameLocation":"4518:1:16","nodeType":"VariableDeclaration","scope":3786,"src":"4510:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3761,"mutability":"mutable","name":"b","nameLocation":"4529:1:16","nodeType":"VariableDeclaration","scope":3786,"src":"4521:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3760,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:16"},"returnParameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3786,"src":"4555:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:16"},"scope":5145,"src":"4487:199:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3812,"nodeType":"Block","src":"5158:207:16","statements":[{"id":3811,"nodeType":"UncheckedBlock","src":"5168:191:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3798,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"5306:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3799,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"5312:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3800,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"5316:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3802,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3805,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"5337:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3803,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"5321:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"5321:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3797,"id":3810,"nodeType":"Return","src":"5299:49:16"}]}]},"documentation":{"id":3787,"nodeType":"StructuredDocumentation","src":"4692:374:16","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3813,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:16","nodeType":"FunctionDefinition","parameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"condition","nameLocation":"5093:9:16","nodeType":"VariableDeclaration","scope":3813,"src":"5088:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3788,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3791,"mutability":"mutable","name":"a","nameLocation":"5112:1:16","nodeType":"VariableDeclaration","scope":3813,"src":"5104:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3793,"mutability":"mutable","name":"b","nameLocation":"5123:1:16","nodeType":"VariableDeclaration","scope":3813,"src":"5115:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3792,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:16"},"returnParameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3813,"src":"5149:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:16"},"scope":5145,"src":"5071:294:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3831,"nodeType":"Block","src":"5502:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3824,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"5527:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3825,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"5531:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"5534:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3828,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"5537:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3823,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"5519:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3822,"id":3830,"nodeType":"Return","src":"5512:27:16"}]},"documentation":{"id":3814,"nodeType":"StructuredDocumentation","src":"5371:59:16","text":" @dev Returns the largest of two numbers."},"id":3832,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:16","nodeType":"FunctionDefinition","parameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"mutability":"mutable","name":"a","nameLocation":"5456:1:16","nodeType":"VariableDeclaration","scope":3832,"src":"5448:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3818,"mutability":"mutable","name":"b","nameLocation":"5467:1:16","nodeType":"VariableDeclaration","scope":3832,"src":"5459:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:16"},"returnParameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3832,"src":"5493:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:16"},"scope":5145,"src":"5435:111:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3850,"nodeType":"Block","src":"5684:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3843,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"5709:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3844,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"5713:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3846,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"5716:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3847,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"5719:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3842,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"5701:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3841,"id":3849,"nodeType":"Return","src":"5694:27:16"}]},"documentation":{"id":3833,"nodeType":"StructuredDocumentation","src":"5552:60:16","text":" @dev Returns the smallest of two numbers."},"id":3851,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:16","nodeType":"FunctionDefinition","parameters":{"id":3838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3835,"mutability":"mutable","name":"a","nameLocation":"5638:1:16","nodeType":"VariableDeclaration","scope":3851,"src":"5630:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3837,"mutability":"mutable","name":"b","nameLocation":"5649:1:16","nodeType":"VariableDeclaration","scope":3851,"src":"5641:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:16"},"returnParameters":{"id":3841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3851,"src":"5675:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3839,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:16"},"scope":5145,"src":"5617:111:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3873,"nodeType":"Block","src":"5912:82:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3861,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"5967:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3862,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"5971:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3864,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3865,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"5977:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3866,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"5981:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3860,"id":3872,"nodeType":"Return","src":"5959:28:16"}]},"documentation":{"id":3852,"nodeType":"StructuredDocumentation","src":"5734:102:16","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3874,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:16","nodeType":"FunctionDefinition","parameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"a","nameLocation":"5866:1:16","nodeType":"VariableDeclaration","scope":3874,"src":"5858:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3853,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3856,"mutability":"mutable","name":"b","nameLocation":"5877:1:16","nodeType":"VariableDeclaration","scope":3874,"src":"5869:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:16"},"returnParameters":{"id":3860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3874,"src":"5903:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3858,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:16"},"scope":5145,"src":"5841:153:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3914,"nodeType":"Block","src":"6286:633:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3884,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"6300:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3895,"nodeType":"IfStatement","src":"6296:150:16","trueBody":{"id":3894,"nodeType":"Block","src":"6308:138:16","statements":[{"expression":{"arguments":[{"expression":{"id":3890,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"6412:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1120_$","typeString":"type(library Panic)"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1087,"src":"6412:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3887,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"6400:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1120_$","typeString":"type(library Panic)"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1119,"src":"6400:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3893,"nodeType":"ExpressionStatement","src":"6400:35:16"}]}},{"id":3913,"nodeType":"UncheckedBlock","src":"6829:84:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3898,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"6876:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3896,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"6860:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"6860:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3902,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"6887:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3906,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"6896:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3883,"id":3912,"nodeType":"Return","src":"6853:49:16"}]}]},"documentation":{"id":3875,"nodeType":"StructuredDocumentation","src":"6000:210:16","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3915,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:16","nodeType":"FunctionDefinition","parameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"a","nameLocation":"6240:1:16","nodeType":"VariableDeclaration","scope":3915,"src":"6232:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3879,"mutability":"mutable","name":"b","nameLocation":"6251:1:16","nodeType":"VariableDeclaration","scope":3915,"src":"6243:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:16"},"returnParameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3915,"src":"6277:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:16"},"scope":5145,"src":"6215:704:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4050,"nodeType":"Block","src":"7340:3585:16","statements":[{"id":4049,"nodeType":"UncheckedBlock","src":"7350:3569:16","statements":[{"assignments":[3928,3930],"declarations":[{"constant":false,"id":3928,"mutability":"mutable","name":"high","nameLocation":"7383:4:16","nodeType":"VariableDeclaration","scope":4049,"src":"7375:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3927,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3930,"mutability":"mutable","name":"low","nameLocation":"7397:3:16","nodeType":"VariableDeclaration","scope":4049,"src":"7389:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3935,"initialValue":{"arguments":[{"id":3932,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"7411:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3933,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"7414:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3931,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"7404:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3936,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"7498:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3944,"nodeType":"IfStatement","src":"7494:365:16","trueBody":{"id":3943,"nodeType":"Block","src":"7509:350:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3939,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"7827:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3940,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"7833:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3926,"id":3942,"nodeType":"Return","src":"7820:24:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3945,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"7969:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3946,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"7984:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3963,"nodeType":"IfStatement","src":"7965:142:16","trueBody":{"id":3962,"nodeType":"Block","src":"7990:117:16","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3952,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"8028:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3955,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"8046:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1120_$","typeString":"type(library Panic)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1087,"src":"8046:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3957,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"8070:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1120_$","typeString":"type(library Panic)"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:16","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1083,"src":"8070:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3951,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"8020:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3948,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"8008:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1120_$","typeString":"type(library Panic)"}},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1119,"src":"8008:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3961,"nodeType":"ExpressionStatement","src":"8008:84:16"}]}},{"assignments":[3965],"declarations":[{"constant":false,"id":3965,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:16","nodeType":"VariableDeclaration","scope":4049,"src":"8359:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3966,"nodeType":"VariableDeclarationStatement","src":"8359:17:16"},{"AST":{"nativeSrc":"8415:283:16","nodeType":"YulBlock","src":"8415:283:16","statements":[{"nativeSrc":"8484:38:16","nodeType":"YulAssignment","src":"8484:38:16","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:16","nodeType":"YulIdentifier","src":"8504:1:16"},{"name":"y","nativeSrc":"8507:1:16","nodeType":"YulIdentifier","src":"8507:1:16"},{"name":"denominator","nativeSrc":"8510:11:16","nodeType":"YulIdentifier","src":"8510:11:16"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:16","nodeType":"YulIdentifier","src":"8497:6:16"},"nativeSrc":"8497:25:16","nodeType":"YulFunctionCall","src":"8497:25:16"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:16","nodeType":"YulIdentifier","src":"8484:9:16"}]},{"nativeSrc":"8604:37:16","nodeType":"YulAssignment","src":"8604:37:16","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:16","nodeType":"YulIdentifier","src":"8616:4:16"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:16","nodeType":"YulIdentifier","src":"8625:9:16"},{"name":"low","nativeSrc":"8636:3:16","nodeType":"YulIdentifier","src":"8636:3:16"}],"functionName":{"name":"gt","nativeSrc":"8622:2:16","nodeType":"YulIdentifier","src":"8622:2:16"},"nativeSrc":"8622:18:16","nodeType":"YulFunctionCall","src":"8622:18:16"}],"functionName":{"name":"sub","nativeSrc":"8612:3:16","nodeType":"YulIdentifier","src":"8612:3:16"},"nativeSrc":"8612:29:16","nodeType":"YulFunctionCall","src":"8612:29:16"},"variableNames":[{"name":"high","nativeSrc":"8604:4:16","nodeType":"YulIdentifier","src":"8604:4:16"}]},{"nativeSrc":"8658:26:16","nodeType":"YulAssignment","src":"8658:26:16","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:16","nodeType":"YulIdentifier","src":"8669:3:16"},{"name":"remainder","nativeSrc":"8674:9:16","nodeType":"YulIdentifier","src":"8674:9:16"}],"functionName":{"name":"sub","nativeSrc":"8665:3:16","nodeType":"YulIdentifier","src":"8665:3:16"},"nativeSrc":"8665:19:16","nodeType":"YulFunctionCall","src":"8665:19:16"},"variableNames":[{"name":"low","nativeSrc":"8658:3:16","nodeType":"YulIdentifier","src":"8658:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3922,"isOffset":false,"isSlot":false,"src":"8510:11:16","valueSize":1},{"declaration":3928,"isOffset":false,"isSlot":false,"src":"8604:4:16","valueSize":1},{"declaration":3928,"isOffset":false,"isSlot":false,"src":"8616:4:16","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"8636:3:16","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"8658:3:16","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"8669:3:16","valueSize":1},{"declaration":3965,"isOffset":false,"isSlot":false,"src":"8484:9:16","valueSize":1},{"declaration":3965,"isOffset":false,"isSlot":false,"src":"8625:9:16","valueSize":1},{"declaration":3965,"isOffset":false,"isSlot":false,"src":"8674:9:16","valueSize":1},{"declaration":3918,"isOffset":false,"isSlot":false,"src":"8504:1:16","valueSize":1},{"declaration":3920,"isOffset":false,"isSlot":false,"src":"8507:1:16","valueSize":1}],"flags":["memory-safe"],"id":3967,"nodeType":"InlineAssembly","src":"8390:308:16"},{"assignments":[3969],"declarations":[{"constant":false,"id":3969,"mutability":"mutable","name":"twos","nameLocation":"8910:4:16","nodeType":"VariableDeclaration","scope":4049,"src":"8902:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3976,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"8917:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3972,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"8936:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3974,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:16"},{"AST":{"nativeSrc":"8987:359:16","nodeType":"YulBlock","src":"8987:359:16","statements":[{"nativeSrc":"9052:37:16","nodeType":"YulAssignment","src":"9052:37:16","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:16","nodeType":"YulIdentifier","src":"9071:11:16"},{"name":"twos","nativeSrc":"9084:4:16","nodeType":"YulIdentifier","src":"9084:4:16"}],"functionName":{"name":"div","nativeSrc":"9067:3:16","nodeType":"YulIdentifier","src":"9067:3:16"},"nativeSrc":"9067:22:16","nodeType":"YulFunctionCall","src":"9067:22:16"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:16","nodeType":"YulIdentifier","src":"9052:11:16"}]},{"nativeSrc":"9153:21:16","nodeType":"YulAssignment","src":"9153:21:16","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:16","nodeType":"YulIdentifier","src":"9164:3:16"},{"name":"twos","nativeSrc":"9169:4:16","nodeType":"YulIdentifier","src":"9169:4:16"}],"functionName":{"name":"div","nativeSrc":"9160:3:16","nodeType":"YulIdentifier","src":"9160:3:16"},"nativeSrc":"9160:14:16","nodeType":"YulFunctionCall","src":"9160:14:16"},"variableNames":[{"name":"low","nativeSrc":"9153:3:16","nodeType":"YulIdentifier","src":"9153:3:16"}]},{"nativeSrc":"9293:39:16","nodeType":"YulAssignment","src":"9293:39:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:16","nodeType":"YulLiteral","src":"9313:1:16","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:16","nodeType":"YulIdentifier","src":"9316:4:16"}],"functionName":{"name":"sub","nativeSrc":"9309:3:16","nodeType":"YulIdentifier","src":"9309:3:16"},"nativeSrc":"9309:12:16","nodeType":"YulFunctionCall","src":"9309:12:16"},{"name":"twos","nativeSrc":"9323:4:16","nodeType":"YulIdentifier","src":"9323:4:16"}],"functionName":{"name":"div","nativeSrc":"9305:3:16","nodeType":"YulIdentifier","src":"9305:3:16"},"nativeSrc":"9305:23:16","nodeType":"YulFunctionCall","src":"9305:23:16"},{"kind":"number","nativeSrc":"9330:1:16","nodeType":"YulLiteral","src":"9330:1:16","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:16","nodeType":"YulIdentifier","src":"9301:3:16"},"nativeSrc":"9301:31:16","nodeType":"YulFunctionCall","src":"9301:31:16"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:16","nodeType":"YulIdentifier","src":"9293:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3922,"isOffset":false,"isSlot":false,"src":"9052:11:16","valueSize":1},{"declaration":3922,"isOffset":false,"isSlot":false,"src":"9071:11:16","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"9153:3:16","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"9164:3:16","valueSize":1},{"declaration":3969,"isOffset":false,"isSlot":false,"src":"9084:4:16","valueSize":1},{"declaration":3969,"isOffset":false,"isSlot":false,"src":"9169:4:16","valueSize":1},{"declaration":3969,"isOffset":false,"isSlot":false,"src":"9293:4:16","valueSize":1},{"declaration":3969,"isOffset":false,"isSlot":false,"src":"9316:4:16","valueSize":1},{"declaration":3969,"isOffset":false,"isSlot":false,"src":"9323:4:16","valueSize":1}],"flags":["memory-safe"],"id":3977,"nodeType":"InlineAssembly","src":"8962:384:16"},{"expression":{"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3978,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"9409:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3979,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"9416:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3980,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"9423:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3983,"nodeType":"ExpressionStatement","src":"9409:18:16"},{"assignments":[3985],"declarations":[{"constant":false,"id":3985,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:16","nodeType":"VariableDeclaration","scope":4049,"src":"9762:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3984,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3992,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3987,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"9785:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:16"},{"expression":{"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3993,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"10018:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3995,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"10033:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3996,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"10047:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4000,"nodeType":"ExpressionStatement","src":"10018:36:16"},{"expression":{"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4001,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"10088:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4003,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"10103:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4004,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"10117:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4008,"nodeType":"ExpressionStatement","src":"10088:36:16"},{"expression":{"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4009,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"10160:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4011,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"10175:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4012,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"10189:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4016,"nodeType":"ExpressionStatement","src":"10160:36:16"},{"expression":{"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4017,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"10231:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4019,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"10246:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4020,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"10260:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4024,"nodeType":"ExpressionStatement","src":"10231:36:16"},{"expression":{"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4025,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"10304:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4027,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"10319:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4028,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"10333:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4032,"nodeType":"ExpressionStatement","src":"10304:36:16"},{"expression":{"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4033,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"10378:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4035,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"10393:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4036,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"10407:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4040,"nodeType":"ExpressionStatement","src":"10378:36:16"},{"expression":{"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"10859:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4042,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"10868:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4043,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"10874:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4046,"nodeType":"ExpressionStatement","src":"10859:22:16"},{"expression":{"id":4047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"10902:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3926,"id":4048,"nodeType":"Return","src":"10895:13:16"}]}]},"documentation":{"id":3916,"nodeType":"StructuredDocumentation","src":"6925:312:16","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4051,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:16","nodeType":"FunctionDefinition","parameters":{"id":3923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3918,"mutability":"mutable","name":"x","nameLocation":"7266:1:16","nodeType":"VariableDeclaration","scope":4051,"src":"7258:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3920,"mutability":"mutable","name":"y","nameLocation":"7277:1:16","nodeType":"VariableDeclaration","scope":4051,"src":"7269:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3922,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:16","nodeType":"VariableDeclaration","scope":4051,"src":"7280:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3921,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:16"},"returnParameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"mutability":"mutable","name":"result","nameLocation":"7332:6:16","nodeType":"VariableDeclaration","scope":4051,"src":"7324:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3924,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:16"},"scope":5145,"src":"7242:3683:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4087,"nodeType":"Block","src":"11164:128:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4067,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"11188:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4068,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"11191:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4069,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"11194:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4066,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4051,4088],"referencedDeclaration":4051,"src":"11181:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4074,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"11242:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}],"id":4073,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"11225:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3536_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4077,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"11262:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4078,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"11265:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4079,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"11268:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4076,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4071,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"11209:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"11209:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4065,"id":4086,"nodeType":"Return","src":"11174:111:16"}]},"documentation":{"id":4052,"nodeType":"StructuredDocumentation","src":"10931:118:16","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4088,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:16","nodeType":"FunctionDefinition","parameters":{"id":4062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"x","nameLocation":"11078:1:16","nodeType":"VariableDeclaration","scope":4088,"src":"11070:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4056,"mutability":"mutable","name":"y","nameLocation":"11089:1:16","nodeType":"VariableDeclaration","scope":4088,"src":"11081:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4055,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4058,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:16","nodeType":"VariableDeclaration","scope":4088,"src":"11092:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4057,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4061,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:16","nodeType":"VariableDeclaration","scope":4088,"src":"11113:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"},"typeName":{"id":4060,"nodeType":"UserDefinedTypeName","pathNode":{"id":4059,"name":"Rounding","nameLocations":["11113:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":3536,"src":"11113:8:16"},"referencedDeclaration":3536,"src":"11113:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:16"},"returnParameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4088,"src":"11155:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4063,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:16"},"scope":5145,"src":"11054:238:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4137,"nodeType":"Block","src":"11500:245:16","statements":[{"id":4136,"nodeType":"UncheckedBlock","src":"11510:229:16","statements":[{"assignments":[4101,4103],"declarations":[{"constant":false,"id":4101,"mutability":"mutable","name":"high","nameLocation":"11543:4:16","nodeType":"VariableDeclaration","scope":4136,"src":"11535:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4100,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4103,"mutability":"mutable","name":"low","nameLocation":"11557:3:16","nodeType":"VariableDeclaration","scope":4136,"src":"11549:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4108,"initialValue":{"arguments":[{"id":4105,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"11571:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4106,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"11574:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4104,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"11564:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4109,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"11594:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4111,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"11607:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4122,"nodeType":"IfStatement","src":"11590:86:16","trueBody":{"id":4121,"nodeType":"Block","src":"11610:66:16","statements":[{"expression":{"arguments":[{"expression":{"id":4117,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"11640:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1120_$","typeString":"type(library Panic)"}},"id":4118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:16","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1083,"src":"11640:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4114,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"11628:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1120_$","typeString":"type(library Panic)"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1119,"src":"11628:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4120,"nodeType":"ExpressionStatement","src":"11628:33:16"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4123,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"11697:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4125,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"11712:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4127,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4130,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"11719:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4131,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"11726:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4099,"id":4135,"nodeType":"Return","src":"11689:39:16"}]}]},"documentation":{"id":4089,"nodeType":"StructuredDocumentation","src":"11298:111:16","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4138,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:16","nodeType":"FunctionDefinition","parameters":{"id":4096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4091,"mutability":"mutable","name":"x","nameLocation":"11438:1:16","nodeType":"VariableDeclaration","scope":4138,"src":"11430:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4090,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4093,"mutability":"mutable","name":"y","nameLocation":"11449:1:16","nodeType":"VariableDeclaration","scope":4138,"src":"11441:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4095,"mutability":"mutable","name":"n","nameLocation":"11458:1:16","nodeType":"VariableDeclaration","scope":4138,"src":"11452:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4094,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:16"},"returnParameters":{"id":4099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"mutability":"mutable","name":"result","nameLocation":"11492:6:16","nodeType":"VariableDeclaration","scope":4138,"src":"11484:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4097,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:16"},"scope":5145,"src":"11414:331:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4176,"nodeType":"Block","src":"11963:113:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4154,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"11987:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4155,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"11990:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4156,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"11993:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4153,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4138,4177],"referencedDeclaration":4138,"src":"11980:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4161,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"12031:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}],"id":4160,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"12014:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3536_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4164,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"12051:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4165,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"12054:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4167,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"12062:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4163,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4158,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"11998:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"11998:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4152,"id":4175,"nodeType":"Return","src":"11973:96:16"}]},"documentation":{"id":4139,"nodeType":"StructuredDocumentation","src":"11751:109:16","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4177,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:16","nodeType":"FunctionDefinition","parameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4141,"mutability":"mutable","name":"x","nameLocation":"11889:1:16","nodeType":"VariableDeclaration","scope":4177,"src":"11881:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4140,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4143,"mutability":"mutable","name":"y","nameLocation":"11900:1:16","nodeType":"VariableDeclaration","scope":4177,"src":"11892:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4142,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4145,"mutability":"mutable","name":"n","nameLocation":"11909:1:16","nodeType":"VariableDeclaration","scope":4177,"src":"11903:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4144,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4148,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:16","nodeType":"VariableDeclaration","scope":4177,"src":"11912:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"},"typeName":{"id":4147,"nodeType":"UserDefinedTypeName","pathNode":{"id":4146,"name":"Rounding","nameLocations":["11912:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":3536,"src":"11912:8:16"},"referencedDeclaration":3536,"src":"11912:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:16"},"returnParameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4177,"src":"11954:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:16"},"scope":5145,"src":"11865:211:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4273,"nodeType":"Block","src":"12710:1849:16","statements":[{"id":4272,"nodeType":"UncheckedBlock","src":"12720:1833:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4187,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"12748:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4192,"nodeType":"IfStatement","src":"12744:20:16","trueBody":{"expression":{"hexValue":"30","id":4190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4186,"id":4191,"nodeType":"Return","src":"12756:8:16"}},{"assignments":[4194],"declarations":[{"constant":false,"id":4194,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:16","nodeType":"VariableDeclaration","scope":4272,"src":"13235:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4193,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4198,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4195,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"13255:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4196,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"13259:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:16"},{"assignments":[4200],"declarations":[{"constant":false,"id":4200,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:16","nodeType":"VariableDeclaration","scope":4272,"src":"13274:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4199,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4202,"initialValue":{"id":4201,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"13288:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:16"},{"assignments":[4204],"declarations":[{"constant":false,"id":4204,"mutability":"mutable","name":"x","nameLocation":"13432:1:16","nodeType":"VariableDeclaration","scope":4272,"src":"13425:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4203,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4206,"initialValue":{"hexValue":"30","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:16"},{"assignments":[4208],"declarations":[{"constant":false,"id":4208,"mutability":"mutable","name":"y","nameLocation":"13458:1:16","nodeType":"VariableDeclaration","scope":4272,"src":"13451:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4207,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4210,"initialValue":{"hexValue":"31","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:16"},{"body":{"id":4247,"nodeType":"Block","src":"13501:882:16","statements":[{"assignments":[4215],"declarations":[{"constant":false,"id":4215,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:16","nodeType":"VariableDeclaration","scope":4247,"src":"13519:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4219,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4216,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"13538:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4217,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"13544:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:16"},{"expression":{"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4220,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"13573:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4221,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"13578:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4222,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4223,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"13678:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4224,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"13923:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4225,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"13929:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4226,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"13941:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4231,"nodeType":"ExpressionStatement","src":"13572:395:16"},{"expression":{"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4232,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"13987:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4233,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"13990:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4234,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4235,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"14072:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4236,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"14326:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4237,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"14330:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4240,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"14341:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4238,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:16","typeDescriptions":{}}},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4246,"nodeType":"ExpressionStatement","src":"13986:382:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4211,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"13485:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4248,"nodeType":"WhileStatement","src":"13478:905:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4249,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"14401:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4254,"nodeType":"IfStatement","src":"14397:22:16","trueBody":{"expression":{"hexValue":"30","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4186,"id":4253,"nodeType":"Return","src":"14411:8:16"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4256,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"14470:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4259,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"14477:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:16","subExpression":{"id":4262,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"14490:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4260,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:16","typeDescriptions":{}}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4268,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"14502:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4266,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:16","typeDescriptions":{}}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4255,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"14462:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4186,"id":4271,"nodeType":"Return","src":"14455:50:16"}]}]},"documentation":{"id":4178,"nodeType":"StructuredDocumentation","src":"12082:553:16","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4274,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:16","nodeType":"FunctionDefinition","parameters":{"id":4183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"a","nameLocation":"12664:1:16","nodeType":"VariableDeclaration","scope":4274,"src":"12656:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4179,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4182,"mutability":"mutable","name":"n","nameLocation":"12675:1:16","nodeType":"VariableDeclaration","scope":4274,"src":"12667:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4181,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:16"},"returnParameters":{"id":4186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4274,"src":"12701:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4184,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:16"},"scope":5145,"src":"12640:1919:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4294,"nodeType":"Block","src":"15159:82:16","statements":[{"id":4293,"nodeType":"UncheckedBlock","src":"15169:66:16","statements":[{"expression":{"arguments":[{"id":4286,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"15212:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4287,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"15215:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4290,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"15222:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4284,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"15200:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5145_$","typeString":"type(library Math)"}},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:16","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4331,"src":"15200:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4283,"id":4292,"nodeType":"Return","src":"15193:31:16"}]}]},"documentation":{"id":4275,"nodeType":"StructuredDocumentation","src":"14565:514:16","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4295,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:16","nodeType":"FunctionDefinition","parameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4277,"mutability":"mutable","name":"a","nameLocation":"15113:1:16","nodeType":"VariableDeclaration","scope":4295,"src":"15105:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4276,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4279,"mutability":"mutable","name":"p","nameLocation":"15124:1:16","nodeType":"VariableDeclaration","scope":4295,"src":"15116:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4278,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:16"},"returnParameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4295,"src":"15150:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4281,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:16"},"scope":5145,"src":"15084:157:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4330,"nodeType":"Block","src":"16011:174:16","statements":[{"assignments":[4308,4310],"declarations":[{"constant":false,"id":4308,"mutability":"mutable","name":"success","nameLocation":"16027:7:16","nodeType":"VariableDeclaration","scope":4330,"src":"16022:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4307,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4310,"mutability":"mutable","name":"result","nameLocation":"16044:6:16","nodeType":"VariableDeclaration","scope":4330,"src":"16036:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4309,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4316,"initialValue":{"arguments":[{"id":4312,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"16064:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4313,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"16067:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4314,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"16070:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4311,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4355,4437],"referencedDeclaration":4355,"src":"16054:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:16"},{"condition":{"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:16","subExpression":{"id":4317,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"16087:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4327,"nodeType":"IfStatement","src":"16082:74:16","trueBody":{"id":4326,"nodeType":"Block","src":"16096:60:16","statements":[{"expression":{"arguments":[{"expression":{"id":4322,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"16122:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1120_$","typeString":"type(library Panic)"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1087,"src":"16122:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4319,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"16110:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1120_$","typeString":"type(library Panic)"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1119,"src":"16110:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4325,"nodeType":"ExpressionStatement","src":"16110:35:16"}]}},{"expression":{"id":4328,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"16172:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4306,"id":4329,"nodeType":"Return","src":"16165:13:16"}]},"documentation":{"id":4296,"nodeType":"StructuredDocumentation","src":"15247:678:16","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4331,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:16","nodeType":"FunctionDefinition","parameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"b","nameLocation":"15954:1:16","nodeType":"VariableDeclaration","scope":4331,"src":"15946:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4297,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4300,"mutability":"mutable","name":"e","nameLocation":"15965:1:16","nodeType":"VariableDeclaration","scope":4331,"src":"15957:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4299,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4302,"mutability":"mutable","name":"m","nameLocation":"15976:1:16","nodeType":"VariableDeclaration","scope":4331,"src":"15968:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4301,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:16"},"returnParameters":{"id":4306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4331,"src":"16002:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4304,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:16"},"scope":5145,"src":"15930:255:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4354,"nodeType":"Block","src":"17039:1493:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4345,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"17053:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4352,"nodeType":"IfStatement","src":"17049:29:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4344,"id":4351,"nodeType":"Return","src":"17061:17:16"}},{"AST":{"nativeSrc":"17113:1413:16","nodeType":"YulBlock","src":"17113:1413:16","statements":[{"nativeSrc":"17127:22:16","nodeType":"YulVariableDeclaration","src":"17127:22:16","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:16","nodeType":"YulLiteral","src":"17144:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:16","nodeType":"YulIdentifier","src":"17138:5:16"},"nativeSrc":"17138:11:16","nodeType":"YulFunctionCall","src":"17138:11:16"},"variables":[{"name":"ptr","nativeSrc":"17131:3:16","nodeType":"YulTypedName","src":"17131:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:16","nodeType":"YulIdentifier","src":"18057:3:16"},{"kind":"number","nativeSrc":"18062:4:16","nodeType":"YulLiteral","src":"18062:4:16","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:16","nodeType":"YulIdentifier","src":"18050:6:16"},"nativeSrc":"18050:17:16","nodeType":"YulFunctionCall","src":"18050:17:16"},"nativeSrc":"18050:17:16","nodeType":"YulExpressionStatement","src":"18050:17:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:16","nodeType":"YulIdentifier","src":"18091:3:16"},{"kind":"number","nativeSrc":"18096:4:16","nodeType":"YulLiteral","src":"18096:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:16","nodeType":"YulIdentifier","src":"18087:3:16"},"nativeSrc":"18087:14:16","nodeType":"YulFunctionCall","src":"18087:14:16"},{"kind":"number","nativeSrc":"18103:4:16","nodeType":"YulLiteral","src":"18103:4:16","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:16","nodeType":"YulIdentifier","src":"18080:6:16"},"nativeSrc":"18080:28:16","nodeType":"YulFunctionCall","src":"18080:28:16"},"nativeSrc":"18080:28:16","nodeType":"YulExpressionStatement","src":"18080:28:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:16","nodeType":"YulIdentifier","src":"18132:3:16"},{"kind":"number","nativeSrc":"18137:4:16","nodeType":"YulLiteral","src":"18137:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:16","nodeType":"YulIdentifier","src":"18128:3:16"},"nativeSrc":"18128:14:16","nodeType":"YulFunctionCall","src":"18128:14:16"},{"kind":"number","nativeSrc":"18144:4:16","nodeType":"YulLiteral","src":"18144:4:16","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:16","nodeType":"YulIdentifier","src":"18121:6:16"},"nativeSrc":"18121:28:16","nodeType":"YulFunctionCall","src":"18121:28:16"},"nativeSrc":"18121:28:16","nodeType":"YulExpressionStatement","src":"18121:28:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:16","nodeType":"YulIdentifier","src":"18173:3:16"},{"kind":"number","nativeSrc":"18178:4:16","nodeType":"YulLiteral","src":"18178:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:16","nodeType":"YulIdentifier","src":"18169:3:16"},"nativeSrc":"18169:14:16","nodeType":"YulFunctionCall","src":"18169:14:16"},{"name":"b","nativeSrc":"18185:1:16","nodeType":"YulIdentifier","src":"18185:1:16"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:16","nodeType":"YulIdentifier","src":"18162:6:16"},"nativeSrc":"18162:25:16","nodeType":"YulFunctionCall","src":"18162:25:16"},"nativeSrc":"18162:25:16","nodeType":"YulExpressionStatement","src":"18162:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:16","nodeType":"YulIdentifier","src":"18211:3:16"},{"kind":"number","nativeSrc":"18216:4:16","nodeType":"YulLiteral","src":"18216:4:16","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:16","nodeType":"YulIdentifier","src":"18207:3:16"},"nativeSrc":"18207:14:16","nodeType":"YulFunctionCall","src":"18207:14:16"},{"name":"e","nativeSrc":"18223:1:16","nodeType":"YulIdentifier","src":"18223:1:16"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:16","nodeType":"YulIdentifier","src":"18200:6:16"},"nativeSrc":"18200:25:16","nodeType":"YulFunctionCall","src":"18200:25:16"},"nativeSrc":"18200:25:16","nodeType":"YulExpressionStatement","src":"18200:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:16","nodeType":"YulIdentifier","src":"18249:3:16"},{"kind":"number","nativeSrc":"18254:4:16","nodeType":"YulLiteral","src":"18254:4:16","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:16","nodeType":"YulIdentifier","src":"18245:3:16"},"nativeSrc":"18245:14:16","nodeType":"YulFunctionCall","src":"18245:14:16"},{"name":"m","nativeSrc":"18261:1:16","nodeType":"YulIdentifier","src":"18261:1:16"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:16","nodeType":"YulIdentifier","src":"18238:6:16"},"nativeSrc":"18238:25:16","nodeType":"YulFunctionCall","src":"18238:25:16"},"nativeSrc":"18238:25:16","nodeType":"YulExpressionStatement","src":"18238:25:16"},{"nativeSrc":"18425:57:16","nodeType":"YulAssignment","src":"18425:57:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:16","nodeType":"YulIdentifier","src":"18447:3:16"},"nativeSrc":"18447:5:16","nodeType":"YulFunctionCall","src":"18447:5:16"},{"kind":"number","nativeSrc":"18454:4:16","nodeType":"YulLiteral","src":"18454:4:16","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:16","nodeType":"YulIdentifier","src":"18460:3:16"},{"kind":"number","nativeSrc":"18465:4:16","nodeType":"YulLiteral","src":"18465:4:16","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:16","nodeType":"YulLiteral","src":"18471:4:16","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:16","nodeType":"YulLiteral","src":"18477:4:16","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:16","nodeType":"YulIdentifier","src":"18436:10:16"},"nativeSrc":"18436:46:16","nodeType":"YulFunctionCall","src":"18436:46:16"},"variableNames":[{"name":"success","nativeSrc":"18425:7:16","nodeType":"YulIdentifier","src":"18425:7:16"}]},{"nativeSrc":"18495:21:16","nodeType":"YulAssignment","src":"18495:21:16","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:16","nodeType":"YulLiteral","src":"18511:4:16","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:16","nodeType":"YulIdentifier","src":"18505:5:16"},"nativeSrc":"18505:11:16","nodeType":"YulFunctionCall","src":"18505:11:16"},"variableNames":[{"name":"result","nativeSrc":"18495:6:16","nodeType":"YulIdentifier","src":"18495:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4334,"isOffset":false,"isSlot":false,"src":"18185:1:16","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"18223:1:16","valueSize":1},{"declaration":4338,"isOffset":false,"isSlot":false,"src":"18261:1:16","valueSize":1},{"declaration":4343,"isOffset":false,"isSlot":false,"src":"18495:6:16","valueSize":1},{"declaration":4341,"isOffset":false,"isSlot":false,"src":"18425:7:16","valueSize":1}],"flags":["memory-safe"],"id":4353,"nodeType":"InlineAssembly","src":"17088:1438:16"}]},"documentation":{"id":4332,"nodeType":"StructuredDocumentation","src":"16191:738:16","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4355,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:16","nodeType":"FunctionDefinition","parameters":{"id":4339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4334,"mutability":"mutable","name":"b","nameLocation":"16961:1:16","nodeType":"VariableDeclaration","scope":4355,"src":"16953:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4333,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4336,"mutability":"mutable","name":"e","nameLocation":"16972:1:16","nodeType":"VariableDeclaration","scope":4355,"src":"16964:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4335,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4338,"mutability":"mutable","name":"m","nameLocation":"16983:1:16","nodeType":"VariableDeclaration","scope":4355,"src":"16975:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4337,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:16"},"returnParameters":{"id":4344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4341,"mutability":"mutable","name":"success","nameLocation":"17014:7:16","nodeType":"VariableDeclaration","scope":4355,"src":"17009:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4340,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4343,"mutability":"mutable","name":"result","nameLocation":"17031:6:16","nodeType":"VariableDeclaration","scope":4355,"src":"17023:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4342,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:16"},"scope":5145,"src":"16934:1598:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4390,"nodeType":"Block","src":"18729:179:16","statements":[{"assignments":[4368,4370],"declarations":[{"constant":false,"id":4368,"mutability":"mutable","name":"success","nameLocation":"18745:7:16","nodeType":"VariableDeclaration","scope":4390,"src":"18740:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4367,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4370,"mutability":"mutable","name":"result","nameLocation":"18767:6:16","nodeType":"VariableDeclaration","scope":4390,"src":"18754:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4369,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4376,"initialValue":{"arguments":[{"id":4372,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"18787:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4373,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"18790:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4374,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"18793:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4371,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4355,4437],"referencedDeclaration":4437,"src":"18777:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:16"},{"condition":{"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:16","subExpression":{"id":4377,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"18810:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4387,"nodeType":"IfStatement","src":"18805:74:16","trueBody":{"id":4386,"nodeType":"Block","src":"18819:60:16","statements":[{"expression":{"arguments":[{"expression":{"id":4382,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"18845:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1120_$","typeString":"type(library Panic)"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1087,"src":"18845:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4379,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"18833:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1120_$","typeString":"type(library Panic)"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1119,"src":"18833:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4385,"nodeType":"ExpressionStatement","src":"18833:35:16"}]}},{"expression":{"id":4388,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"18895:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4366,"id":4389,"nodeType":"Return","src":"18888:13:16"}]},"documentation":{"id":4356,"nodeType":"StructuredDocumentation","src":"18538:85:16","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4391,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:16","nodeType":"FunctionDefinition","parameters":{"id":4363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4358,"mutability":"mutable","name":"b","nameLocation":"18657:1:16","nodeType":"VariableDeclaration","scope":4391,"src":"18644:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4357,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4360,"mutability":"mutable","name":"e","nameLocation":"18673:1:16","nodeType":"VariableDeclaration","scope":4391,"src":"18660:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4359,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4362,"mutability":"mutable","name":"m","nameLocation":"18689:1:16","nodeType":"VariableDeclaration","scope":4391,"src":"18676:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4361,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:16"},"returnParameters":{"id":4366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4391,"src":"18715:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4364,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:16"},"scope":5145,"src":"18628:280:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4436,"nodeType":"Block","src":"19162:771:16","statements":[{"condition":{"arguments":[{"id":4406,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"19187:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4405,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"19176:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4415,"nodeType":"IfStatement","src":"19172:47:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4409,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4413,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4404,"id":4414,"nodeType":"Return","src":"19191:28:16"}},{"assignments":[4417],"declarations":[{"constant":false,"id":4417,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:16","nodeType":"VariableDeclaration","scope":4436,"src":"19230:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4416,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4420,"initialValue":{"expression":{"id":4418,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"19245:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:16","memberName":"length","nodeType":"MemberAccess","src":"19245:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:16"},{"expression":{"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4421,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"19335:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4424,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"19361:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:16","memberName":"length","nodeType":"MemberAccess","src":"19361:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4426,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"19371:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:16","memberName":"length","nodeType":"MemberAccess","src":"19371:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4428,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"19381:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4429,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"19387:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4430,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"19390:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4431,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"19393:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4422,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4434,"nodeType":"ExpressionStatement","src":"19335:60:16"},{"AST":{"nativeSrc":"19431:496:16","nodeType":"YulBlock","src":"19431:496:16","statements":[{"nativeSrc":"19445:32:16","nodeType":"YulVariableDeclaration","src":"19445:32:16","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:16","nodeType":"YulIdentifier","src":"19464:6:16"},{"kind":"number","nativeSrc":"19472:4:16","nodeType":"YulLiteral","src":"19472:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:16","nodeType":"YulIdentifier","src":"19460:3:16"},"nativeSrc":"19460:17:16","nodeType":"YulFunctionCall","src":"19460:17:16"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:16","nodeType":"YulTypedName","src":"19449:7:16","type":""}]},{"nativeSrc":"19567:73:16","nodeType":"YulAssignment","src":"19567:73:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:16","nodeType":"YulIdentifier","src":"19589:3:16"},"nativeSrc":"19589:5:16","nodeType":"YulFunctionCall","src":"19589:5:16"},{"kind":"number","nativeSrc":"19596:4:16","nodeType":"YulLiteral","src":"19596:4:16","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:16","nodeType":"YulIdentifier","src":"19602:7:16"},{"arguments":[{"name":"result","nativeSrc":"19617:6:16","nodeType":"YulIdentifier","src":"19617:6:16"}],"functionName":{"name":"mload","nativeSrc":"19611:5:16","nodeType":"YulIdentifier","src":"19611:5:16"},"nativeSrc":"19611:13:16","nodeType":"YulFunctionCall","src":"19611:13:16"},{"name":"dataPtr","nativeSrc":"19626:7:16","nodeType":"YulIdentifier","src":"19626:7:16"},{"name":"mLen","nativeSrc":"19635:4:16","nodeType":"YulIdentifier","src":"19635:4:16"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:16","nodeType":"YulIdentifier","src":"19578:10:16"},"nativeSrc":"19578:62:16","nodeType":"YulFunctionCall","src":"19578:62:16"},"variableNames":[{"name":"success","nativeSrc":"19567:7:16","nodeType":"YulIdentifier","src":"19567:7:16"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:16","nodeType":"YulIdentifier","src":"19796:6:16"},{"name":"mLen","nativeSrc":"19804:4:16","nodeType":"YulIdentifier","src":"19804:4:16"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:16","nodeType":"YulIdentifier","src":"19789:6:16"},"nativeSrc":"19789:20:16","nodeType":"YulFunctionCall","src":"19789:20:16"},"nativeSrc":"19789:20:16","nodeType":"YulExpressionStatement","src":"19789:20:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:16","nodeType":"YulLiteral","src":"19892:4:16","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:16","nodeType":"YulIdentifier","src":"19902:7:16"},{"name":"mLen","nativeSrc":"19911:4:16","nodeType":"YulIdentifier","src":"19911:4:16"}],"functionName":{"name":"add","nativeSrc":"19898:3:16","nodeType":"YulIdentifier","src":"19898:3:16"},"nativeSrc":"19898:18:16","nodeType":"YulFunctionCall","src":"19898:18:16"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:16","nodeType":"YulIdentifier","src":"19885:6:16"},"nativeSrc":"19885:32:16","nodeType":"YulFunctionCall","src":"19885:32:16"},"nativeSrc":"19885:32:16","nodeType":"YulExpressionStatement","src":"19885:32:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":4417,"isOffset":false,"isSlot":false,"src":"19635:4:16","valueSize":1},{"declaration":4417,"isOffset":false,"isSlot":false,"src":"19804:4:16","valueSize":1},{"declaration":4417,"isOffset":false,"isSlot":false,"src":"19911:4:16","valueSize":1},{"declaration":4403,"isOffset":false,"isSlot":false,"src":"19464:6:16","valueSize":1},{"declaration":4403,"isOffset":false,"isSlot":false,"src":"19617:6:16","valueSize":1},{"declaration":4403,"isOffset":false,"isSlot":false,"src":"19796:6:16","valueSize":1},{"declaration":4401,"isOffset":false,"isSlot":false,"src":"19567:7:16","valueSize":1}],"flags":["memory-safe"],"id":4435,"nodeType":"InlineAssembly","src":"19406:521:16"}]},"documentation":{"id":4392,"nodeType":"StructuredDocumentation","src":"18914:88:16","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4437,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:16","nodeType":"FunctionDefinition","parameters":{"id":4399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4394,"mutability":"mutable","name":"b","nameLocation":"19048:1:16","nodeType":"VariableDeclaration","scope":4437,"src":"19035:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4393,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4396,"mutability":"mutable","name":"e","nameLocation":"19072:1:16","nodeType":"VariableDeclaration","scope":4437,"src":"19059:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4395,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4398,"mutability":"mutable","name":"m","nameLocation":"19096:1:16","nodeType":"VariableDeclaration","scope":4437,"src":"19083:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4397,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:16"},"returnParameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"success","nameLocation":"19132:7:16","nodeType":"VariableDeclaration","scope":4437,"src":"19127:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4400,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4403,"mutability":"mutable","name":"result","nameLocation":"19154:6:16","nodeType":"VariableDeclaration","scope":4437,"src":"19141:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4402,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:16"},"scope":5145,"src":"19007:926:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4469,"nodeType":"Block","src":"20088:176:16","statements":[{"body":{"id":4465,"nodeType":"Block","src":"20145:92:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4456,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"20163:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4458,"indexExpression":{"id":4457,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"20173:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4464,"nodeType":"IfStatement","src":"20159:68:16","trueBody":{"id":4463,"nodeType":"Block","src":"20182:45:16","statements":[{"expression":{"hexValue":"66616c7365","id":4461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4444,"id":4462,"nodeType":"Return","src":"20200:12:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4449,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"20118:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4450,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"20122:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:16","memberName":"length","nodeType":"MemberAccess","src":"20122:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4466,"initializationExpression":{"assignments":[4446],"declarations":[{"constant":false,"id":4446,"mutability":"mutable","name":"i","nameLocation":"20111:1:16","nodeType":"VariableDeclaration","scope":4466,"src":"20103:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4445,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4448,"initialValue":{"hexValue":"30","id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:16","subExpression":{"id":4453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"20142:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4455,"nodeType":"ExpressionStatement","src":"20140:3:16"},"nodeType":"ForStatement","src":"20098:139:16"},{"expression":{"hexValue":"74727565","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4444,"id":4468,"nodeType":"Return","src":"20246:11:16"}]},"documentation":{"id":4438,"nodeType":"StructuredDocumentation","src":"19939:72:16","text":" @dev Returns whether the provided byte array is zero."},"id":4470,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:16","nodeType":"FunctionDefinition","parameters":{"id":4441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4440,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:16","nodeType":"VariableDeclaration","scope":4470,"src":"20036:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4439,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:16"},"returnParameters":{"id":4444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4470,"src":"20082:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4442,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:16"},"scope":5145,"src":"20016:248:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4688,"nodeType":"Block","src":"20624:5124:16","statements":[{"id":4687,"nodeType":"UncheckedBlock","src":"20634:5108:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4478,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"20728:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4484,"nodeType":"IfStatement","src":"20724:53:16","trueBody":{"id":4483,"nodeType":"Block","src":"20736:41:16","statements":[{"expression":{"id":4481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"20761:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4477,"id":4482,"nodeType":"Return","src":"20754:8:16"}]}},{"assignments":[4486],"declarations":[{"constant":false,"id":4486,"mutability":"mutable","name":"aa","nameLocation":"21712:2:16","nodeType":"VariableDeclaration","scope":4687,"src":"21704:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4485,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4488,"initialValue":{"id":4487,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"21717:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:16"},{"assignments":[4490],"declarations":[{"constant":false,"id":4490,"mutability":"mutable","name":"xn","nameLocation":"21740:2:16","nodeType":"VariableDeclaration","scope":4687,"src":"21732:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4489,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4492,"initialValue":{"hexValue":"31","id":4491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4493,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"21765:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4508,"nodeType":"IfStatement","src":"21761:92:16","trueBody":{"id":4507,"nodeType":"Block","src":"21783:70:16","statements":[{"expression":{"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4499,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"21801:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4502,"nodeType":"ExpressionStatement","src":"21801:10:16"},{"expression":{"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4503,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"21829:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4506,"nodeType":"ExpressionStatement","src":"21829:9:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"21870:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4524,"nodeType":"IfStatement","src":"21866:90:16","trueBody":{"id":4523,"nodeType":"Block","src":"21887:69:16","statements":[{"expression":{"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4515,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"21905:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4518,"nodeType":"ExpressionStatement","src":"21905:9:16"},{"expression":{"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4519,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"21932:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4522,"nodeType":"ExpressionStatement","src":"21932:9:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4525,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"21973:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4540,"nodeType":"IfStatement","src":"21969:90:16","trueBody":{"id":4539,"nodeType":"Block","src":"21990:69:16","statements":[{"expression":{"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4531,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"22008:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4534,"nodeType":"ExpressionStatement","src":"22008:9:16"},{"expression":{"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4535,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"22035:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4538,"nodeType":"ExpressionStatement","src":"22035:9:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4541,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"22076:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4545,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4556,"nodeType":"IfStatement","src":"22072:89:16","trueBody":{"id":4555,"nodeType":"Block","src":"22093:68:16","statements":[{"expression":{"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4547,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"22111:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4550,"nodeType":"ExpressionStatement","src":"22111:9:16"},{"expression":{"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4551,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"22138:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4554,"nodeType":"ExpressionStatement","src":"22138:8:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4557,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"22178:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4561,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4572,"nodeType":"IfStatement","src":"22174:87:16","trueBody":{"id":4571,"nodeType":"Block","src":"22194:67:16","statements":[{"expression":{"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4563,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"22212:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4566,"nodeType":"ExpressionStatement","src":"22212:8:16"},{"expression":{"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4567,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"22238:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4570,"nodeType":"ExpressionStatement","src":"22238:8:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4573,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"22278:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4588,"nodeType":"IfStatement","src":"22274:87:16","trueBody":{"id":4587,"nodeType":"Block","src":"22294:67:16","statements":[{"expression":{"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4579,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"22312:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4582,"nodeType":"ExpressionStatement","src":"22312:8:16"},{"expression":{"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4583,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"22338:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4586,"nodeType":"ExpressionStatement","src":"22338:8:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4589,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"22378:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4600,"nodeType":"IfStatement","src":"22374:61:16","trueBody":{"id":4599,"nodeType":"Block","src":"22394:41:16","statements":[{"expression":{"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4595,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"22412:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4598,"nodeType":"ExpressionStatement","src":"22412:8:16"}]}},{"expression":{"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4601,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"22855:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4603,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"22865:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4609,"nodeType":"ExpressionStatement","src":"22855:18:16"},{"expression":{"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4610,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24760:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4611,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24766:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4612,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"24771:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4613,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24775:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4620,"nodeType":"ExpressionStatement","src":"24760:23:16"},{"expression":{"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4621,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24869:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4622,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24875:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4623,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"24880:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4624,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24884:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4631,"nodeType":"ExpressionStatement","src":"24869:23:16"},{"expression":{"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4632,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24980:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4633,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24986:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4634,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"24991:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4635,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24995:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4638,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4642,"nodeType":"ExpressionStatement","src":"24980:23:16"},{"expression":{"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4643,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25089:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4644,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25095:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4645,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"25100:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4646,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25104:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4649,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4653,"nodeType":"ExpressionStatement","src":"25089:23:16"},{"expression":{"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4654,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25199:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4655,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25205:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4656,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"25210:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4657,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25214:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4664,"nodeType":"ExpressionStatement","src":"25199:23:16"},{"expression":{"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4665,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25309:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4666,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25315:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4667,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"25320:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4668,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25324:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4675,"nodeType":"ExpressionStatement","src":"25309:23:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4676,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25698:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4679,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25719:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4680,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"25724:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4681,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25728:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4677,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"25703:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"25703:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4477,"id":4686,"nodeType":"Return","src":"25691:40:16"}]}]},"documentation":{"id":4471,"nodeType":"StructuredDocumentation","src":"20270:292:16","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4689,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:16","nodeType":"FunctionDefinition","parameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"a","nameLocation":"20589:1:16","nodeType":"VariableDeclaration","scope":4689,"src":"20581:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:16"},"returnParameters":{"id":4477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4689,"src":"20615:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4475,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:16"},"scope":5145,"src":"20567:5181:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4722,"nodeType":"Block","src":"25921:171:16","statements":[{"id":4721,"nodeType":"UncheckedBlock","src":"25931:155:16","statements":[{"assignments":[4701],"declarations":[{"constant":false,"id":4701,"mutability":"mutable","name":"result","nameLocation":"25963:6:16","nodeType":"VariableDeclaration","scope":4721,"src":"25955:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4700,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4705,"initialValue":{"arguments":[{"id":4703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"25977:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4702,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4689,4723],"referencedDeclaration":4689,"src":"25972:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4706,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"26000:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4710,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4695,"src":"26042:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}],"id":4709,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"26025:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3536_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"26055:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"26064:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4715,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"26073:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4707,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"26009:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"26009:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4699,"id":4720,"nodeType":"Return","src":"25993:82:16"}]}]},"documentation":{"id":4690,"nodeType":"StructuredDocumentation","src":"25754:86:16","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4723,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:16","nodeType":"FunctionDefinition","parameters":{"id":4696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4692,"mutability":"mutable","name":"a","nameLocation":"25867:1:16","nodeType":"VariableDeclaration","scope":4723,"src":"25859:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4691,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4695,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:16","nodeType":"VariableDeclaration","scope":4723,"src":"25870:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"},"typeName":{"id":4694,"nodeType":"UserDefinedTypeName","pathNode":{"id":4693,"name":"Rounding","nameLocations":["25870:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":3536,"src":"25870:8:16"},"referencedDeclaration":3536,"src":"25870:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:16"},"returnParameters":{"id":4699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4723,"src":"25912:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4697,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:16"},"scope":5145,"src":"25845:247:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4813,"nodeType":"Block","src":"26281:2334:16","statements":[{"expression":{"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4731,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"26363:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"26383:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4732,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"26367:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"26367:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4741,"nodeType":"ExpressionStatement","src":"26363:64:16"},{"expression":{"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4742,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"26503:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4745,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"26525:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4746,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"26530:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4748,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4743,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"26508:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"26508:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:16","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4755,"nodeType":"ExpressionStatement","src":"26503:56:16"},{"expression":{"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4756,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"26634:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4759,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"26656:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4760,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"26661:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4757,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"26639:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"26639:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:16","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4769,"nodeType":"ExpressionStatement","src":"26634:48:16"},{"expression":{"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4770,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"26757:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4773,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"26779:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4774,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"26784:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4776,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:16","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4771,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"26762:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"26762:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4783,"nodeType":"ExpressionStatement","src":"26757:44:16"},{"expression":{"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4784,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"26874:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4787,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"26896:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4788,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"26901:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4785,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"26879:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"26879:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4797,"nodeType":"ExpressionStatement","src":"26874:42:16"},{"expression":{"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4798,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"26988:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4801,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"27010:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4802,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"27015:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4799,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"26993:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"26993:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4811,"nodeType":"ExpressionStatement","src":"26988:41:16"},{"AST":{"nativeSrc":"28490:119:16","nodeType":"YulBlock","src":"28490:119:16","statements":[{"nativeSrc":"28504:95:16","nodeType":"YulAssignment","src":"28504:95:16","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:16","nodeType":"YulIdentifier","src":"28512:1:16"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:16","nodeType":"YulIdentifier","src":"28524:1:16"},{"name":"x","nativeSrc":"28527:1:16","nodeType":"YulIdentifier","src":"28527:1:16"}],"functionName":{"name":"shr","nativeSrc":"28520:3:16","nodeType":"YulIdentifier","src":"28520:3:16"},"nativeSrc":"28520:9:16","nodeType":"YulFunctionCall","src":"28520:9:16"},{"kind":"number","nativeSrc":"28531:66:16","nodeType":"YulLiteral","src":"28531:66:16","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:16","nodeType":"YulIdentifier","src":"28515:4:16"},"nativeSrc":"28515:83:16","nodeType":"YulFunctionCall","src":"28515:83:16"}],"functionName":{"name":"or","nativeSrc":"28509:2:16","nodeType":"YulIdentifier","src":"28509:2:16"},"nativeSrc":"28509:90:16","nodeType":"YulFunctionCall","src":"28509:90:16"},"variableNames":[{"name":"r","nativeSrc":"28504:1:16","nodeType":"YulIdentifier","src":"28504:1:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4729,"isOffset":false,"isSlot":false,"src":"28504:1:16","valueSize":1},{"declaration":4729,"isOffset":false,"isSlot":false,"src":"28512:1:16","valueSize":1},{"declaration":4729,"isOffset":false,"isSlot":false,"src":"28524:1:16","valueSize":1},{"declaration":4726,"isOffset":false,"isSlot":false,"src":"28527:1:16","valueSize":1}],"flags":["memory-safe"],"id":4812,"nodeType":"InlineAssembly","src":"28465:144:16"}]},"documentation":{"id":4724,"nodeType":"StructuredDocumentation","src":"26098:119:16","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4814,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:16","nodeType":"FunctionDefinition","parameters":{"id":4727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4726,"mutability":"mutable","name":"x","nameLocation":"26244:1:16","nodeType":"VariableDeclaration","scope":4814,"src":"26236:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4725,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:16"},"returnParameters":{"id":4730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4729,"mutability":"mutable","name":"r","nameLocation":"26278:1:16","nodeType":"VariableDeclaration","scope":4814,"src":"26270:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4728,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:16"},"scope":5145,"src":"26222:2393:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4847,"nodeType":"Block","src":"28848:175:16","statements":[{"id":4846,"nodeType":"UncheckedBlock","src":"28858:159:16","statements":[{"assignments":[4826],"declarations":[{"constant":false,"id":4826,"mutability":"mutable","name":"result","nameLocation":"28890:6:16","nodeType":"VariableDeclaration","scope":4846,"src":"28882:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4825,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4830,"initialValue":{"arguments":[{"id":4828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"28904:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4827,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4814,4848],"referencedDeclaration":4814,"src":"28899:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4831,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"28931:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4835,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"28973:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}],"id":4834,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"28956:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3536_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4838,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"28991:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"29000:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4832,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"28940:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"28940:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4824,"id":4845,"nodeType":"Return","src":"28924:82:16"}]}]},"documentation":{"id":4815,"nodeType":"StructuredDocumentation","src":"28621:142:16","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4848,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:16","nodeType":"FunctionDefinition","parameters":{"id":4821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4817,"mutability":"mutable","name":"value","nameLocation":"28790:5:16","nodeType":"VariableDeclaration","scope":4848,"src":"28782:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4816,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4820,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:16","nodeType":"VariableDeclaration","scope":4848,"src":"28797:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"},"typeName":{"id":4819,"nodeType":"UserDefinedTypeName","pathNode":{"id":4818,"name":"Rounding","nameLocations":["28797:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":3536,"src":"28797:8:16"},"referencedDeclaration":3536,"src":"28797:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:16"},"returnParameters":{"id":4824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4848,"src":"28839:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4822,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:16"},"scope":5145,"src":"28768:255:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4976,"nodeType":"Block","src":"29216:854:16","statements":[{"assignments":[4857],"declarations":[{"constant":false,"id":4857,"mutability":"mutable","name":"result","nameLocation":"29234:6:16","nodeType":"VariableDeclaration","scope":4976,"src":"29226:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4856,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4859,"initialValue":{"hexValue":"30","id":4858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:16"},{"id":4973,"nodeType":"UncheckedBlock","src":"29254:787:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"29282:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4876,"nodeType":"IfStatement","src":"29278:103:16","trueBody":{"id":4875,"nodeType":"Block","src":"29301:80:16","statements":[{"expression":{"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"29319:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4870,"nodeType":"ExpressionStatement","src":"29319:17:16"},{"expression":{"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4871,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"29354:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4874,"nodeType":"ExpressionStatement","src":"29354:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"29398:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4893,"nodeType":"IfStatement","src":"29394:103:16","trueBody":{"id":4892,"nodeType":"Block","src":"29417:80:16","statements":[{"expression":{"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"29435:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4887,"nodeType":"ExpressionStatement","src":"29435:17:16"},{"expression":{"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4888,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"29470:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4891,"nodeType":"ExpressionStatement","src":"29470:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"29514:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4910,"nodeType":"IfStatement","src":"29510:103:16","trueBody":{"id":4909,"nodeType":"Block","src":"29533:80:16","statements":[{"expression":{"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"29551:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4904,"nodeType":"ExpressionStatement","src":"29551:17:16"},{"expression":{"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4905,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"29586:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4908,"nodeType":"ExpressionStatement","src":"29586:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"29630:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4927,"nodeType":"IfStatement","src":"29626:100:16","trueBody":{"id":4926,"nodeType":"Block","src":"29648:78:16","statements":[{"expression":{"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"29666:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4921,"nodeType":"ExpressionStatement","src":"29666:16:16"},{"expression":{"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4922,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"29700:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4925,"nodeType":"ExpressionStatement","src":"29700:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"29743:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4944,"nodeType":"IfStatement","src":"29739:100:16","trueBody":{"id":4943,"nodeType":"Block","src":"29761:78:16","statements":[{"expression":{"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"29779:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4938,"nodeType":"ExpressionStatement","src":"29779:16:16"},{"expression":{"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4939,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"29813:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4942,"nodeType":"ExpressionStatement","src":"29813:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"29856:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4961,"nodeType":"IfStatement","src":"29852:100:16","trueBody":{"id":4960,"nodeType":"Block","src":"29874:78:16","statements":[{"expression":{"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"29892:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4955,"nodeType":"ExpressionStatement","src":"29892:16:16"},{"expression":{"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4956,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"29926:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4959,"nodeType":"ExpressionStatement","src":"29926:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"29969:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4972,"nodeType":"IfStatement","src":"29965:66:16","trueBody":{"id":4971,"nodeType":"Block","src":"29987:44:16","statements":[{"expression":{"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4967,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"30005:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4970,"nodeType":"ExpressionStatement","src":"30005:11:16"}]}}]},{"expression":{"id":4974,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"30057:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4855,"id":4975,"nodeType":"Return","src":"30050:13:16"}]},"documentation":{"id":4849,"nodeType":"StructuredDocumentation","src":"29029:120:16","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4977,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:16","nodeType":"FunctionDefinition","parameters":{"id":4852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4851,"mutability":"mutable","name":"value","nameLocation":"29177:5:16","nodeType":"VariableDeclaration","scope":4977,"src":"29169:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4850,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:16"},"returnParameters":{"id":4855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4977,"src":"29207:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4853,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:16"},"scope":5145,"src":"29154:916:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5010,"nodeType":"Block","src":"30305:177:16","statements":[{"id":5009,"nodeType":"UncheckedBlock","src":"30315:161:16","statements":[{"assignments":[4989],"declarations":[{"constant":false,"id":4989,"mutability":"mutable","name":"result","nameLocation":"30347:6:16","nodeType":"VariableDeclaration","scope":5009,"src":"30339:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4988,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4993,"initialValue":{"arguments":[{"id":4991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"30362:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4990,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4977,5011],"referencedDeclaration":4977,"src":"30356:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4994,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"30389:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4998,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"30431:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}],"id":4997,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"30414:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3536_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5001,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"30450:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"30459:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4995,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"30398:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"30398:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4987,"id":5008,"nodeType":"Return","src":"30382:83:16"}]}]},"documentation":{"id":4978,"nodeType":"StructuredDocumentation","src":"30076:143:16","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5011,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:16","nodeType":"FunctionDefinition","parameters":{"id":4984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4980,"mutability":"mutable","name":"value","nameLocation":"30247:5:16","nodeType":"VariableDeclaration","scope":5011,"src":"30239:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4979,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4983,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:16","nodeType":"VariableDeclaration","scope":5011,"src":"30254:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"},"typeName":{"id":4982,"nodeType":"UserDefinedTypeName","pathNode":{"id":4981,"name":"Rounding","nameLocations":["30254:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":3536,"src":"30254:8:16"},"referencedDeclaration":3536,"src":"30254:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:16"},"returnParameters":{"id":4987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5011,"src":"30296:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4985,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:16"},"scope":5145,"src":"30224:258:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5087,"nodeType":"Block","src":"30800:675:16","statements":[{"expression":{"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5019,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"30882:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5022,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"30902:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5020,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"30886:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"30886:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5029,"nodeType":"ExpressionStatement","src":"30882:64:16"},{"expression":{"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5030,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"31022:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5033,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"31044:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5034,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"31049:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5031,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"31027:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"31027:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:16","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5043,"nodeType":"ExpressionStatement","src":"31022:56:16"},{"expression":{"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5044,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"31153:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5047,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"31175:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5048,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"31180:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5050,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5045,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"31158:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"31158:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:16","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5057,"nodeType":"ExpressionStatement","src":"31153:48:16"},{"expression":{"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5058,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"31276:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5061,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"31298:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5062,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"31303:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:16","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5059,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"31281:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"31281:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5071,"nodeType":"ExpressionStatement","src":"31276:44:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5072,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"31426:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5078,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"31453:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5079,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"31458:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5076,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"31436:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"31436:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5018,"id":5086,"nodeType":"Return","src":"31418:50:16"}]},"documentation":{"id":5012,"nodeType":"StructuredDocumentation","src":"30488:246:16","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5088,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:16","nodeType":"FunctionDefinition","parameters":{"id":5015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5014,"mutability":"mutable","name":"x","nameLocation":"30763:1:16","nodeType":"VariableDeclaration","scope":5088,"src":"30755:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5013,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:16"},"returnParameters":{"id":5018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5017,"mutability":"mutable","name":"r","nameLocation":"30797:1:16","nodeType":"VariableDeclaration","scope":5088,"src":"30789:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5016,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:16"},"scope":5145,"src":"30739:736:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5124,"nodeType":"Block","src":"31712:184:16","statements":[{"id":5123,"nodeType":"UncheckedBlock","src":"31722:168:16","statements":[{"assignments":[5100],"declarations":[{"constant":false,"id":5100,"mutability":"mutable","name":"result","nameLocation":"31754:6:16","nodeType":"VariableDeclaration","scope":5123,"src":"31746:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5099,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5104,"initialValue":{"arguments":[{"id":5102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"31770:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5101,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5088,5125],"referencedDeclaration":5088,"src":"31763:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5105,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"31797:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5109,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"31839:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}],"id":5108,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"31822:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3536_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"31858:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"31873:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5106,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"31806:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"31806:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5098,"id":5122,"nodeType":"Return","src":"31790:89:16"}]}]},"documentation":{"id":5089,"nodeType":"StructuredDocumentation","src":"31481:144:16","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5125,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:16","nodeType":"FunctionDefinition","parameters":{"id":5095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5091,"mutability":"mutable","name":"value","nameLocation":"31654:5:16","nodeType":"VariableDeclaration","scope":5125,"src":"31646:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5090,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5094,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:16","nodeType":"VariableDeclaration","scope":5125,"src":"31661:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"},"typeName":{"id":5093,"nodeType":"UserDefinedTypeName","pathNode":{"id":5092,"name":"Rounding","nameLocations":["31661:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":3536,"src":"31661:8:16"},"referencedDeclaration":3536,"src":"31661:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:16"},"returnParameters":{"id":5098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5125,"src":"31703:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5096,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:16"},"scope":5145,"src":"31630:266:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5143,"nodeType":"Block","src":"32094:48:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5136,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"32117:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}],"id":5135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5134,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:16","typeDescriptions":{}}},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5133,"id":5142,"nodeType":"Return","src":"32104:31:16"}]},"documentation":{"id":5126,"nodeType":"StructuredDocumentation","src":"31902:113:16","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5144,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:16","nodeType":"FunctionDefinition","parameters":{"id":5130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5129,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:16","nodeType":"VariableDeclaration","scope":5144,"src":"32046:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"},"typeName":{"id":5128,"nodeType":"UserDefinedTypeName","pathNode":{"id":5127,"name":"Rounding","nameLocations":["32046:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":3536,"src":"32046:8:16"},"referencedDeclaration":3536,"src":"32046:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3536","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:16"},"returnParameters":{"id":5133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5144,"src":"32088:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5131,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:16"},"scope":5145,"src":"32020:122:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5146,"src":"281:31863:16","usedErrors":[],"usedEvents":[]}],"src":"103:32042:16"},"id":16},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6910]},"id":6911,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5147,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5148,"nodeType":"StructuredDocumentation","src":"218:550:17","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6910,"linearizedBaseContracts":[6910],"name":"SafeCast","nameLocation":"777:8:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5149,"nodeType":"StructuredDocumentation","src":"792:68:17","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5155,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:17","nodeType":"ErrorDefinition","parameters":{"id":5154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5151,"mutability":"mutable","name":"bits","nameLocation":"908:4:17","nodeType":"VariableDeclaration","scope":5155,"src":"902:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5150,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5153,"mutability":"mutable","name":"value","nameLocation":"922:5:17","nodeType":"VariableDeclaration","scope":5155,"src":"914:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5152,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:17"},"src":"865:64:17"},{"documentation":{"id":5156,"nodeType":"StructuredDocumentation","src":"935:75:17","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5160,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:17","nodeType":"ErrorDefinition","parameters":{"id":5159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5158,"mutability":"mutable","name":"value","nameLocation":"1056:5:17","nodeType":"VariableDeclaration","scope":5160,"src":"1049:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5157,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:17"},"src":"1015:48:17"},{"documentation":{"id":5161,"nodeType":"StructuredDocumentation","src":"1069:67:17","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5167,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:17","nodeType":"ErrorDefinition","parameters":{"id":5166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5163,"mutability":"mutable","name":"bits","nameLocation":"1183:4:17","nodeType":"VariableDeclaration","scope":5167,"src":"1177:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5162,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5165,"mutability":"mutable","name":"value","nameLocation":"1196:5:17","nodeType":"VariableDeclaration","scope":5167,"src":"1189:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5164,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:17"},"src":"1141:62:17"},{"documentation":{"id":5168,"nodeType":"StructuredDocumentation","src":"1209:75:17","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5172,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:17","nodeType":"ErrorDefinition","parameters":{"id":5171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5170,"mutability":"mutable","name":"value","nameLocation":"1331:5:17","nodeType":"VariableDeclaration","scope":5172,"src":"1323:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:17"},"src":"1289:49:17"},{"body":{"id":5199,"nodeType":"Block","src":"1695:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"1709:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5182,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5181,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:17","memberName":"max","nodeType":"MemberAccess","src":"1717:17:17","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5193,"nodeType":"IfStatement","src":"1705:105:17","trueBody":{"id":5192,"nodeType":"Block","src":"1736:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:17","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"1793:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5187,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"1757:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5191,"nodeType":"RevertStatement","src":"1750:49:17"}]}},{"expression":{"arguments":[{"id":5196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"1834:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5194,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:17","typeDescriptions":{}}},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5179,"id":5198,"nodeType":"Return","src":"1819:21:17"}]},"documentation":{"id":5173,"nodeType":"StructuredDocumentation","src":"1344:280:17","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5200,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:17","nodeType":"FunctionDefinition","parameters":{"id":5176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5175,"mutability":"mutable","name":"value","nameLocation":"1656:5:17","nodeType":"VariableDeclaration","scope":5200,"src":"1648:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5174,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:17"},"returnParameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5200,"src":"1686:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5177,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:17","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:17"},"scope":6910,"src":"1629:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5227,"nodeType":"Block","src":"2204:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"2218:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5210,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5209,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:17","memberName":"max","nodeType":"MemberAccess","src":"2226:17:17","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5221,"nodeType":"IfStatement","src":"2214:105:17","trueBody":{"id":5220,"nodeType":"Block","src":"2245:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:17","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"2302:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5215,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"2266:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5219,"nodeType":"RevertStatement","src":"2259:49:17"}]}},{"expression":{"arguments":[{"id":5224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"2343:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5222,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:17","typeDescriptions":{}}},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5207,"id":5226,"nodeType":"Return","src":"2328:21:17"}]},"documentation":{"id":5201,"nodeType":"StructuredDocumentation","src":"1853:280:17","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5228,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:17","nodeType":"FunctionDefinition","parameters":{"id":5204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5203,"mutability":"mutable","name":"value","nameLocation":"2165:5:17","nodeType":"VariableDeclaration","scope":5228,"src":"2157:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5202,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:17"},"returnParameters":{"id":5207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5228,"src":"2195:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5205,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:17","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:17"},"scope":6910,"src":"2138:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5255,"nodeType":"Block","src":"2713:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"2727:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5238,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5237,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:17","memberName":"max","nodeType":"MemberAccess","src":"2735:17:17","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5249,"nodeType":"IfStatement","src":"2723:105:17","trueBody":{"id":5248,"nodeType":"Block","src":"2754:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:17","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"2811:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5243,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"2775:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5247,"nodeType":"RevertStatement","src":"2768:49:17"}]}},{"expression":{"arguments":[{"id":5252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"2852:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5250,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:17","typeDescriptions":{}}},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5235,"id":5254,"nodeType":"Return","src":"2837:21:17"}]},"documentation":{"id":5229,"nodeType":"StructuredDocumentation","src":"2362:280:17","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5256,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:17","nodeType":"FunctionDefinition","parameters":{"id":5232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5231,"mutability":"mutable","name":"value","nameLocation":"2674:5:17","nodeType":"VariableDeclaration","scope":5256,"src":"2666:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5230,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:17"},"returnParameters":{"id":5235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5256,"src":"2704:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5233,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:17","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:17"},"scope":6910,"src":"2647:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5283,"nodeType":"Block","src":"3222:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"3236:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5266,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5265,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:17","memberName":"max","nodeType":"MemberAccess","src":"3244:17:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5277,"nodeType":"IfStatement","src":"3232:105:17","trueBody":{"id":5276,"nodeType":"Block","src":"3263:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:17","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"3320:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5271,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"3284:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5275,"nodeType":"RevertStatement","src":"3277:49:17"}]}},{"expression":{"arguments":[{"id":5280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"3361:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5278,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:17","typeDescriptions":{}}},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5263,"id":5282,"nodeType":"Return","src":"3346:21:17"}]},"documentation":{"id":5257,"nodeType":"StructuredDocumentation","src":"2871:280:17","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5284,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:17","nodeType":"FunctionDefinition","parameters":{"id":5260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5259,"mutability":"mutable","name":"value","nameLocation":"3183:5:17","nodeType":"VariableDeclaration","scope":5284,"src":"3175:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5258,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:17"},"returnParameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5284,"src":"3213:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5261,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:17"},"scope":6910,"src":"3156:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5311,"nodeType":"Block","src":"3731:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"3745:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5294,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5293,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:17","memberName":"max","nodeType":"MemberAccess","src":"3753:17:17","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5305,"nodeType":"IfStatement","src":"3741:105:17","trueBody":{"id":5304,"nodeType":"Block","src":"3772:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:17","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"3829:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5299,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"3793:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5303,"nodeType":"RevertStatement","src":"3786:49:17"}]}},{"expression":{"arguments":[{"id":5308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"3870:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5306,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:17","typeDescriptions":{}}},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5291,"id":5310,"nodeType":"Return","src":"3855:21:17"}]},"documentation":{"id":5285,"nodeType":"StructuredDocumentation","src":"3380:280:17","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5312,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:17","nodeType":"FunctionDefinition","parameters":{"id":5288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5287,"mutability":"mutable","name":"value","nameLocation":"3692:5:17","nodeType":"VariableDeclaration","scope":5312,"src":"3684:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5286,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:17"},"returnParameters":{"id":5291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5312,"src":"3722:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5289,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:17","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:17"},"scope":6910,"src":"3665:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5339,"nodeType":"Block","src":"4240:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"4254:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5322,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5321,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:17","memberName":"max","nodeType":"MemberAccess","src":"4262:17:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5333,"nodeType":"IfStatement","src":"4250:105:17","trueBody":{"id":5332,"nodeType":"Block","src":"4281:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:17","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"4338:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5327,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"4302:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5331,"nodeType":"RevertStatement","src":"4295:49:17"}]}},{"expression":{"arguments":[{"id":5336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"4379:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5334,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:17","typeDescriptions":{}}},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5319,"id":5338,"nodeType":"Return","src":"4364:21:17"}]},"documentation":{"id":5313,"nodeType":"StructuredDocumentation","src":"3889:280:17","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5340,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:17","nodeType":"FunctionDefinition","parameters":{"id":5316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5315,"mutability":"mutable","name":"value","nameLocation":"4201:5:17","nodeType":"VariableDeclaration","scope":5340,"src":"4193:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5314,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:17"},"returnParameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5340,"src":"4231:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5317,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:17"},"scope":6910,"src":"4174:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5367,"nodeType":"Block","src":"4749:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"4763:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5350,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5349,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:17","memberName":"max","nodeType":"MemberAccess","src":"4771:17:17","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5361,"nodeType":"IfStatement","src":"4759:105:17","trueBody":{"id":5360,"nodeType":"Block","src":"4790:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:17","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"4847:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5355,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"4811:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5359,"nodeType":"RevertStatement","src":"4804:49:17"}]}},{"expression":{"arguments":[{"id":5364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"4888:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5362,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:17","typeDescriptions":{}}},"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5347,"id":5366,"nodeType":"Return","src":"4873:21:17"}]},"documentation":{"id":5341,"nodeType":"StructuredDocumentation","src":"4398:280:17","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5368,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:17","nodeType":"FunctionDefinition","parameters":{"id":5344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5343,"mutability":"mutable","name":"value","nameLocation":"4710:5:17","nodeType":"VariableDeclaration","scope":5368,"src":"4702:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5342,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:17"},"returnParameters":{"id":5347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5368,"src":"4740:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5345,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:17","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:17"},"scope":6910,"src":"4683:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5395,"nodeType":"Block","src":"5258:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"5272:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5378,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5377,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:17","memberName":"max","nodeType":"MemberAccess","src":"5280:17:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5389,"nodeType":"IfStatement","src":"5268:105:17","trueBody":{"id":5388,"nodeType":"Block","src":"5299:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:17","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"5356:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5383,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"5320:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5387,"nodeType":"RevertStatement","src":"5313:49:17"}]}},{"expression":{"arguments":[{"id":5392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"5397:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5390,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:17","typeDescriptions":{}}},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5375,"id":5394,"nodeType":"Return","src":"5382:21:17"}]},"documentation":{"id":5369,"nodeType":"StructuredDocumentation","src":"4907:280:17","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5396,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:17","nodeType":"FunctionDefinition","parameters":{"id":5372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5371,"mutability":"mutable","name":"value","nameLocation":"5219:5:17","nodeType":"VariableDeclaration","scope":5396,"src":"5211:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5370,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:17"},"returnParameters":{"id":5375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5396,"src":"5249:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5373,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:17"},"scope":6910,"src":"5192:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5423,"nodeType":"Block","src":"5767:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"5781:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5406,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5405,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:17","memberName":"max","nodeType":"MemberAccess","src":"5789:17:17","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5417,"nodeType":"IfStatement","src":"5777:105:17","trueBody":{"id":5416,"nodeType":"Block","src":"5808:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:17","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"5865:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5411,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"5829:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5415,"nodeType":"RevertStatement","src":"5822:49:17"}]}},{"expression":{"arguments":[{"id":5420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"5906:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5418,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:17","typeDescriptions":{}}},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5403,"id":5422,"nodeType":"Return","src":"5891:21:17"}]},"documentation":{"id":5397,"nodeType":"StructuredDocumentation","src":"5416:280:17","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5424,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:17","nodeType":"FunctionDefinition","parameters":{"id":5400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5399,"mutability":"mutable","name":"value","nameLocation":"5728:5:17","nodeType":"VariableDeclaration","scope":5424,"src":"5720:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5398,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:17"},"returnParameters":{"id":5403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5424,"src":"5758:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5401,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:17","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:17"},"scope":6910,"src":"5701:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5451,"nodeType":"Block","src":"6276:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"6290:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5434,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5433,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:17","memberName":"max","nodeType":"MemberAccess","src":"6298:17:17","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5445,"nodeType":"IfStatement","src":"6286:105:17","trueBody":{"id":5444,"nodeType":"Block","src":"6317:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:17","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"6374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5439,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"6338:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5443,"nodeType":"RevertStatement","src":"6331:49:17"}]}},{"expression":{"arguments":[{"id":5448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"6415:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5446,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:17","typeDescriptions":{}}},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5431,"id":5450,"nodeType":"Return","src":"6400:21:17"}]},"documentation":{"id":5425,"nodeType":"StructuredDocumentation","src":"5925:280:17","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5452,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:17","nodeType":"FunctionDefinition","parameters":{"id":5428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5427,"mutability":"mutable","name":"value","nameLocation":"6237:5:17","nodeType":"VariableDeclaration","scope":5452,"src":"6229:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5426,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:17"},"returnParameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5452,"src":"6267:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5429,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:17","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:17"},"scope":6910,"src":"6210:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5479,"nodeType":"Block","src":"6785:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"6799:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5462,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5461,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:17","memberName":"max","nodeType":"MemberAccess","src":"6807:17:17","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5473,"nodeType":"IfStatement","src":"6795:105:17","trueBody":{"id":5472,"nodeType":"Block","src":"6826:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:17","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"6883:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5467,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"6847:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5471,"nodeType":"RevertStatement","src":"6840:49:17"}]}},{"expression":{"arguments":[{"id":5476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"6924:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5474,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:17","typeDescriptions":{}}},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5459,"id":5478,"nodeType":"Return","src":"6909:21:17"}]},"documentation":{"id":5453,"nodeType":"StructuredDocumentation","src":"6434:280:17","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5480,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:17","nodeType":"FunctionDefinition","parameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5455,"mutability":"mutable","name":"value","nameLocation":"6746:5:17","nodeType":"VariableDeclaration","scope":5480,"src":"6738:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5454,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:17"},"returnParameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5480,"src":"6776:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5457,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:17","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:17"},"scope":6910,"src":"6719:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5507,"nodeType":"Block","src":"7294:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"7308:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5490,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5489,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:17","memberName":"max","nodeType":"MemberAccess","src":"7316:17:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5501,"nodeType":"IfStatement","src":"7304:105:17","trueBody":{"id":5500,"nodeType":"Block","src":"7335:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:17","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"7392:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5495,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"7356:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5499,"nodeType":"RevertStatement","src":"7349:49:17"}]}},{"expression":{"arguments":[{"id":5504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"7433:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5502,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:17","typeDescriptions":{}}},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5487,"id":5506,"nodeType":"Return","src":"7418:21:17"}]},"documentation":{"id":5481,"nodeType":"StructuredDocumentation","src":"6943:280:17","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5508,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:17","nodeType":"FunctionDefinition","parameters":{"id":5484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5483,"mutability":"mutable","name":"value","nameLocation":"7255:5:17","nodeType":"VariableDeclaration","scope":5508,"src":"7247:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5482,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:17"},"returnParameters":{"id":5487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5508,"src":"7285:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5485,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:17"},"scope":6910,"src":"7228:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5535,"nodeType":"Block","src":"7803:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"7817:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5518,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5517,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:17","memberName":"max","nodeType":"MemberAccess","src":"7825:17:17","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5529,"nodeType":"IfStatement","src":"7813:105:17","trueBody":{"id":5528,"nodeType":"Block","src":"7844:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:17","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"7901:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5523,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"7865:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5527,"nodeType":"RevertStatement","src":"7858:49:17"}]}},{"expression":{"arguments":[{"id":5532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"7942:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5530,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:17","typeDescriptions":{}}},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5515,"id":5534,"nodeType":"Return","src":"7927:21:17"}]},"documentation":{"id":5509,"nodeType":"StructuredDocumentation","src":"7452:280:17","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5536,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:17","nodeType":"FunctionDefinition","parameters":{"id":5512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"mutability":"mutable","name":"value","nameLocation":"7764:5:17","nodeType":"VariableDeclaration","scope":5536,"src":"7756:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5510,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:17"},"returnParameters":{"id":5515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5536,"src":"7794:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5513,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:17","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:17"},"scope":6910,"src":"7737:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5563,"nodeType":"Block","src":"8312:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"8326:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5546,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5545,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:17","memberName":"max","nodeType":"MemberAccess","src":"8334:17:17","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5557,"nodeType":"IfStatement","src":"8322:105:17","trueBody":{"id":5556,"nodeType":"Block","src":"8353:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:17","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"8410:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5551,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"8374:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5555,"nodeType":"RevertStatement","src":"8367:49:17"}]}},{"expression":{"arguments":[{"id":5560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"8451:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5558,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:17","typeDescriptions":{}}},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5543,"id":5562,"nodeType":"Return","src":"8436:21:17"}]},"documentation":{"id":5537,"nodeType":"StructuredDocumentation","src":"7961:280:17","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5564,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:17","nodeType":"FunctionDefinition","parameters":{"id":5540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5539,"mutability":"mutable","name":"value","nameLocation":"8273:5:17","nodeType":"VariableDeclaration","scope":5564,"src":"8265:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5538,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:17"},"returnParameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5564,"src":"8303:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5541,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:17","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:17"},"scope":6910,"src":"8246:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5591,"nodeType":"Block","src":"8821:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"8835:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5574,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5573,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:17","memberName":"max","nodeType":"MemberAccess","src":"8843:17:17","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5585,"nodeType":"IfStatement","src":"8831:105:17","trueBody":{"id":5584,"nodeType":"Block","src":"8862:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:17","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"8919:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5579,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"8883:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5583,"nodeType":"RevertStatement","src":"8876:49:17"}]}},{"expression":{"arguments":[{"id":5588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"8960:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5586,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:17","typeDescriptions":{}}},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5571,"id":5590,"nodeType":"Return","src":"8945:21:17"}]},"documentation":{"id":5565,"nodeType":"StructuredDocumentation","src":"8470:280:17","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5592,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:17","nodeType":"FunctionDefinition","parameters":{"id":5568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5567,"mutability":"mutable","name":"value","nameLocation":"8782:5:17","nodeType":"VariableDeclaration","scope":5592,"src":"8774:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5566,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:17"},"returnParameters":{"id":5571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5592,"src":"8812:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5569,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:17","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:17"},"scope":6910,"src":"8755:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5619,"nodeType":"Block","src":"9330:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"9344:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5602,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5601,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:17","memberName":"max","nodeType":"MemberAccess","src":"9352:17:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5613,"nodeType":"IfStatement","src":"9340:105:17","trueBody":{"id":5612,"nodeType":"Block","src":"9371:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"9428:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5607,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"9392:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5611,"nodeType":"RevertStatement","src":"9385:49:17"}]}},{"expression":{"arguments":[{"id":5616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"9469:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5614,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:17","typeDescriptions":{}}},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5599,"id":5618,"nodeType":"Return","src":"9454:21:17"}]},"documentation":{"id":5593,"nodeType":"StructuredDocumentation","src":"8979:280:17","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5620,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:17","nodeType":"FunctionDefinition","parameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5595,"mutability":"mutable","name":"value","nameLocation":"9291:5:17","nodeType":"VariableDeclaration","scope":5620,"src":"9283:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5594,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:17"},"returnParameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5620,"src":"9321:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5597,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:17"},"scope":6910,"src":"9264:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5647,"nodeType":"Block","src":"9839:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"9853:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5630,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5629,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:17","memberName":"max","nodeType":"MemberAccess","src":"9861:17:17","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5641,"nodeType":"IfStatement","src":"9849:105:17","trueBody":{"id":5640,"nodeType":"Block","src":"9880:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:17","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"9937:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5635,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"9901:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5639,"nodeType":"RevertStatement","src":"9894:49:17"}]}},{"expression":{"arguments":[{"id":5644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"9978:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5642,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:17","typeDescriptions":{}}},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5627,"id":5646,"nodeType":"Return","src":"9963:21:17"}]},"documentation":{"id":5621,"nodeType":"StructuredDocumentation","src":"9488:280:17","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5648,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:17","nodeType":"FunctionDefinition","parameters":{"id":5624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5623,"mutability":"mutable","name":"value","nameLocation":"9800:5:17","nodeType":"VariableDeclaration","scope":5648,"src":"9792:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5622,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:17"},"returnParameters":{"id":5627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5648,"src":"9830:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5625,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:17","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:17"},"scope":6910,"src":"9773:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5675,"nodeType":"Block","src":"10348:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"10362:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5658,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5657,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:17","memberName":"max","nodeType":"MemberAccess","src":"10370:17:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5669,"nodeType":"IfStatement","src":"10358:105:17","trueBody":{"id":5668,"nodeType":"Block","src":"10389:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:17","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"10446:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5663,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"10410:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5667,"nodeType":"RevertStatement","src":"10403:49:17"}]}},{"expression":{"arguments":[{"id":5672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"10487:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5670,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:17","typeDescriptions":{}}},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5655,"id":5674,"nodeType":"Return","src":"10472:21:17"}]},"documentation":{"id":5649,"nodeType":"StructuredDocumentation","src":"9997:280:17","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5676,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:17","nodeType":"FunctionDefinition","parameters":{"id":5652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5651,"mutability":"mutable","name":"value","nameLocation":"10309:5:17","nodeType":"VariableDeclaration","scope":5676,"src":"10301:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5650,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:17"},"returnParameters":{"id":5655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5676,"src":"10339:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5653,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:17"},"scope":6910,"src":"10282:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5703,"nodeType":"Block","src":"10857:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"10871:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5686,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5685,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:17","memberName":"max","nodeType":"MemberAccess","src":"10879:17:17","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5697,"nodeType":"IfStatement","src":"10867:105:17","trueBody":{"id":5696,"nodeType":"Block","src":"10898:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:17","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"10955:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5691,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"10919:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5695,"nodeType":"RevertStatement","src":"10912:49:17"}]}},{"expression":{"arguments":[{"id":5700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"10996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5698,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:17","typeDescriptions":{}}},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5683,"id":5702,"nodeType":"Return","src":"10981:21:17"}]},"documentation":{"id":5677,"nodeType":"StructuredDocumentation","src":"10506:280:17","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5704,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:17","nodeType":"FunctionDefinition","parameters":{"id":5680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5679,"mutability":"mutable","name":"value","nameLocation":"10818:5:17","nodeType":"VariableDeclaration","scope":5704,"src":"10810:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5678,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:17"},"returnParameters":{"id":5683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5704,"src":"10848:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5681,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:17","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:17"},"scope":6910,"src":"10791:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5731,"nodeType":"Block","src":"11360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"11374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5714,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5713,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:17","memberName":"max","nodeType":"MemberAccess","src":"11382:16:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5725,"nodeType":"IfStatement","src":"11370:103:17","trueBody":{"id":5724,"nodeType":"Block","src":"11400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"11456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5719,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"11421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5723,"nodeType":"RevertStatement","src":"11414:48:17"}]}},{"expression":{"arguments":[{"id":5728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"11496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5726,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:17","typeDescriptions":{}}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5711,"id":5730,"nodeType":"Return","src":"11482:20:17"}]},"documentation":{"id":5705,"nodeType":"StructuredDocumentation","src":"11015:276:17","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5732,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:17","nodeType":"FunctionDefinition","parameters":{"id":5708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5707,"mutability":"mutable","name":"value","nameLocation":"11322:5:17","nodeType":"VariableDeclaration","scope":5732,"src":"11314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5706,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:17"},"returnParameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5732,"src":"11352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5709,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:17"},"scope":6910,"src":"11296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5759,"nodeType":"Block","src":"11860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"11874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5742,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5741,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:17","memberName":"max","nodeType":"MemberAccess","src":"11882:16:17","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5753,"nodeType":"IfStatement","src":"11870:103:17","trueBody":{"id":5752,"nodeType":"Block","src":"11900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"11956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5747,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"11921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5751,"nodeType":"RevertStatement","src":"11914:48:17"}]}},{"expression":{"arguments":[{"id":5756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"11996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5754,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:17","typeDescriptions":{}}},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5739,"id":5758,"nodeType":"Return","src":"11982:20:17"}]},"documentation":{"id":5733,"nodeType":"StructuredDocumentation","src":"11515:276:17","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5760,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:17","nodeType":"FunctionDefinition","parameters":{"id":5736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5735,"mutability":"mutable","name":"value","nameLocation":"11822:5:17","nodeType":"VariableDeclaration","scope":5760,"src":"11814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5734,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:17"},"returnParameters":{"id":5739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5760,"src":"11852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5737,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:17","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:17"},"scope":6910,"src":"11796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5787,"nodeType":"Block","src":"12360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"12374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5770,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5769,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:17","memberName":"max","nodeType":"MemberAccess","src":"12382:16:17","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5781,"nodeType":"IfStatement","src":"12370:103:17","trueBody":{"id":5780,"nodeType":"Block","src":"12400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"12456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5775,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"12421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5779,"nodeType":"RevertStatement","src":"12414:48:17"}]}},{"expression":{"arguments":[{"id":5784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"12496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5782,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:17","typeDescriptions":{}}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5767,"id":5786,"nodeType":"Return","src":"12482:20:17"}]},"documentation":{"id":5761,"nodeType":"StructuredDocumentation","src":"12015:276:17","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5788,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:17","nodeType":"FunctionDefinition","parameters":{"id":5764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5763,"mutability":"mutable","name":"value","nameLocation":"12322:5:17","nodeType":"VariableDeclaration","scope":5788,"src":"12314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5762,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:17"},"returnParameters":{"id":5767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5788,"src":"12352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5765,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:17","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:17"},"scope":6910,"src":"12296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5815,"nodeType":"Block","src":"12860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"12874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5798,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5797,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:17","memberName":"max","nodeType":"MemberAccess","src":"12882:16:17","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5809,"nodeType":"IfStatement","src":"12870:103:17","trueBody":{"id":5808,"nodeType":"Block","src":"12900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"12956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5803,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"12921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5807,"nodeType":"RevertStatement","src":"12914:48:17"}]}},{"expression":{"arguments":[{"id":5812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"12996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5810,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:17","typeDescriptions":{}}},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5795,"id":5814,"nodeType":"Return","src":"12982:20:17"}]},"documentation":{"id":5789,"nodeType":"StructuredDocumentation","src":"12515:276:17","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5816,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:17","nodeType":"FunctionDefinition","parameters":{"id":5792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5791,"mutability":"mutable","name":"value","nameLocation":"12822:5:17","nodeType":"VariableDeclaration","scope":5816,"src":"12814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5790,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:17"},"returnParameters":{"id":5795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5816,"src":"12852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5793,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:17","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:17"},"scope":6910,"src":"12796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5843,"nodeType":"Block","src":"13360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"13374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5826,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5825,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:17","memberName":"max","nodeType":"MemberAccess","src":"13382:16:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5837,"nodeType":"IfStatement","src":"13370:103:17","trueBody":{"id":5836,"nodeType":"Block","src":"13400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"13456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5831,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"13421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5835,"nodeType":"RevertStatement","src":"13414:48:17"}]}},{"expression":{"arguments":[{"id":5840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"13496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5838,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:17","typeDescriptions":{}}},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5823,"id":5842,"nodeType":"Return","src":"13482:20:17"}]},"documentation":{"id":5817,"nodeType":"StructuredDocumentation","src":"13015:276:17","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5844,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:17","nodeType":"FunctionDefinition","parameters":{"id":5820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5819,"mutability":"mutable","name":"value","nameLocation":"13322:5:17","nodeType":"VariableDeclaration","scope":5844,"src":"13314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5818,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:17"},"returnParameters":{"id":5823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5844,"src":"13352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5821,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:17"},"scope":6910,"src":"13296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5871,"nodeType":"Block","src":"13860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"13874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5854,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5853,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:17","memberName":"max","nodeType":"MemberAccess","src":"13882:16:17","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5865,"nodeType":"IfStatement","src":"13870:103:17","trueBody":{"id":5864,"nodeType":"Block","src":"13900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"13956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5859,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"13921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5863,"nodeType":"RevertStatement","src":"13914:48:17"}]}},{"expression":{"arguments":[{"id":5868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"13996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5866,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:17","typeDescriptions":{}}},"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5851,"id":5870,"nodeType":"Return","src":"13982:20:17"}]},"documentation":{"id":5845,"nodeType":"StructuredDocumentation","src":"13515:276:17","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5872,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:17","nodeType":"FunctionDefinition","parameters":{"id":5848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5847,"mutability":"mutable","name":"value","nameLocation":"13822:5:17","nodeType":"VariableDeclaration","scope":5872,"src":"13814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5846,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:17"},"returnParameters":{"id":5851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5872,"src":"13852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5849,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:17","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:17"},"scope":6910,"src":"13796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5899,"nodeType":"Block","src":"14360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"14374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5882,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5881,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:17","memberName":"max","nodeType":"MemberAccess","src":"14382:16:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5893,"nodeType":"IfStatement","src":"14370:103:17","trueBody":{"id":5892,"nodeType":"Block","src":"14400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"14456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5887,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"14421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5891,"nodeType":"RevertStatement","src":"14414:48:17"}]}},{"expression":{"arguments":[{"id":5896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"14496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5894,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:17","typeDescriptions":{}}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5879,"id":5898,"nodeType":"Return","src":"14482:20:17"}]},"documentation":{"id":5873,"nodeType":"StructuredDocumentation","src":"14015:276:17","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5900,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:17","nodeType":"FunctionDefinition","parameters":{"id":5876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5875,"mutability":"mutable","name":"value","nameLocation":"14322:5:17","nodeType":"VariableDeclaration","scope":5900,"src":"14314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5874,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:17"},"returnParameters":{"id":5879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5900,"src":"14352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5877,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:17"},"scope":6910,"src":"14296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5927,"nodeType":"Block","src":"14860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"14874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5910,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5909,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:17","memberName":"max","nodeType":"MemberAccess","src":"14882:16:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5921,"nodeType":"IfStatement","src":"14870:103:17","trueBody":{"id":5920,"nodeType":"Block","src":"14900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"14956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5915,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"14921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5919,"nodeType":"RevertStatement","src":"14914:48:17"}]}},{"expression":{"arguments":[{"id":5924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"14996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5922,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:17","typeDescriptions":{}}},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5907,"id":5926,"nodeType":"Return","src":"14982:20:17"}]},"documentation":{"id":5901,"nodeType":"StructuredDocumentation","src":"14515:276:17","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5928,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:17","nodeType":"FunctionDefinition","parameters":{"id":5904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5903,"mutability":"mutable","name":"value","nameLocation":"14822:5:17","nodeType":"VariableDeclaration","scope":5928,"src":"14814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5902,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:17"},"returnParameters":{"id":5907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5928,"src":"14852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5905,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:17"},"scope":6910,"src":"14796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5955,"nodeType":"Block","src":"15360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"15374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5938,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5937,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:17","memberName":"max","nodeType":"MemberAccess","src":"15382:16:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5949,"nodeType":"IfStatement","src":"15370:103:17","trueBody":{"id":5948,"nodeType":"Block","src":"15400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"15456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5943,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"15421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5947,"nodeType":"RevertStatement","src":"15414:48:17"}]}},{"expression":{"arguments":[{"id":5952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"15496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5950,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:17","typeDescriptions":{}}},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5935,"id":5954,"nodeType":"Return","src":"15482:20:17"}]},"documentation":{"id":5929,"nodeType":"StructuredDocumentation","src":"15015:276:17","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5956,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:17","nodeType":"FunctionDefinition","parameters":{"id":5932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5931,"mutability":"mutable","name":"value","nameLocation":"15322:5:17","nodeType":"VariableDeclaration","scope":5956,"src":"15314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5930,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:17"},"returnParameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5956,"src":"15352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5933,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:17"},"scope":6910,"src":"15296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5983,"nodeType":"Block","src":"15860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"15874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5966,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5965,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:17","memberName":"max","nodeType":"MemberAccess","src":"15882:16:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5977,"nodeType":"IfStatement","src":"15870:103:17","trueBody":{"id":5976,"nodeType":"Block","src":"15900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"15956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5971,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"15921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5975,"nodeType":"RevertStatement","src":"15914:48:17"}]}},{"expression":{"arguments":[{"id":5980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"15996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5978,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:17","typeDescriptions":{}}},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5963,"id":5982,"nodeType":"Return","src":"15982:20:17"}]},"documentation":{"id":5957,"nodeType":"StructuredDocumentation","src":"15515:276:17","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5984,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:17","nodeType":"FunctionDefinition","parameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5959,"mutability":"mutable","name":"value","nameLocation":"15822:5:17","nodeType":"VariableDeclaration","scope":5984,"src":"15814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5958,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:17"},"returnParameters":{"id":5963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5984,"src":"15852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5961,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:17"},"scope":6910,"src":"15796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6011,"nodeType":"Block","src":"16360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"16374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5994,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5993,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:17","memberName":"max","nodeType":"MemberAccess","src":"16382:16:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6005,"nodeType":"IfStatement","src":"16370:103:17","trueBody":{"id":6004,"nodeType":"Block","src":"16400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"16456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5999,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"16421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6003,"nodeType":"RevertStatement","src":"16414:48:17"}]}},{"expression":{"arguments":[{"id":6008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"16496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6006,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:17","typeDescriptions":{}}},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5991,"id":6010,"nodeType":"Return","src":"16482:20:17"}]},"documentation":{"id":5985,"nodeType":"StructuredDocumentation","src":"16015:276:17","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6012,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:17","nodeType":"FunctionDefinition","parameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"value","nameLocation":"16322:5:17","nodeType":"VariableDeclaration","scope":6012,"src":"16314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5986,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:17"},"returnParameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6012,"src":"16352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5989,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:17"},"scope":6910,"src":"16296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6039,"nodeType":"Block","src":"16854:146:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"16868:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6022,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6021,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:17","memberName":"max","nodeType":"MemberAccess","src":"16876:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6033,"nodeType":"IfStatement","src":"16864:101:17","trueBody":{"id":6032,"nodeType":"Block","src":"16893:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"16948:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6027,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"16914:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6031,"nodeType":"RevertStatement","src":"16907:47:17"}]}},{"expression":{"arguments":[{"id":6036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"16987:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6034,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:17","typeDescriptions":{}}},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6019,"id":6038,"nodeType":"Return","src":"16974:19:17"}]},"documentation":{"id":6013,"nodeType":"StructuredDocumentation","src":"16515:272:17","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6040,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:17","nodeType":"FunctionDefinition","parameters":{"id":6016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6015,"mutability":"mutable","name":"value","nameLocation":"16817:5:17","nodeType":"VariableDeclaration","scope":6040,"src":"16809:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6014,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:17"},"returnParameters":{"id":6019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6040,"src":"16847:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6017,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:17"},"scope":6910,"src":"16792:208:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6062,"nodeType":"Block","src":"17236:128:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"17250:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6056,"nodeType":"IfStatement","src":"17246:81:17","trueBody":{"id":6055,"nodeType":"Block","src":"17261:66:17","statements":[{"errorCall":{"arguments":[{"id":6052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"17310:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6051,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"17282:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6054,"nodeType":"RevertStatement","src":"17275:41:17"}]}},{"expression":{"arguments":[{"id":6059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"17351:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6057,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:17","typeDescriptions":{}}},"id":6060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6047,"id":6061,"nodeType":"Return","src":"17336:21:17"}]},"documentation":{"id":6041,"nodeType":"StructuredDocumentation","src":"17006:160:17","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6063,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:17","nodeType":"FunctionDefinition","parameters":{"id":6044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6043,"mutability":"mutable","name":"value","nameLocation":"17197:5:17","nodeType":"VariableDeclaration","scope":6063,"src":"17190:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6042,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:17"},"returnParameters":{"id":6047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6063,"src":"17227:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6045,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:17"},"scope":6910,"src":"17171:193:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6088,"nodeType":"Block","src":"17761:150:17","statements":[{"expression":{"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6071,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"17771:10:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"17791:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6072,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:17","typeDescriptions":{}}},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6077,"nodeType":"ExpressionStatement","src":"17771:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6078,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"17811:10:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"17825:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6087,"nodeType":"IfStatement","src":"17807:98:17","trueBody":{"id":6086,"nodeType":"Block","src":"17832:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:17","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"17888:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6081,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"17853:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6085,"nodeType":"RevertStatement","src":"17846:48:17"}]}}]},"documentation":{"id":6064,"nodeType":"StructuredDocumentation","src":"17370:312:17","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6089,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:17","nodeType":"FunctionDefinition","parameters":{"id":6067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6066,"mutability":"mutable","name":"value","nameLocation":"17712:5:17","nodeType":"VariableDeclaration","scope":6089,"src":"17705:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6065,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:17"},"returnParameters":{"id":6070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6069,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:17","nodeType":"VariableDeclaration","scope":6089,"src":"17742:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6068,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:17"},"scope":6910,"src":"17687:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6114,"nodeType":"Block","src":"18308:150:17","statements":[{"expression":{"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6097,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"18318:10:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"18338:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6098,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:17","typeDescriptions":{}}},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6103,"nodeType":"ExpressionStatement","src":"18318:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6104,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"18358:10:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"18372:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6113,"nodeType":"IfStatement","src":"18354:98:17","trueBody":{"id":6112,"nodeType":"Block","src":"18379:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:17","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"18435:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6107,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"18400:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6111,"nodeType":"RevertStatement","src":"18393:48:17"}]}}]},"documentation":{"id":6090,"nodeType":"StructuredDocumentation","src":"17917:312:17","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6115,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:17","nodeType":"FunctionDefinition","parameters":{"id":6093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6092,"mutability":"mutable","name":"value","nameLocation":"18259:5:17","nodeType":"VariableDeclaration","scope":6115,"src":"18252:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6091,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:17"},"returnParameters":{"id":6096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6095,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:17","nodeType":"VariableDeclaration","scope":6115,"src":"18289:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6094,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:17"},"scope":6910,"src":"18234:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6140,"nodeType":"Block","src":"18855:150:17","statements":[{"expression":{"id":6128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6123,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"18865:10:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"18885:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6124,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:17","typeDescriptions":{}}},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6129,"nodeType":"ExpressionStatement","src":"18865:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6130,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"18905:10:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"18919:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6139,"nodeType":"IfStatement","src":"18901:98:17","trueBody":{"id":6138,"nodeType":"Block","src":"18926:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:17","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"18982:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6133,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"18947:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6137,"nodeType":"RevertStatement","src":"18940:48:17"}]}}]},"documentation":{"id":6116,"nodeType":"StructuredDocumentation","src":"18464:312:17","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6141,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:17","nodeType":"FunctionDefinition","parameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6118,"mutability":"mutable","name":"value","nameLocation":"18806:5:17","nodeType":"VariableDeclaration","scope":6141,"src":"18799:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6117,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:17"},"returnParameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:17","nodeType":"VariableDeclaration","scope":6141,"src":"18836:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6120,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:17"},"scope":6910,"src":"18781:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6166,"nodeType":"Block","src":"19402:150:17","statements":[{"expression":{"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6149,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"19412:10:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"19432:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6150,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:17","typeDescriptions":{}}},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6155,"nodeType":"ExpressionStatement","src":"19412:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6156,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"19452:10:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"19466:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6165,"nodeType":"IfStatement","src":"19448:98:17","trueBody":{"id":6164,"nodeType":"Block","src":"19473:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:17","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"19529:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6159,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"19494:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6163,"nodeType":"RevertStatement","src":"19487:48:17"}]}}]},"documentation":{"id":6142,"nodeType":"StructuredDocumentation","src":"19011:312:17","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6167,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:17","nodeType":"FunctionDefinition","parameters":{"id":6145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6144,"mutability":"mutable","name":"value","nameLocation":"19353:5:17","nodeType":"VariableDeclaration","scope":6167,"src":"19346:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6143,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:17"},"returnParameters":{"id":6148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6147,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:17","nodeType":"VariableDeclaration","scope":6167,"src":"19383:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6146,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:17"},"scope":6910,"src":"19328:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6192,"nodeType":"Block","src":"19949:150:17","statements":[{"expression":{"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6175,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"19959:10:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"19979:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6176,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:17","typeDescriptions":{}}},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6181,"nodeType":"ExpressionStatement","src":"19959:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6182,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"19999:10:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"20013:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6191,"nodeType":"IfStatement","src":"19995:98:17","trueBody":{"id":6190,"nodeType":"Block","src":"20020:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:17","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"20076:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6185,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"20041:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6189,"nodeType":"RevertStatement","src":"20034:48:17"}]}}]},"documentation":{"id":6168,"nodeType":"StructuredDocumentation","src":"19558:312:17","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6193,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:17","nodeType":"FunctionDefinition","parameters":{"id":6171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6170,"mutability":"mutable","name":"value","nameLocation":"19900:5:17","nodeType":"VariableDeclaration","scope":6193,"src":"19893:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6169,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:17"},"returnParameters":{"id":6174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6173,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:17","nodeType":"VariableDeclaration","scope":6193,"src":"19930:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6172,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:17"},"scope":6910,"src":"19875:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6218,"nodeType":"Block","src":"20496:150:17","statements":[{"expression":{"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6201,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"20506:10:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"20526:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6202,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:17","typeDescriptions":{}}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6207,"nodeType":"ExpressionStatement","src":"20506:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6208,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"20546:10:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"20560:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6217,"nodeType":"IfStatement","src":"20542:98:17","trueBody":{"id":6216,"nodeType":"Block","src":"20567:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:17","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"20623:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6211,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"20588:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6215,"nodeType":"RevertStatement","src":"20581:48:17"}]}}]},"documentation":{"id":6194,"nodeType":"StructuredDocumentation","src":"20105:312:17","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6219,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:17","nodeType":"FunctionDefinition","parameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"value","nameLocation":"20447:5:17","nodeType":"VariableDeclaration","scope":6219,"src":"20440:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6195,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:17"},"returnParameters":{"id":6200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6199,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:17","nodeType":"VariableDeclaration","scope":6219,"src":"20477:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6198,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:17"},"scope":6910,"src":"20422:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6244,"nodeType":"Block","src":"21043:150:17","statements":[{"expression":{"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6227,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"21053:10:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"21073:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6228,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:17","typeDescriptions":{}}},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6233,"nodeType":"ExpressionStatement","src":"21053:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6234,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"21093:10:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"21107:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6243,"nodeType":"IfStatement","src":"21089:98:17","trueBody":{"id":6242,"nodeType":"Block","src":"21114:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:17","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"21170:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6237,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"21135:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6241,"nodeType":"RevertStatement","src":"21128:48:17"}]}}]},"documentation":{"id":6220,"nodeType":"StructuredDocumentation","src":"20652:312:17","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6245,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:17","nodeType":"FunctionDefinition","parameters":{"id":6223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6222,"mutability":"mutable","name":"value","nameLocation":"20994:5:17","nodeType":"VariableDeclaration","scope":6245,"src":"20987:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6221,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:17"},"returnParameters":{"id":6226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6225,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:17","nodeType":"VariableDeclaration","scope":6245,"src":"21024:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6224,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:17"},"scope":6910,"src":"20969:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6270,"nodeType":"Block","src":"21590:150:17","statements":[{"expression":{"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6253,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"21600:10:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"21620:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6254,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:17","typeDescriptions":{}}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6259,"nodeType":"ExpressionStatement","src":"21600:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6260,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"21640:10:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"21654:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6269,"nodeType":"IfStatement","src":"21636:98:17","trueBody":{"id":6268,"nodeType":"Block","src":"21661:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:17","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"21717:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6263,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"21682:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6267,"nodeType":"RevertStatement","src":"21675:48:17"}]}}]},"documentation":{"id":6246,"nodeType":"StructuredDocumentation","src":"21199:312:17","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6271,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:17","nodeType":"FunctionDefinition","parameters":{"id":6249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6248,"mutability":"mutable","name":"value","nameLocation":"21541:5:17","nodeType":"VariableDeclaration","scope":6271,"src":"21534:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6247,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:17"},"returnParameters":{"id":6252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6251,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:17","nodeType":"VariableDeclaration","scope":6271,"src":"21571:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6250,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:17"},"scope":6910,"src":"21516:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6296,"nodeType":"Block","src":"22137:150:17","statements":[{"expression":{"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6279,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"22147:10:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"22167:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6280,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:17","typeDescriptions":{}}},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6285,"nodeType":"ExpressionStatement","src":"22147:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6286,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"22187:10:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"22201:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6295,"nodeType":"IfStatement","src":"22183:98:17","trueBody":{"id":6294,"nodeType":"Block","src":"22208:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:17","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"22264:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6289,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"22229:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6293,"nodeType":"RevertStatement","src":"22222:48:17"}]}}]},"documentation":{"id":6272,"nodeType":"StructuredDocumentation","src":"21746:312:17","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6297,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:17","nodeType":"FunctionDefinition","parameters":{"id":6275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6274,"mutability":"mutable","name":"value","nameLocation":"22088:5:17","nodeType":"VariableDeclaration","scope":6297,"src":"22081:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6273,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:17"},"returnParameters":{"id":6278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:17","nodeType":"VariableDeclaration","scope":6297,"src":"22118:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6276,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:17"},"scope":6910,"src":"22063:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6322,"nodeType":"Block","src":"22684:150:17","statements":[{"expression":{"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6305,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"22694:10:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"22714:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6306,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:17","typeDescriptions":{}}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6311,"nodeType":"ExpressionStatement","src":"22694:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6312,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"22734:10:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"22748:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6321,"nodeType":"IfStatement","src":"22730:98:17","trueBody":{"id":6320,"nodeType":"Block","src":"22755:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:17","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"22811:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6315,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"22776:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6319,"nodeType":"RevertStatement","src":"22769:48:17"}]}}]},"documentation":{"id":6298,"nodeType":"StructuredDocumentation","src":"22293:312:17","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6323,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:17","nodeType":"FunctionDefinition","parameters":{"id":6301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6300,"mutability":"mutable","name":"value","nameLocation":"22635:5:17","nodeType":"VariableDeclaration","scope":6323,"src":"22628:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6299,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:17"},"returnParameters":{"id":6304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6303,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:17","nodeType":"VariableDeclaration","scope":6323,"src":"22665:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6302,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:17"},"scope":6910,"src":"22610:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6348,"nodeType":"Block","src":"23231:150:17","statements":[{"expression":{"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6331,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6329,"src":"23241:10:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"23261:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6332,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:17","typeDescriptions":{}}},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6337,"nodeType":"ExpressionStatement","src":"23241:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6338,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6329,"src":"23281:10:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"23295:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6347,"nodeType":"IfStatement","src":"23277:98:17","trueBody":{"id":6346,"nodeType":"Block","src":"23302:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:17","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"23358:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6341,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"23323:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6345,"nodeType":"RevertStatement","src":"23316:48:17"}]}}]},"documentation":{"id":6324,"nodeType":"StructuredDocumentation","src":"22840:312:17","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6349,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:17","nodeType":"FunctionDefinition","parameters":{"id":6327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"value","nameLocation":"23182:5:17","nodeType":"VariableDeclaration","scope":6349,"src":"23175:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6325,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:17"},"returnParameters":{"id":6330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6329,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:17","nodeType":"VariableDeclaration","scope":6349,"src":"23212:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6328,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:17"},"scope":6910,"src":"23157:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6374,"nodeType":"Block","src":"23778:150:17","statements":[{"expression":{"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6357,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"23788:10:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"23808:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6358,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:17","typeDescriptions":{}}},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6363,"nodeType":"ExpressionStatement","src":"23788:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6364,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"23828:10:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"23842:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6373,"nodeType":"IfStatement","src":"23824:98:17","trueBody":{"id":6372,"nodeType":"Block","src":"23849:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:17","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"23905:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6367,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"23870:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6371,"nodeType":"RevertStatement","src":"23863:48:17"}]}}]},"documentation":{"id":6350,"nodeType":"StructuredDocumentation","src":"23387:312:17","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6375,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:17","nodeType":"FunctionDefinition","parameters":{"id":6353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6352,"mutability":"mutable","name":"value","nameLocation":"23729:5:17","nodeType":"VariableDeclaration","scope":6375,"src":"23722:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6351,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:17"},"returnParameters":{"id":6356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6355,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:17","nodeType":"VariableDeclaration","scope":6375,"src":"23759:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6354,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:17"},"scope":6910,"src":"23704:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6400,"nodeType":"Block","src":"24325:150:17","statements":[{"expression":{"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6383,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"24335:10:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"24355:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6384,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:17","typeDescriptions":{}}},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6389,"nodeType":"ExpressionStatement","src":"24335:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6390,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"24375:10:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"24389:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6399,"nodeType":"IfStatement","src":"24371:98:17","trueBody":{"id":6398,"nodeType":"Block","src":"24396:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:17","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"24452:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6393,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"24417:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6397,"nodeType":"RevertStatement","src":"24410:48:17"}]}}]},"documentation":{"id":6376,"nodeType":"StructuredDocumentation","src":"23934:312:17","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6401,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:17","nodeType":"FunctionDefinition","parameters":{"id":6379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6378,"mutability":"mutable","name":"value","nameLocation":"24276:5:17","nodeType":"VariableDeclaration","scope":6401,"src":"24269:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6377,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:17"},"returnParameters":{"id":6382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6381,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:17","nodeType":"VariableDeclaration","scope":6401,"src":"24306:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6380,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:17"},"scope":6910,"src":"24251:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6426,"nodeType":"Block","src":"24872:150:17","statements":[{"expression":{"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6409,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6407,"src":"24882:10:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"24902:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6410,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:17","typeDescriptions":{}}},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6415,"nodeType":"ExpressionStatement","src":"24882:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6416,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6407,"src":"24922:10:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"24936:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6425,"nodeType":"IfStatement","src":"24918:98:17","trueBody":{"id":6424,"nodeType":"Block","src":"24943:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:17","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"24999:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6419,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"24964:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6423,"nodeType":"RevertStatement","src":"24957:48:17"}]}}]},"documentation":{"id":6402,"nodeType":"StructuredDocumentation","src":"24481:312:17","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6427,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:17","nodeType":"FunctionDefinition","parameters":{"id":6405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6404,"mutability":"mutable","name":"value","nameLocation":"24823:5:17","nodeType":"VariableDeclaration","scope":6427,"src":"24816:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6403,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:17"},"returnParameters":{"id":6408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6407,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:17","nodeType":"VariableDeclaration","scope":6427,"src":"24853:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6406,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:17"},"scope":6910,"src":"24798:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6452,"nodeType":"Block","src":"25419:150:17","statements":[{"expression":{"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6435,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"25429:10:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"25449:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6436,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:17","typeDescriptions":{}}},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6441,"nodeType":"ExpressionStatement","src":"25429:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6442,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"25469:10:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"25483:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6451,"nodeType":"IfStatement","src":"25465:98:17","trueBody":{"id":6450,"nodeType":"Block","src":"25490:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:17","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"25546:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6445,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"25511:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6449,"nodeType":"RevertStatement","src":"25504:48:17"}]}}]},"documentation":{"id":6428,"nodeType":"StructuredDocumentation","src":"25028:312:17","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6453,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:17","nodeType":"FunctionDefinition","parameters":{"id":6431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6430,"mutability":"mutable","name":"value","nameLocation":"25370:5:17","nodeType":"VariableDeclaration","scope":6453,"src":"25363:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6429,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:17"},"returnParameters":{"id":6434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:17","nodeType":"VariableDeclaration","scope":6453,"src":"25400:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6432,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:17"},"scope":6910,"src":"25345:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6478,"nodeType":"Block","src":"25966:150:17","statements":[{"expression":{"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6461,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"25976:10:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"25996:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6462,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:17","typeDescriptions":{}}},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6467,"nodeType":"ExpressionStatement","src":"25976:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6468,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"26016:10:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"26030:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6477,"nodeType":"IfStatement","src":"26012:98:17","trueBody":{"id":6476,"nodeType":"Block","src":"26037:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"26093:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6471,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"26058:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6475,"nodeType":"RevertStatement","src":"26051:48:17"}]}}]},"documentation":{"id":6454,"nodeType":"StructuredDocumentation","src":"25575:312:17","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6479,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:17","nodeType":"FunctionDefinition","parameters":{"id":6457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6456,"mutability":"mutable","name":"value","nameLocation":"25917:5:17","nodeType":"VariableDeclaration","scope":6479,"src":"25910:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6455,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:17"},"returnParameters":{"id":6460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6459,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:17","nodeType":"VariableDeclaration","scope":6479,"src":"25947:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6458,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:17"},"scope":6910,"src":"25892:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6504,"nodeType":"Block","src":"26513:150:17","statements":[{"expression":{"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6487,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"26523:10:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"26543:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6488,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:17","typeDescriptions":{}}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6493,"nodeType":"ExpressionStatement","src":"26523:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6494,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"26563:10:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"26577:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6503,"nodeType":"IfStatement","src":"26559:98:17","trueBody":{"id":6502,"nodeType":"Block","src":"26584:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:17","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"26640:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6497,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"26605:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6501,"nodeType":"RevertStatement","src":"26598:48:17"}]}}]},"documentation":{"id":6480,"nodeType":"StructuredDocumentation","src":"26122:312:17","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6505,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:17","nodeType":"FunctionDefinition","parameters":{"id":6483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"value","nameLocation":"26464:5:17","nodeType":"VariableDeclaration","scope":6505,"src":"26457:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6481,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:17"},"returnParameters":{"id":6486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6485,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:17","nodeType":"VariableDeclaration","scope":6505,"src":"26494:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6484,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:17"},"scope":6910,"src":"26439:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6530,"nodeType":"Block","src":"27060:150:17","statements":[{"expression":{"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6513,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"27070:10:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"27090:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6514,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:17","typeDescriptions":{}}},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6519,"nodeType":"ExpressionStatement","src":"27070:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6520,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"27110:10:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"27124:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6529,"nodeType":"IfStatement","src":"27106:98:17","trueBody":{"id":6528,"nodeType":"Block","src":"27131:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:17","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"27187:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6523,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"27152:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6527,"nodeType":"RevertStatement","src":"27145:48:17"}]}}]},"documentation":{"id":6506,"nodeType":"StructuredDocumentation","src":"26669:312:17","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6531,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:17","nodeType":"FunctionDefinition","parameters":{"id":6509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6508,"mutability":"mutable","name":"value","nameLocation":"27011:5:17","nodeType":"VariableDeclaration","scope":6531,"src":"27004:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6507,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:17"},"returnParameters":{"id":6512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6511,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:17","nodeType":"VariableDeclaration","scope":6531,"src":"27041:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6510,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:17"},"scope":6910,"src":"26986:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6556,"nodeType":"Block","src":"27607:150:17","statements":[{"expression":{"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6539,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"27617:10:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"27637:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6540,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:17","typeDescriptions":{}}},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6545,"nodeType":"ExpressionStatement","src":"27617:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6546,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"27657:10:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"27671:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6555,"nodeType":"IfStatement","src":"27653:98:17","trueBody":{"id":6554,"nodeType":"Block","src":"27678:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:17","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"27734:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6549,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"27699:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6553,"nodeType":"RevertStatement","src":"27692:48:17"}]}}]},"documentation":{"id":6532,"nodeType":"StructuredDocumentation","src":"27216:312:17","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6557,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:17","nodeType":"FunctionDefinition","parameters":{"id":6535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6534,"mutability":"mutable","name":"value","nameLocation":"27558:5:17","nodeType":"VariableDeclaration","scope":6557,"src":"27551:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6533,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:17"},"returnParameters":{"id":6538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6537,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:17","nodeType":"VariableDeclaration","scope":6557,"src":"27588:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6536,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:17"},"scope":6910,"src":"27533:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6582,"nodeType":"Block","src":"28147:148:17","statements":[{"expression":{"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6565,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"28157:10:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"28176:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6566,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:17","typeDescriptions":{}}},"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6571,"nodeType":"ExpressionStatement","src":"28157:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6572,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"28196:10:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"28210:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6581,"nodeType":"IfStatement","src":"28192:97:17","trueBody":{"id":6580,"nodeType":"Block","src":"28217:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"28272:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6575,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"28238:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6579,"nodeType":"RevertStatement","src":"28231:47:17"}]}}]},"documentation":{"id":6558,"nodeType":"StructuredDocumentation","src":"27763:307:17","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6583,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:17","nodeType":"FunctionDefinition","parameters":{"id":6561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6560,"mutability":"mutable","name":"value","nameLocation":"28099:5:17","nodeType":"VariableDeclaration","scope":6583,"src":"28092:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6559,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:17"},"returnParameters":{"id":6564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6563,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:17","nodeType":"VariableDeclaration","scope":6583,"src":"28129:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6562,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:17"},"scope":6910,"src":"28075:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6608,"nodeType":"Block","src":"28685:148:17","statements":[{"expression":{"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6591,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"28695:10:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"28714:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6592,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:17","typeDescriptions":{}}},"id":6595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6597,"nodeType":"ExpressionStatement","src":"28695:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6598,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"28734:10:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"28748:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6607,"nodeType":"IfStatement","src":"28730:97:17","trueBody":{"id":6606,"nodeType":"Block","src":"28755:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:17","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"28810:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6601,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"28776:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6605,"nodeType":"RevertStatement","src":"28769:47:17"}]}}]},"documentation":{"id":6584,"nodeType":"StructuredDocumentation","src":"28301:307:17","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6609,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:17","nodeType":"FunctionDefinition","parameters":{"id":6587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6586,"mutability":"mutable","name":"value","nameLocation":"28637:5:17","nodeType":"VariableDeclaration","scope":6609,"src":"28630:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6585,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:17"},"returnParameters":{"id":6590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6589,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:17","nodeType":"VariableDeclaration","scope":6609,"src":"28667:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6588,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:17"},"scope":6910,"src":"28613:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6634,"nodeType":"Block","src":"29223:148:17","statements":[{"expression":{"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6617,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"29233:10:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"29252:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6618,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:17","typeDescriptions":{}}},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6623,"nodeType":"ExpressionStatement","src":"29233:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6624,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"29272:10:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"29286:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6633,"nodeType":"IfStatement","src":"29268:97:17","trueBody":{"id":6632,"nodeType":"Block","src":"29293:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:17","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"29348:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6627,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"29314:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6631,"nodeType":"RevertStatement","src":"29307:47:17"}]}}]},"documentation":{"id":6610,"nodeType":"StructuredDocumentation","src":"28839:307:17","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6635,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:17","nodeType":"FunctionDefinition","parameters":{"id":6613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6612,"mutability":"mutable","name":"value","nameLocation":"29175:5:17","nodeType":"VariableDeclaration","scope":6635,"src":"29168:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6611,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:17"},"returnParameters":{"id":6616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6615,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:17","nodeType":"VariableDeclaration","scope":6635,"src":"29205:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6614,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:17"},"scope":6910,"src":"29151:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6660,"nodeType":"Block","src":"29761:148:17","statements":[{"expression":{"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6643,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"29771:10:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"29790:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6644,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:17","typeDescriptions":{}}},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6649,"nodeType":"ExpressionStatement","src":"29771:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6650,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"29810:10:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"29824:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6659,"nodeType":"IfStatement","src":"29806:97:17","trueBody":{"id":6658,"nodeType":"Block","src":"29831:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:17","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"29886:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6653,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"29852:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6657,"nodeType":"RevertStatement","src":"29845:47:17"}]}}]},"documentation":{"id":6636,"nodeType":"StructuredDocumentation","src":"29377:307:17","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6661,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:17","nodeType":"FunctionDefinition","parameters":{"id":6639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6638,"mutability":"mutable","name":"value","nameLocation":"29713:5:17","nodeType":"VariableDeclaration","scope":6661,"src":"29706:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6637,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:17"},"returnParameters":{"id":6642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6641,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:17","nodeType":"VariableDeclaration","scope":6661,"src":"29743:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6640,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:17"},"scope":6910,"src":"29689:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6686,"nodeType":"Block","src":"30299:148:17","statements":[{"expression":{"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6669,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"30309:10:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"30328:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6670,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:17","typeDescriptions":{}}},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6675,"nodeType":"ExpressionStatement","src":"30309:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6676,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"30348:10:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"30362:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6685,"nodeType":"IfStatement","src":"30344:97:17","trueBody":{"id":6684,"nodeType":"Block","src":"30369:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"30424:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6679,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"30390:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6683,"nodeType":"RevertStatement","src":"30383:47:17"}]}}]},"documentation":{"id":6662,"nodeType":"StructuredDocumentation","src":"29915:307:17","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6687,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:17","nodeType":"FunctionDefinition","parameters":{"id":6665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6664,"mutability":"mutable","name":"value","nameLocation":"30251:5:17","nodeType":"VariableDeclaration","scope":6687,"src":"30244:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6663,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:17"},"returnParameters":{"id":6668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6667,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:17","nodeType":"VariableDeclaration","scope":6687,"src":"30281:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6666,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:17"},"scope":6910,"src":"30227:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6712,"nodeType":"Block","src":"30837:148:17","statements":[{"expression":{"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6695,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"30847:10:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"30866:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6696,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:17","typeDescriptions":{}}},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6701,"nodeType":"ExpressionStatement","src":"30847:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6702,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"30886:10:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"30900:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6711,"nodeType":"IfStatement","src":"30882:97:17","trueBody":{"id":6710,"nodeType":"Block","src":"30907:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:17","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"30962:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6705,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"30928:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6709,"nodeType":"RevertStatement","src":"30921:47:17"}]}}]},"documentation":{"id":6688,"nodeType":"StructuredDocumentation","src":"30453:307:17","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6713,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:17","nodeType":"FunctionDefinition","parameters":{"id":6691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6690,"mutability":"mutable","name":"value","nameLocation":"30789:5:17","nodeType":"VariableDeclaration","scope":6713,"src":"30782:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6689,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:17"},"returnParameters":{"id":6694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6693,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:17","nodeType":"VariableDeclaration","scope":6713,"src":"30819:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6692,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:17"},"scope":6910,"src":"30765:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6738,"nodeType":"Block","src":"31375:148:17","statements":[{"expression":{"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6721,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"31385:10:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"31404:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6722,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:17","typeDescriptions":{}}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6727,"nodeType":"ExpressionStatement","src":"31385:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6728,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"31424:10:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"31438:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6737,"nodeType":"IfStatement","src":"31420:97:17","trueBody":{"id":6736,"nodeType":"Block","src":"31445:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"31500:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6731,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"31466:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6735,"nodeType":"RevertStatement","src":"31459:47:17"}]}}]},"documentation":{"id":6714,"nodeType":"StructuredDocumentation","src":"30991:307:17","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6739,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:17","nodeType":"FunctionDefinition","parameters":{"id":6717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6716,"mutability":"mutable","name":"value","nameLocation":"31327:5:17","nodeType":"VariableDeclaration","scope":6739,"src":"31320:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6715,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:17"},"returnParameters":{"id":6720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6719,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:17","nodeType":"VariableDeclaration","scope":6739,"src":"31357:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6718,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:17"},"scope":6910,"src":"31303:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6764,"nodeType":"Block","src":"31913:148:17","statements":[{"expression":{"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6747,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"31923:10:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"31942:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6748,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:17","typeDescriptions":{}}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6753,"nodeType":"ExpressionStatement","src":"31923:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6754,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"31962:10:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"31976:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6763,"nodeType":"IfStatement","src":"31958:97:17","trueBody":{"id":6762,"nodeType":"Block","src":"31983:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:17","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"32038:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6757,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"32004:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6761,"nodeType":"RevertStatement","src":"31997:47:17"}]}}]},"documentation":{"id":6740,"nodeType":"StructuredDocumentation","src":"31529:307:17","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6765,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:17","nodeType":"FunctionDefinition","parameters":{"id":6743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6742,"mutability":"mutable","name":"value","nameLocation":"31865:5:17","nodeType":"VariableDeclaration","scope":6765,"src":"31858:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6741,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:17"},"returnParameters":{"id":6746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6745,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:17","nodeType":"VariableDeclaration","scope":6765,"src":"31895:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6744,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:17"},"scope":6910,"src":"31841:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6790,"nodeType":"Block","src":"32451:148:17","statements":[{"expression":{"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6773,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6771,"src":"32461:10:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"32480:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6774,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:17","typeDescriptions":{}}},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6779,"nodeType":"ExpressionStatement","src":"32461:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6780,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6771,"src":"32500:10:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"32514:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6789,"nodeType":"IfStatement","src":"32496:97:17","trueBody":{"id":6788,"nodeType":"Block","src":"32521:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"32576:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6783,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"32542:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6787,"nodeType":"RevertStatement","src":"32535:47:17"}]}}]},"documentation":{"id":6766,"nodeType":"StructuredDocumentation","src":"32067:307:17","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6791,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:17","nodeType":"FunctionDefinition","parameters":{"id":6769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6768,"mutability":"mutable","name":"value","nameLocation":"32403:5:17","nodeType":"VariableDeclaration","scope":6791,"src":"32396:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6767,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:17"},"returnParameters":{"id":6772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6771,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:17","nodeType":"VariableDeclaration","scope":6791,"src":"32433:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6770,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:17"},"scope":6910,"src":"32379:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6816,"nodeType":"Block","src":"32989:148:17","statements":[{"expression":{"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6799,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"32999:10:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"33018:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6800,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:17","typeDescriptions":{}}},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6805,"nodeType":"ExpressionStatement","src":"32999:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6806,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"33038:10:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"33052:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6815,"nodeType":"IfStatement","src":"33034:97:17","trueBody":{"id":6814,"nodeType":"Block","src":"33059:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:17","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"33114:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6809,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"33080:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6813,"nodeType":"RevertStatement","src":"33073:47:17"}]}}]},"documentation":{"id":6792,"nodeType":"StructuredDocumentation","src":"32605:307:17","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6817,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:17","nodeType":"FunctionDefinition","parameters":{"id":6795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6794,"mutability":"mutable","name":"value","nameLocation":"32941:5:17","nodeType":"VariableDeclaration","scope":6817,"src":"32934:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6793,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:17"},"returnParameters":{"id":6798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6797,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:17","nodeType":"VariableDeclaration","scope":6817,"src":"32971:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6796,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:17"},"scope":6910,"src":"32917:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6842,"nodeType":"Block","src":"33527:148:17","statements":[{"expression":{"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6825,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"33537:10:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"33556:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6826,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:17","typeDescriptions":{}}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6831,"nodeType":"ExpressionStatement","src":"33537:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6832,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"33576:10:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"33590:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6841,"nodeType":"IfStatement","src":"33572:97:17","trueBody":{"id":6840,"nodeType":"Block","src":"33597:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"33652:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6835,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"33618:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6839,"nodeType":"RevertStatement","src":"33611:47:17"}]}}]},"documentation":{"id":6818,"nodeType":"StructuredDocumentation","src":"33143:307:17","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6843,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:17","nodeType":"FunctionDefinition","parameters":{"id":6821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6820,"mutability":"mutable","name":"value","nameLocation":"33479:5:17","nodeType":"VariableDeclaration","scope":6843,"src":"33472:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6819,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:17"},"returnParameters":{"id":6824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6823,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:17","nodeType":"VariableDeclaration","scope":6843,"src":"33509:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6822,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:17"},"scope":6910,"src":"33455:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6868,"nodeType":"Block","src":"34058:146:17","statements":[{"expression":{"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6851,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"34068:10:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"34086:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6852,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:17","typeDescriptions":{}}},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6857,"nodeType":"ExpressionStatement","src":"34068:24:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6858,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"34106:10:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"34120:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6867,"nodeType":"IfStatement","src":"34102:96:17","trueBody":{"id":6866,"nodeType":"Block","src":"34127:71:17","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"34181:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6861,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"34148:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6865,"nodeType":"RevertStatement","src":"34141:46:17"}]}}]},"documentation":{"id":6844,"nodeType":"StructuredDocumentation","src":"33681:302:17","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6869,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:17","nodeType":"FunctionDefinition","parameters":{"id":6847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6846,"mutability":"mutable","name":"value","nameLocation":"34011:5:17","nodeType":"VariableDeclaration","scope":6869,"src":"34004:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6845,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:17"},"returnParameters":{"id":6850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6849,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:17","nodeType":"VariableDeclaration","scope":6869,"src":"34041:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6848,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:17"},"scope":6910,"src":"33988:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6898,"nodeType":"Block","src":"34444:250:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"34557:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6881,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6880,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:17","memberName":"max","nodeType":"MemberAccess","src":"34573:16:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6878,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:17","typeDescriptions":{}}},"id":6885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6892,"nodeType":"IfStatement","src":"34553:105:17","trueBody":{"id":6891,"nodeType":"Block","src":"34592:66:17","statements":[{"errorCall":{"arguments":[{"id":6888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"34641:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6887,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"34613:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6890,"nodeType":"RevertStatement","src":"34606:41:17"}]}},{"expression":{"arguments":[{"id":6895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"34681:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6893,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:17","typeDescriptions":{}}},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6876,"id":6897,"nodeType":"Return","src":"34667:20:17"}]},"documentation":{"id":6870,"nodeType":"StructuredDocumentation","src":"34210:165:17","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6899,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:17","nodeType":"FunctionDefinition","parameters":{"id":6873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6872,"mutability":"mutable","name":"value","nameLocation":"34406:5:17","nodeType":"VariableDeclaration","scope":6899,"src":"34398:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6871,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:17"},"returnParameters":{"id":6876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6899,"src":"34436:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6874,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:17"},"scope":6910,"src":"34380:314:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6908,"nodeType":"Block","src":"34853:87:17","statements":[{"AST":{"nativeSrc":"34888:46:17","nodeType":"YulBlock","src":"34888:46:17","statements":[{"nativeSrc":"34902:22:17","nodeType":"YulAssignment","src":"34902:22:17","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:17","nodeType":"YulIdentifier","src":"34921:1:17"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:17","nodeType":"YulIdentifier","src":"34914:6:17"},"nativeSrc":"34914:9:17","nodeType":"YulFunctionCall","src":"34914:9:17"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:17","nodeType":"YulIdentifier","src":"34907:6:17"},"nativeSrc":"34907:17:17","nodeType":"YulFunctionCall","src":"34907:17:17"},"variableNames":[{"name":"u","nativeSrc":"34902:1:17","nodeType":"YulIdentifier","src":"34902:1:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6902,"isOffset":false,"isSlot":false,"src":"34921:1:17","valueSize":1},{"declaration":6905,"isOffset":false,"isSlot":false,"src":"34902:1:17","valueSize":1}],"flags":["memory-safe"],"id":6907,"nodeType":"InlineAssembly","src":"34863:71:17"}]},"documentation":{"id":6900,"nodeType":"StructuredDocumentation","src":"34700:90:17","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6909,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:17","nodeType":"FunctionDefinition","parameters":{"id":6903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6902,"mutability":"mutable","name":"b","nameLocation":"34816:1:17","nodeType":"VariableDeclaration","scope":6909,"src":"34811:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6901,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:17"},"returnParameters":{"id":6906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6905,"mutability":"mutable","name":"u","nameLocation":"34850:1:17","nodeType":"VariableDeclaration","scope":6909,"src":"34842:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6904,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:17"},"scope":6910,"src":"34795:145:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6911,"src":"769:34173:17","usedErrors":[5155,5160,5167,5172],"usedEvents":[]}],"src":"192:34751:17"},"id":17},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6910],"SignedMath":[7054]},"id":7055,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6912,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7055,"sourceUnit":6911,"src":"135:40:18","symbolAliases":[{"foreign":{"id":6913,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"143:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6915,"nodeType":"StructuredDocumentation","src":"177:80:18","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7054,"linearizedBaseContracts":[7054],"name":"SignedMath","nameLocation":"266:10:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":6944,"nodeType":"Block","src":"746:215:18","statements":[{"id":6943,"nodeType":"UncheckedBlock","src":"756:199:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6927,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"894:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"900:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6929,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"904:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6936,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"932:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6934,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"916:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6910_$","typeString":"type(library SafeCast)"}},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"916:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6932,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:18","typeDescriptions":{}}},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6926,"id":6942,"nodeType":"Return","src":"887:57:18"}]}]},"documentation":{"id":6916,"nodeType":"StructuredDocumentation","src":"283:374:18","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6945,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:18","nodeType":"FunctionDefinition","parameters":{"id":6923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6918,"mutability":"mutable","name":"condition","nameLocation":"684:9:18","nodeType":"VariableDeclaration","scope":6945,"src":"679:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6917,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6920,"mutability":"mutable","name":"a","nameLocation":"702:1:18","nodeType":"VariableDeclaration","scope":6945,"src":"695:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6919,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6922,"mutability":"mutable","name":"b","nameLocation":"712:1:18","nodeType":"VariableDeclaration","scope":6945,"src":"705:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6921,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:18"},"returnParameters":{"id":6926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6945,"src":"738:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6924,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:18"},"scope":7054,"src":"662:299:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6963,"nodeType":"Block","src":"1102:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6956,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"1127:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6957,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"1131:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6959,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"1134:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6960,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"1137:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6955,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"1119:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6954,"id":6962,"nodeType":"Return","src":"1112:27:18"}]},"documentation":{"id":6946,"nodeType":"StructuredDocumentation","src":"967:66:18","text":" @dev Returns the largest of two signed numbers."},"id":6964,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:18","nodeType":"FunctionDefinition","parameters":{"id":6951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6948,"mutability":"mutable","name":"a","nameLocation":"1058:1:18","nodeType":"VariableDeclaration","scope":6964,"src":"1051:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6947,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6950,"mutability":"mutable","name":"b","nameLocation":"1068:1:18","nodeType":"VariableDeclaration","scope":6964,"src":"1061:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6949,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:18"},"returnParameters":{"id":6954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6964,"src":"1094:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6952,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:18"},"scope":7054,"src":"1038:108:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6982,"nodeType":"Block","src":"1288:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6975,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6967,"src":"1313:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6976,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"1317:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6978,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6967,"src":"1320:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6979,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"1323:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6974,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"1305:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6973,"id":6981,"nodeType":"Return","src":"1298:27:18"}]},"documentation":{"id":6965,"nodeType":"StructuredDocumentation","src":"1152:67:18","text":" @dev Returns the smallest of two signed numbers."},"id":6983,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:18","nodeType":"FunctionDefinition","parameters":{"id":6970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6967,"mutability":"mutable","name":"a","nameLocation":"1244:1:18","nodeType":"VariableDeclaration","scope":6983,"src":"1237:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6966,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6969,"mutability":"mutable","name":"b","nameLocation":"1254:1:18","nodeType":"VariableDeclaration","scope":6983,"src":"1247:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6968,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:18"},"returnParameters":{"id":6973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6983,"src":"1280:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6971,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:18"},"scope":7054,"src":"1224:108:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7026,"nodeType":"Block","src":"1537:162:18","statements":[{"assignments":[6994],"declarations":[{"constant":false,"id":6994,"mutability":"mutable","name":"x","nameLocation":"1606:1:18","nodeType":"VariableDeclaration","scope":7026,"src":"1599:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6993,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7007,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6995,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"1611:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6996,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"1615:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6999,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"1622:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7000,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"1626:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7002,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7005,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:18"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7008,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"1651:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7013,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"1671:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7011,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:18","typeDescriptions":{}}},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7009,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:18","typeDescriptions":{}}},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7018,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"1685:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7019,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"1689:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7023,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6992,"id":7025,"nodeType":"Return","src":"1644:48:18"}]},"documentation":{"id":6984,"nodeType":"StructuredDocumentation","src":"1338:126:18","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7027,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:18","nodeType":"FunctionDefinition","parameters":{"id":6989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6986,"mutability":"mutable","name":"a","nameLocation":"1493:1:18","nodeType":"VariableDeclaration","scope":7027,"src":"1486:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6985,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6988,"mutability":"mutable","name":"b","nameLocation":"1503:1:18","nodeType":"VariableDeclaration","scope":7027,"src":"1496:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6987,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:18"},"returnParameters":{"id":6992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7027,"src":"1529:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6990,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:18"},"scope":7054,"src":"1469:230:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7052,"nodeType":"Block","src":"1843:767:18","statements":[{"id":7051,"nodeType":"UncheckedBlock","src":"1853:751:18","statements":[{"assignments":[7036],"declarations":[{"constant":false,"id":7036,"mutability":"mutable","name":"mask","nameLocation":"2424:4:18","nodeType":"VariableDeclaration","scope":7051,"src":"2417:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7035,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7040,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7037,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"2431:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7043,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"2576:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7044,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"2580:4:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7047,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"2588:4:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7041,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:18","typeDescriptions":{}}},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7034,"id":7050,"nodeType":"Return","src":"2560:33:18"}]}]},"documentation":{"id":7028,"nodeType":"StructuredDocumentation","src":"1705:78:18","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7053,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:18","nodeType":"FunctionDefinition","parameters":{"id":7031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7030,"mutability":"mutable","name":"n","nameLocation":"1808:1:18","nodeType":"VariableDeclaration","scope":7053,"src":"1801:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7029,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:18"},"returnParameters":{"id":7034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7053,"src":"1834:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7032,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:18"},"scope":7054,"src":"1788:822:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7055,"src":"258:2354:18","usedErrors":[],"usedEvents":[]}],"src":"109:2504:18"},"id":18},"contracts/AIDEFIToken.sol":{"ast":{"absolutePath":"contracts/AIDEFIToken.sol","exportedSymbols":{"AIDEFIToken":[7100],"ECDSA":[3211],"EIP712":[3438],"ERC20":[676],"ERC20Permit":[908],"IERC20Permit":[970],"Nonces":[1068]},"id":7101,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7056,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":7057,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7101,"sourceUnit":909,"src":"57:72:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7058,"name":"ERC20Permit","nameLocations":["156:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":908,"src":"156:11:19"},"id":7059,"nodeType":"InheritanceSpecifier","src":"156:11:19"}],"canonicalName":"AIDEFIToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7100,"linearizedBaseContracts":[7100,908,1068,3438,24,970,676,66,934,754,1000],"name":"AIDEFIToken","nameLocation":"141:11:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7061,"mutability":"mutable","name":"_version","nameLocation":"189:8:19","nodeType":"VariableDeclaration","scope":7100,"src":"174:23:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7060,"name":"string","nodeType":"ElementaryTypeName","src":"174:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":7090,"nodeType":"Block","src":"311:97:19","statements":[{"expression":{"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7075,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"321:8:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7076,"name":"version_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"332:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"321:19:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7078,"nodeType":"ExpressionStatement","src":"321:19:19"},{"expression":{"arguments":[{"expression":{"id":7080,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"356:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"360:6:19","memberName":"sender","nodeType":"MemberAccess","src":"356:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7082,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"368:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"384:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7084,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"390:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"390:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"384:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"368:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7079,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"350:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"350:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7089,"nodeType":"ExpressionStatement","src":"350:51:19"}]},"id":7091,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"414944454649","id":7068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"269:8:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_242127e456e32df822b8b40c66510adb616c035705675c0ae3722ec73ab2adae","typeString":"literal_string \"AIDEFI\""},"value":"AIDEFI"},{"hexValue":"414944454649","id":7069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"279:8:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_242127e456e32df822b8b40c66510adb616c035705675c0ae3722ec73ab2adae","typeString":"literal_string \"AIDEFI\""},"value":"AIDEFI"}],"id":7070,"kind":"baseConstructorSpecifier","modifierName":{"id":7067,"name":"ERC20","nameLocations":["263:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":676,"src":"263:5:19"},"nodeType":"ModifierInvocation","src":"263:25:19"},{"arguments":[{"hexValue":"414944454649","id":7072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"301:8:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_242127e456e32df822b8b40c66510adb616c035705675c0ae3722ec73ab2adae","typeString":"literal_string \"AIDEFI\""},"value":"AIDEFI"}],"id":7073,"kind":"baseConstructorSpecifier","modifierName":{"id":7071,"name":"ERC20Permit","nameLocations":["289:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":908,"src":"289:11:19"},"nodeType":"ModifierInvocation","src":"289:21:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7063,"mutability":"mutable","name":"initialSupply","nameLocation":"224:13:19","nodeType":"VariableDeclaration","scope":7091,"src":"216:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7062,"name":"uint256","nodeType":"ElementaryTypeName","src":"216:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7065,"mutability":"mutable","name":"version_","nameLocation":"253:8:19","nodeType":"VariableDeclaration","scope":7091,"src":"239:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7064,"name":"string","nodeType":"ElementaryTypeName","src":"239:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"215:47:19"},"returnParameters":{"id":7074,"nodeType":"ParameterList","parameters":[],"src":"311:0:19"},"scope":7100,"src":"204:204:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7098,"nodeType":"Block","src":"469:32:19","statements":[{"expression":{"id":7096,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"486:8:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":7095,"id":7097,"nodeType":"Return","src":"479:15:19"}]},"functionSelector":"54fd4d50","id":7099,"implemented":true,"kind":"function","modifiers":[],"name":"version","nameLocation":"423:7:19","nodeType":"FunctionDefinition","parameters":{"id":7092,"nodeType":"ParameterList","parameters":[],"src":"430:2:19"},"returnParameters":{"id":7095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7099,"src":"454:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7093,"name":"string","nodeType":"ElementaryTypeName","src":"454:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"453:15:19"},"scope":7100,"src":"414:87:19","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":7101,"src":"132:371:19","usedErrors":[36,41,46,55,60,65,785,792,1010,1134,1136,2874,2879,2884],"usedEvents":[4,688,697]}],"src":"32:472:19"},"id":19},"contracts/Lock.sol":{"ast":{"absolutePath":"contracts/Lock.sol","exportedSymbols":{"Lock":[7179]},"id":7180,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":7102,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"39:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Lock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7179,"linearizedBaseContracts":[7179],"name":"Lock","nameLocation":"150:4:20","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"251c1aa3","id":7104,"mutability":"mutable","name":"unlockTime","nameLocation":"173:10:20","nodeType":"VariableDeclaration","scope":7179,"src":"161:22:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7103,"name":"uint","nodeType":"ElementaryTypeName","src":"161:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":7106,"mutability":"mutable","name":"owner","nameLocation":"212:5:20","nodeType":"VariableDeclaration","scope":7179,"src":"189:28:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7105,"name":"address","nodeType":"ElementaryTypeName","src":"189:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"public"},{"anonymous":false,"eventSelector":"bf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b93","id":7112,"name":"Withdrawal","nameLocation":"230:10:20","nodeType":"EventDefinition","parameters":{"id":7111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7108,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"246:6:20","nodeType":"VariableDeclaration","scope":7112,"src":"241:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7107,"name":"uint","nodeType":"ElementaryTypeName","src":"241:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7110,"indexed":false,"mutability":"mutable","name":"when","nameLocation":"259:4:20","nodeType":"VariableDeclaration","scope":7112,"src":"254:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7109,"name":"uint","nodeType":"ElementaryTypeName","src":"254:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"240:24:20"},"src":"224:41:20"},{"body":{"id":7137,"nodeType":"Block","src":"309:200:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7118,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"340:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"346:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"340:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7120,"name":"_unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"358:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"340:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e6c6f636b2074696d652073686f756c6420626520696e2074686520667574757265","id":7122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"383:37:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413","typeString":"literal_string \"Unlock time should be in the future\""},"value":"Unlock time should be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413","typeString":"literal_string \"Unlock time should be in the future\""}],"id":7117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"319:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"319:111:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7124,"nodeType":"ExpressionStatement","src":"319:111:20"},{"expression":{"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7125,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"441:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7126,"name":"_unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"454:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"441:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7128,"nodeType":"ExpressionStatement","src":"441:24:20"},{"expression":{"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7129,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"475:5:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7132,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"491:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"495:6:20","memberName":"sender","nodeType":"MemberAccess","src":"491:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"483:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7130,"name":"address","nodeType":"ElementaryTypeName","src":"483:8:20","stateMutability":"payable","typeDescriptions":{}}},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"483:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"475:27:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7136,"nodeType":"ExpressionStatement","src":"475:27:20"}]},"id":7138,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7114,"mutability":"mutable","name":"_unlockTime","nameLocation":"288:11:20","nodeType":"VariableDeclaration","scope":7138,"src":"283:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7113,"name":"uint","nodeType":"ElementaryTypeName","src":"283:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"282:18:20"},"returnParameters":{"id":7116,"nodeType":"ParameterList","parameters":[],"src":"309:0:20"},"scope":7179,"src":"271:238:20","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":7177,"nodeType":"Block","src":"542:463:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7142,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"766:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"772:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"766:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7144,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"785:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"766:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752063616e277420776974686472617720796574","id":7146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"797:24:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8","typeString":"literal_string \"You can't withdraw yet\""},"value":"You can't withdraw yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8","typeString":"literal_string \"You can't withdraw yet\""}],"id":7141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"758:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"758:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7148,"nodeType":"ExpressionStatement","src":"758:64:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7150,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"840:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"844:6:20","memberName":"sender","nodeType":"MemberAccess","src":"840:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7152,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"854:5:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"840:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206172656e277420746865206f776e6572","id":7154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"861:22:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a","typeString":"literal_string \"You aren't the owner\""},"value":"You aren't the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a","typeString":"literal_string \"You aren't the owner\""}],"id":7149,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"832:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"832:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7156,"nodeType":"ExpressionStatement","src":"832:52:20"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":7160,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"919:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_Lock_$7179","typeString":"contract Lock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Lock_$7179","typeString":"contract Lock"}],"id":7159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"911:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7158,"name":"address","nodeType":"ElementaryTypeName","src":"911:7:20","typeDescriptions":{}}},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"911:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:7:20","memberName":"balance","nodeType":"MemberAccess","src":"911:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7163,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"934:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"940:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"934:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7157,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"900:10:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"900:50:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7166,"nodeType":"EmitStatement","src":"895:55:20"},{"expression":{"arguments":[{"expression":{"arguments":[{"id":7172,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"984:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_Lock_$7179","typeString":"contract Lock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Lock_$7179","typeString":"contract Lock"}],"id":7171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"976:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7170,"name":"address","nodeType":"ElementaryTypeName","src":"976:7:20","typeDescriptions":{}}},"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"976:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"990:7:20","memberName":"balance","nodeType":"MemberAccess","src":"976:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7167,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"961:5:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"967:8:20","memberName":"transfer","nodeType":"MemberAccess","src":"961:14:20","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"961:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7176,"nodeType":"ExpressionStatement","src":"961:37:20"}]},"functionSelector":"3ccfd60b","id":7178,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"524:8:20","nodeType":"FunctionDefinition","parameters":{"id":7139,"nodeType":"ParameterList","parameters":[],"src":"532:2:20"},"returnParameters":{"id":7140,"nodeType":"ParameterList","parameters":[],"src":"542:0:20"},"scope":7179,"src":"515:490:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":7180,"src":"141:866:20","usedErrors":[],"usedEvents":[7112]}],"src":"39:969:20"},"id":20}},"contracts":{"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039dd0978b853bfe2d7fb59cf69090b112677361a57faf60079f7e4373bfe7ba364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xDD MULMOD PUSH25 0xB853BFE2D7FB59CF69090B112677361A57FAF60079F7E4373B INVALID PUSH28 0xA364736F6C634300081C003300000000000000000000000000000000 ","sourceMap":"1255:3046:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039dd0978b853bfe2d7fb59cf69090b112677361a57faf60079f7e4373bfe7ba364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xDD MULMOD PUSH25 0xB853BFE2D7FB59CF69090B112677361A57FAF60079F7E4373B INVALID PUSH28 0xA364736F6C634300081C003300000000000000000000000000000000 ","sourceMap":"1255:3046:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b93eefa26a1cecc5003f9a8a0abb4a23d8503ef65d8338e7fd9d3442221a9e9c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 RETURNDATACOPY 0xEF LOG2 PUSH11 0x1CECC5003F9A8A0ABB4A23 0xD8 POP RETURNDATACOPY 0xF6 TSTORE DUP4 CODESIZE 0xE7 REVERT SWAP14 CALLVALUE TIMESTAMP 0x22 BYTE SWAP15 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b93eefa26a1cecc5003f9a8a0abb4a23d8503ef65d8338e7fd9d3442221a9e9c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 RETURNDATACOPY 0xEF LOG2 PUSH11 0x1CECC5003F9A8A0ABB4A23 0xD8 POP RETURNDATACOPY 0xF6 TSTORE DUP4 CODESIZE 0xE7 REVERT SWAP14 CALLVALUE TIMESTAMP 0x22 BYTE SWAP15 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122060a210c8d3a84e178719f272931735caf2c87daf5df0ddad351f335a6d3da2ac64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xA2 LT 0xC8 0xD3 0xA8 0x4E OR DUP8 NOT CALLCODE PUSH19 0x931735CAF2C87DAF5DF0DDAD351F335A6D3DA2 0xAC PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"297:18982:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122060a210c8d3a84e178719f272931735caf2c87daf5df0ddad351f335a6d3da2ac64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xA2 LT 0xC8 0xD3 0xA8 0x4E OR DUP8 NOT CALLCODE PUSH19 0x931735CAF2C87DAF5DF0DDAD351F335A6D3DA2 0xAC PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"297:18982:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208085cc65bf4952b9489a6842edb282980f611ce1a6dc5c25eb3b82566de8a8da64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 DUP6 0xCC PUSH6 0xBF4952B9489A PUSH9 0x42EDB282980F611CE1 0xA6 0xDC TLOAD 0x25 0xEB EXTCODESIZE DUP3 JUMP PUSH14 0xE8A8DA64736F6C634300081C0033 ","sourceMap":"344:7470:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208085cc65bf4952b9489a6842edb282980f611ce1a6dc5c25eb3b82566de8a8da64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 DUP6 0xCC PUSH6 0xBF4952B9489A PUSH9 0x42EDB282980F611CE1 0xA6 0xDC TLOAD 0x25 0xEB EXTCODESIZE DUP3 JUMP PUSH14 0xE8A8DA64736F6C634300081C0033 ","sourceMap":"344:7470:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f84024669f0f5276cf5a67448fbc4cf0985e054289588a4cee5e912a3071f67664736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 BLOCKHASH 0x24 PUSH7 0x9F0F5276CF5A67 PREVRANDAO DUP16 0xBC 0x4C CREATE SWAP9 MCOPY SDIV TIMESTAMP DUP10 PC DUP11 0x4C 0xEE MCOPY SWAP2 0x2A ADDRESS PUSH18 0xF67664736F6C634300081C00330000000000 ","sourceMap":"521:3729:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f84024669f0f5276cf5a67448fbc4cf0985e054289588a4cee5e912a3071f67664736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 BLOCKHASH 0x24 PUSH7 0x9F0F5276CF5A67 PREVRANDAO DUP16 0xBC 0x4C CREATE SWAP9 MCOPY SDIV TIMESTAMP DUP10 PC DUP11 0x4C 0xEE MCOPY SWAP2 0x2A ADDRESS PUSH18 0xF67664736F6C634300081C00330000000000 ","sourceMap":"521:3729:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201619ae7223aa01bdc7afa5042f76fccaa3f5955b0138f23cbc3d1bec23770a5f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND NOT 0xAE PUSH19 0x23AA01BDC7AFA5042F76FCCAA3F5955B0138F2 EXTCODECOPY 0xBC RETURNDATASIZE SHL 0xEC 0x23 PUSH24 0xA5F64736F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201619ae7223aa01bdc7afa5042f76fccaa3f5955b0138f23cbc3d1bec23770a5f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND NOT 0xAE PUSH19 0x23AA01BDC7AFA5042F76FCCAA3F5955B0138F2 EXTCODECOPY 0xBC RETURNDATASIZE SHL 0xEC 0x23 PUSH24 0xA5F64736F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d05a8eeb523adc0e549aa210d84231cd9746f3a9024f31cd415841f5d525715c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 GAS DUP15 0xEB MSTORE GASPRICE 0xDC 0xE SLOAD SWAP11 LOG2 LT 0xD8 TIMESTAMP BALANCE 0xCD SWAP8 CHAINID RETURN 0xA9 MUL 0x4F BALANCE 0xCD COINBASE PC COINBASE CREATE2 0xD5 0x25 PUSH18 0x5C64736F6C634300081C0033000000000000 ","sourceMap":"258:2354:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d05a8eeb523adc0e549aa210d84231cd9746f3a9024f31cd415841f5d525715c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 GAS DUP15 0xEB MSTORE GASPRICE 0xDC 0xE SLOAD SWAP11 LOG2 LT 0xD8 TIMESTAMP BALANCE 0xCD SWAP8 CHAINID RETURN 0xA9 MUL 0x4F BALANCE 0xCD COINBASE PC COINBASE CREATE2 0xD5 0x25 PUSH18 0x5C64736F6C634300081C0033000000000000 ","sourceMap":"258:2354:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/AIDEFIToken.sol":{"AIDEFIToken":{"abi":[{"inputs":[{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"string","name":"version_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_213":{"entryPoint":null,"id":213,"parameterSlots":2,"returnSlots":0},"@_3308":{"entryPoint":null,"id":3308,"parameterSlots":2,"returnSlots":0},"@_7091":{"entryPoint":null,"id":7091,"parameterSlots":2,"returnSlots":0},"@_803":{"entryPoint":null,"id":803,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_3355":{"entryPoint":628,"id":3355,"parameterSlots":0,"returnSlots":1},"@_mint_516":{"entryPoint":728,"id":516,"parameterSlots":2,"returnSlots":0},"@_update_483":{"entryPoint":978,"id":483,"parameterSlots":3,"returnSlots":0},"@decimals_240":{"entryPoint":719,"id":240,"parameterSlots":0,"returnSlots":1},"@getStringSlot_1438":{"entryPoint":968,"id":1438,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_1278":{"entryPoint":548,"id":1278,"parameterSlots":2,"returnSlots":1},"@toShortString_1180":{"entryPoint":864,"id":1180,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1842,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1908,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1580,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr_fromMemory":{"entryPoint":1954,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3389,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3309,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3531,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3324,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3487,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3825,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":3404,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3588,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3880,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1724,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1527,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1751,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":3633,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2153,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":3622,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2046,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3514,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3773,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":2851,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":3158,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":2934,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3233,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2440,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":3371,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3299,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3339,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1547,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3145,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2405,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":3670,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":2295,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2581,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1800,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2174,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2104,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2553,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1675,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":2285,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2523,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2791,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2057,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1628,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2329,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":3649,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1601,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1606,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1542,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1537,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1611,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2190,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":2838,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2510,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2381,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2203,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2339,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1557,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2376,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:16025:21","nodeType":"YulBlock","src":"0:16025:21","statements":[{"body":{"nativeSrc":"47:35:21","nodeType":"YulBlock","src":"47:35:21","statements":[{"nativeSrc":"57:19:21","nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:21","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:21","nodeType":"YulIdentifier","src":"67:5:21"},"nativeSrc":"67:9:21","nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:21","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:21","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:21","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nativeSrc":"177:28:21","nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:21","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:21","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:21","nodeType":"YulIdentifier","src":"187:6:21"},"nativeSrc":"187:12:21","nodeType":"YulFunctionCall","src":"187:12:21"},"nativeSrc":"187:12:21","nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:21","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nativeSrc":"300:28:21","nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:21","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:21","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:21","nodeType":"YulIdentifier","src":"310:6:21"},"nativeSrc":"310:12:21","nodeType":"YulFunctionCall","src":"310:12:21"},"nativeSrc":"310:12:21","nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:21","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nativeSrc":"379:32:21","nodeType":"YulBlock","src":"379:32:21","statements":[{"nativeSrc":"389:16:21","nodeType":"YulAssignment","src":"389:16:21","value":{"name":"value","nativeSrc":"400:5:21","nodeType":"YulIdentifier","src":"400:5:21"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:21","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:21","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:21","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:77:21"},{"body":{"nativeSrc":"460:79:21","nodeType":"YulBlock","src":"460:79:21","statements":[{"body":{"nativeSrc":"517:16:21","nodeType":"YulBlock","src":"517:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:21","nodeType":"YulLiteral","src":"526:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:21","nodeType":"YulLiteral","src":"529:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:21","nodeType":"YulIdentifier","src":"519:6:21"},"nativeSrc":"519:12:21","nodeType":"YulFunctionCall","src":"519:12:21"},"nativeSrc":"519:12:21","nodeType":"YulExpressionStatement","src":"519:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:21","nodeType":"YulIdentifier","src":"483:5:21"},{"arguments":[{"name":"value","nativeSrc":"508:5:21","nodeType":"YulIdentifier","src":"508:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:21","nodeType":"YulIdentifier","src":"490:17:21"},"nativeSrc":"490:24:21","nodeType":"YulFunctionCall","src":"490:24:21"}],"functionName":{"name":"eq","nativeSrc":"480:2:21","nodeType":"YulIdentifier","src":"480:2:21"},"nativeSrc":"480:35:21","nodeType":"YulFunctionCall","src":"480:35:21"}],"functionName":{"name":"iszero","nativeSrc":"473:6:21","nodeType":"YulIdentifier","src":"473:6:21"},"nativeSrc":"473:43:21","nodeType":"YulFunctionCall","src":"473:43:21"},"nativeSrc":"470:63:21","nodeType":"YulIf","src":"470:63:21"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:21","nodeType":"YulTypedName","src":"453:5:21","type":""}],"src":"417:122:21"},{"body":{"nativeSrc":"608:80:21","nodeType":"YulBlock","src":"608:80:21","statements":[{"nativeSrc":"618:22:21","nodeType":"YulAssignment","src":"618:22:21","value":{"arguments":[{"name":"offset","nativeSrc":"633:6:21","nodeType":"YulIdentifier","src":"633:6:21"}],"functionName":{"name":"mload","nativeSrc":"627:5:21","nodeType":"YulIdentifier","src":"627:5:21"},"nativeSrc":"627:13:21","nodeType":"YulFunctionCall","src":"627:13:21"},"variableNames":[{"name":"value","nativeSrc":"618:5:21","nodeType":"YulIdentifier","src":"618:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"676:5:21","nodeType":"YulIdentifier","src":"676:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"649:26:21","nodeType":"YulIdentifier","src":"649:26:21"},"nativeSrc":"649:33:21","nodeType":"YulFunctionCall","src":"649:33:21"},"nativeSrc":"649:33:21","nodeType":"YulExpressionStatement","src":"649:33:21"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"545:143:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"586:6:21","nodeType":"YulTypedName","src":"586:6:21","type":""},{"name":"end","nativeSrc":"594:3:21","nodeType":"YulTypedName","src":"594:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"602:5:21","nodeType":"YulTypedName","src":"602:5:21","type":""}],"src":"545:143:21"},{"body":{"nativeSrc":"783:28:21","nodeType":"YulBlock","src":"783:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"800:1:21","nodeType":"YulLiteral","src":"800:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"803:1:21","nodeType":"YulLiteral","src":"803:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"793:6:21","nodeType":"YulIdentifier","src":"793:6:21"},"nativeSrc":"793:12:21","nodeType":"YulFunctionCall","src":"793:12:21"},"nativeSrc":"793:12:21","nodeType":"YulExpressionStatement","src":"793:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"694:117:21","nodeType":"YulFunctionDefinition","src":"694:117:21"},{"body":{"nativeSrc":"906:28:21","nodeType":"YulBlock","src":"906:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"923:1:21","nodeType":"YulLiteral","src":"923:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"926:1:21","nodeType":"YulLiteral","src":"926:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"916:6:21","nodeType":"YulIdentifier","src":"916:6:21"},"nativeSrc":"916:12:21","nodeType":"YulFunctionCall","src":"916:12:21"},"nativeSrc":"916:12:21","nodeType":"YulExpressionStatement","src":"916:12:21"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"817:117:21","nodeType":"YulFunctionDefinition","src":"817:117:21"},{"body":{"nativeSrc":"988:54:21","nodeType":"YulBlock","src":"988:54:21","statements":[{"nativeSrc":"998:38:21","nodeType":"YulAssignment","src":"998:38:21","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1016:5:21","nodeType":"YulIdentifier","src":"1016:5:21"},{"kind":"number","nativeSrc":"1023:2:21","nodeType":"YulLiteral","src":"1023:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1012:3:21","nodeType":"YulIdentifier","src":"1012:3:21"},"nativeSrc":"1012:14:21","nodeType":"YulFunctionCall","src":"1012:14:21"},{"arguments":[{"kind":"number","nativeSrc":"1032:2:21","nodeType":"YulLiteral","src":"1032:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1028:3:21","nodeType":"YulIdentifier","src":"1028:3:21"},"nativeSrc":"1028:7:21","nodeType":"YulFunctionCall","src":"1028:7:21"}],"functionName":{"name":"and","nativeSrc":"1008:3:21","nodeType":"YulIdentifier","src":"1008:3:21"},"nativeSrc":"1008:28:21","nodeType":"YulFunctionCall","src":"1008:28:21"},"variableNames":[{"name":"result","nativeSrc":"998:6:21","nodeType":"YulIdentifier","src":"998:6:21"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"940:102:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"971:5:21","nodeType":"YulTypedName","src":"971:5:21","type":""}],"returnVariables":[{"name":"result","nativeSrc":"981:6:21","nodeType":"YulTypedName","src":"981:6:21","type":""}],"src":"940:102:21"},{"body":{"nativeSrc":"1076:152:21","nodeType":"YulBlock","src":"1076:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1093:1:21","nodeType":"YulLiteral","src":"1093:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1096:77:21","nodeType":"YulLiteral","src":"1096:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1086:6:21","nodeType":"YulIdentifier","src":"1086:6:21"},"nativeSrc":"1086:88:21","nodeType":"YulFunctionCall","src":"1086:88:21"},"nativeSrc":"1086:88:21","nodeType":"YulExpressionStatement","src":"1086:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1190:1:21","nodeType":"YulLiteral","src":"1190:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"1193:4:21","nodeType":"YulLiteral","src":"1193:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1183:6:21","nodeType":"YulIdentifier","src":"1183:6:21"},"nativeSrc":"1183:15:21","nodeType":"YulFunctionCall","src":"1183:15:21"},"nativeSrc":"1183:15:21","nodeType":"YulExpressionStatement","src":"1183:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1214:1:21","nodeType":"YulLiteral","src":"1214:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1217:4:21","nodeType":"YulLiteral","src":"1217:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1207:6:21","nodeType":"YulIdentifier","src":"1207:6:21"},"nativeSrc":"1207:15:21","nodeType":"YulFunctionCall","src":"1207:15:21"},"nativeSrc":"1207:15:21","nodeType":"YulExpressionStatement","src":"1207:15:21"}]},"name":"panic_error_0x41","nativeSrc":"1048:180:21","nodeType":"YulFunctionDefinition","src":"1048:180:21"},{"body":{"nativeSrc":"1277:238:21","nodeType":"YulBlock","src":"1277:238:21","statements":[{"nativeSrc":"1287:58:21","nodeType":"YulVariableDeclaration","src":"1287:58:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"1309:6:21","nodeType":"YulIdentifier","src":"1309:6:21"},{"arguments":[{"name":"size","nativeSrc":"1339:4:21","nodeType":"YulIdentifier","src":"1339:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1317:21:21","nodeType":"YulIdentifier","src":"1317:21:21"},"nativeSrc":"1317:27:21","nodeType":"YulFunctionCall","src":"1317:27:21"}],"functionName":{"name":"add","nativeSrc":"1305:3:21","nodeType":"YulIdentifier","src":"1305:3:21"},"nativeSrc":"1305:40:21","nodeType":"YulFunctionCall","src":"1305:40:21"},"variables":[{"name":"newFreePtr","nativeSrc":"1291:10:21","nodeType":"YulTypedName","src":"1291:10:21","type":""}]},{"body":{"nativeSrc":"1456:22:21","nodeType":"YulBlock","src":"1456:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1458:16:21","nodeType":"YulIdentifier","src":"1458:16:21"},"nativeSrc":"1458:18:21","nodeType":"YulFunctionCall","src":"1458:18:21"},"nativeSrc":"1458:18:21","nodeType":"YulExpressionStatement","src":"1458:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1399:10:21","nodeType":"YulIdentifier","src":"1399:10:21"},{"kind":"number","nativeSrc":"1411:18:21","nodeType":"YulLiteral","src":"1411:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1396:2:21","nodeType":"YulIdentifier","src":"1396:2:21"},"nativeSrc":"1396:34:21","nodeType":"YulFunctionCall","src":"1396:34:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1435:10:21","nodeType":"YulIdentifier","src":"1435:10:21"},{"name":"memPtr","nativeSrc":"1447:6:21","nodeType":"YulIdentifier","src":"1447:6:21"}],"functionName":{"name":"lt","nativeSrc":"1432:2:21","nodeType":"YulIdentifier","src":"1432:2:21"},"nativeSrc":"1432:22:21","nodeType":"YulFunctionCall","src":"1432:22:21"}],"functionName":{"name":"or","nativeSrc":"1393:2:21","nodeType":"YulIdentifier","src":"1393:2:21"},"nativeSrc":"1393:62:21","nodeType":"YulFunctionCall","src":"1393:62:21"},"nativeSrc":"1390:88:21","nodeType":"YulIf","src":"1390:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1494:2:21","nodeType":"YulLiteral","src":"1494:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1498:10:21","nodeType":"YulIdentifier","src":"1498:10:21"}],"functionName":{"name":"mstore","nativeSrc":"1487:6:21","nodeType":"YulIdentifier","src":"1487:6:21"},"nativeSrc":"1487:22:21","nodeType":"YulFunctionCall","src":"1487:22:21"},"nativeSrc":"1487:22:21","nodeType":"YulExpressionStatement","src":"1487:22:21"}]},"name":"finalize_allocation","nativeSrc":"1234:281:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1263:6:21","nodeType":"YulTypedName","src":"1263:6:21","type":""},{"name":"size","nativeSrc":"1271:4:21","nodeType":"YulTypedName","src":"1271:4:21","type":""}],"src":"1234:281:21"},{"body":{"nativeSrc":"1562:88:21","nodeType":"YulBlock","src":"1562:88:21","statements":[{"nativeSrc":"1572:30:21","nodeType":"YulAssignment","src":"1572:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1582:18:21","nodeType":"YulIdentifier","src":"1582:18:21"},"nativeSrc":"1582:20:21","nodeType":"YulFunctionCall","src":"1582:20:21"},"variableNames":[{"name":"memPtr","nativeSrc":"1572:6:21","nodeType":"YulIdentifier","src":"1572:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1631:6:21","nodeType":"YulIdentifier","src":"1631:6:21"},{"name":"size","nativeSrc":"1639:4:21","nodeType":"YulIdentifier","src":"1639:4:21"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1611:19:21","nodeType":"YulIdentifier","src":"1611:19:21"},"nativeSrc":"1611:33:21","nodeType":"YulFunctionCall","src":"1611:33:21"},"nativeSrc":"1611:33:21","nodeType":"YulExpressionStatement","src":"1611:33:21"}]},"name":"allocate_memory","nativeSrc":"1521:129:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1546:4:21","nodeType":"YulTypedName","src":"1546:4:21","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1555:6:21","nodeType":"YulTypedName","src":"1555:6:21","type":""}],"src":"1521:129:21"},{"body":{"nativeSrc":"1723:241:21","nodeType":"YulBlock","src":"1723:241:21","statements":[{"body":{"nativeSrc":"1828:22:21","nodeType":"YulBlock","src":"1828:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1830:16:21","nodeType":"YulIdentifier","src":"1830:16:21"},"nativeSrc":"1830:18:21","nodeType":"YulFunctionCall","src":"1830:18:21"},"nativeSrc":"1830:18:21","nodeType":"YulExpressionStatement","src":"1830:18:21"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1800:6:21","nodeType":"YulIdentifier","src":"1800:6:21"},{"kind":"number","nativeSrc":"1808:18:21","nodeType":"YulLiteral","src":"1808:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1797:2:21","nodeType":"YulIdentifier","src":"1797:2:21"},"nativeSrc":"1797:30:21","nodeType":"YulFunctionCall","src":"1797:30:21"},"nativeSrc":"1794:56:21","nodeType":"YulIf","src":"1794:56:21"},{"nativeSrc":"1860:37:21","nodeType":"YulAssignment","src":"1860:37:21","value":{"arguments":[{"name":"length","nativeSrc":"1890:6:21","nodeType":"YulIdentifier","src":"1890:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1868:21:21","nodeType":"YulIdentifier","src":"1868:21:21"},"nativeSrc":"1868:29:21","nodeType":"YulFunctionCall","src":"1868:29:21"},"variableNames":[{"name":"size","nativeSrc":"1860:4:21","nodeType":"YulIdentifier","src":"1860:4:21"}]},{"nativeSrc":"1934:23:21","nodeType":"YulAssignment","src":"1934:23:21","value":{"arguments":[{"name":"size","nativeSrc":"1946:4:21","nodeType":"YulIdentifier","src":"1946:4:21"},{"kind":"number","nativeSrc":"1952:4:21","nodeType":"YulLiteral","src":"1952:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1942:3:21","nodeType":"YulIdentifier","src":"1942:3:21"},"nativeSrc":"1942:15:21","nodeType":"YulFunctionCall","src":"1942:15:21"},"variableNames":[{"name":"size","nativeSrc":"1934:4:21","nodeType":"YulIdentifier","src":"1934:4:21"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1656:308:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1707:6:21","nodeType":"YulTypedName","src":"1707:6:21","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1718:4:21","nodeType":"YulTypedName","src":"1718:4:21","type":""}],"src":"1656:308:21"},{"body":{"nativeSrc":"2032:186:21","nodeType":"YulBlock","src":"2032:186:21","statements":[{"nativeSrc":"2043:10:21","nodeType":"YulVariableDeclaration","src":"2043:10:21","value":{"kind":"number","nativeSrc":"2052:1:21","nodeType":"YulLiteral","src":"2052:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2047:1:21","nodeType":"YulTypedName","src":"2047:1:21","type":""}]},{"body":{"nativeSrc":"2112:63:21","nodeType":"YulBlock","src":"2112:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2137:3:21","nodeType":"YulIdentifier","src":"2137:3:21"},{"name":"i","nativeSrc":"2142:1:21","nodeType":"YulIdentifier","src":"2142:1:21"}],"functionName":{"name":"add","nativeSrc":"2133:3:21","nodeType":"YulIdentifier","src":"2133:3:21"},"nativeSrc":"2133:11:21","nodeType":"YulFunctionCall","src":"2133:11:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2156:3:21","nodeType":"YulIdentifier","src":"2156:3:21"},{"name":"i","nativeSrc":"2161:1:21","nodeType":"YulIdentifier","src":"2161:1:21"}],"functionName":{"name":"add","nativeSrc":"2152:3:21","nodeType":"YulIdentifier","src":"2152:3:21"},"nativeSrc":"2152:11:21","nodeType":"YulFunctionCall","src":"2152:11:21"}],"functionName":{"name":"mload","nativeSrc":"2146:5:21","nodeType":"YulIdentifier","src":"2146:5:21"},"nativeSrc":"2146:18:21","nodeType":"YulFunctionCall","src":"2146:18:21"}],"functionName":{"name":"mstore","nativeSrc":"2126:6:21","nodeType":"YulIdentifier","src":"2126:6:21"},"nativeSrc":"2126:39:21","nodeType":"YulFunctionCall","src":"2126:39:21"},"nativeSrc":"2126:39:21","nodeType":"YulExpressionStatement","src":"2126:39:21"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2073:1:21","nodeType":"YulIdentifier","src":"2073:1:21"},{"name":"length","nativeSrc":"2076:6:21","nodeType":"YulIdentifier","src":"2076:6:21"}],"functionName":{"name":"lt","nativeSrc":"2070:2:21","nodeType":"YulIdentifier","src":"2070:2:21"},"nativeSrc":"2070:13:21","nodeType":"YulFunctionCall","src":"2070:13:21"},"nativeSrc":"2062:113:21","nodeType":"YulForLoop","post":{"nativeSrc":"2084:19:21","nodeType":"YulBlock","src":"2084:19:21","statements":[{"nativeSrc":"2086:15:21","nodeType":"YulAssignment","src":"2086:15:21","value":{"arguments":[{"name":"i","nativeSrc":"2095:1:21","nodeType":"YulIdentifier","src":"2095:1:21"},{"kind":"number","nativeSrc":"2098:2:21","nodeType":"YulLiteral","src":"2098:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2091:3:21","nodeType":"YulIdentifier","src":"2091:3:21"},"nativeSrc":"2091:10:21","nodeType":"YulFunctionCall","src":"2091:10:21"},"variableNames":[{"name":"i","nativeSrc":"2086:1:21","nodeType":"YulIdentifier","src":"2086:1:21"}]}]},"pre":{"nativeSrc":"2066:3:21","nodeType":"YulBlock","src":"2066:3:21","statements":[]},"src":"2062:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2195:3:21","nodeType":"YulIdentifier","src":"2195:3:21"},{"name":"length","nativeSrc":"2200:6:21","nodeType":"YulIdentifier","src":"2200:6:21"}],"functionName":{"name":"add","nativeSrc":"2191:3:21","nodeType":"YulIdentifier","src":"2191:3:21"},"nativeSrc":"2191:16:21","nodeType":"YulFunctionCall","src":"2191:16:21"},{"kind":"number","nativeSrc":"2209:1:21","nodeType":"YulLiteral","src":"2209:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2184:6:21","nodeType":"YulIdentifier","src":"2184:6:21"},"nativeSrc":"2184:27:21","nodeType":"YulFunctionCall","src":"2184:27:21"},"nativeSrc":"2184:27:21","nodeType":"YulExpressionStatement","src":"2184:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1970:248:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2014:3:21","nodeType":"YulTypedName","src":"2014:3:21","type":""},{"name":"dst","nativeSrc":"2019:3:21","nodeType":"YulTypedName","src":"2019:3:21","type":""},{"name":"length","nativeSrc":"2024:6:21","nodeType":"YulTypedName","src":"2024:6:21","type":""}],"src":"1970:248:21"},{"body":{"nativeSrc":"2319:339:21","nodeType":"YulBlock","src":"2319:339:21","statements":[{"nativeSrc":"2329:75:21","nodeType":"YulAssignment","src":"2329:75:21","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2396:6:21","nodeType":"YulIdentifier","src":"2396:6:21"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"2354:41:21","nodeType":"YulIdentifier","src":"2354:41:21"},"nativeSrc":"2354:49:21","nodeType":"YulFunctionCall","src":"2354:49:21"}],"functionName":{"name":"allocate_memory","nativeSrc":"2338:15:21","nodeType":"YulIdentifier","src":"2338:15:21"},"nativeSrc":"2338:66:21","nodeType":"YulFunctionCall","src":"2338:66:21"},"variableNames":[{"name":"array","nativeSrc":"2329:5:21","nodeType":"YulIdentifier","src":"2329:5:21"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2420:5:21","nodeType":"YulIdentifier","src":"2420:5:21"},{"name":"length","nativeSrc":"2427:6:21","nodeType":"YulIdentifier","src":"2427:6:21"}],"functionName":{"name":"mstore","nativeSrc":"2413:6:21","nodeType":"YulIdentifier","src":"2413:6:21"},"nativeSrc":"2413:21:21","nodeType":"YulFunctionCall","src":"2413:21:21"},"nativeSrc":"2413:21:21","nodeType":"YulExpressionStatement","src":"2413:21:21"},{"nativeSrc":"2443:27:21","nodeType":"YulVariableDeclaration","src":"2443:27:21","value":{"arguments":[{"name":"array","nativeSrc":"2458:5:21","nodeType":"YulIdentifier","src":"2458:5:21"},{"kind":"number","nativeSrc":"2465:4:21","nodeType":"YulLiteral","src":"2465:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2454:3:21","nodeType":"YulIdentifier","src":"2454:3:21"},"nativeSrc":"2454:16:21","nodeType":"YulFunctionCall","src":"2454:16:21"},"variables":[{"name":"dst","nativeSrc":"2447:3:21","nodeType":"YulTypedName","src":"2447:3:21","type":""}]},{"body":{"nativeSrc":"2508:83:21","nodeType":"YulBlock","src":"2508:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2510:77:21","nodeType":"YulIdentifier","src":"2510:77:21"},"nativeSrc":"2510:79:21","nodeType":"YulFunctionCall","src":"2510:79:21"},"nativeSrc":"2510:79:21","nodeType":"YulExpressionStatement","src":"2510:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2489:3:21","nodeType":"YulIdentifier","src":"2489:3:21"},{"name":"length","nativeSrc":"2494:6:21","nodeType":"YulIdentifier","src":"2494:6:21"}],"functionName":{"name":"add","nativeSrc":"2485:3:21","nodeType":"YulIdentifier","src":"2485:3:21"},"nativeSrc":"2485:16:21","nodeType":"YulFunctionCall","src":"2485:16:21"},{"name":"end","nativeSrc":"2503:3:21","nodeType":"YulIdentifier","src":"2503:3:21"}],"functionName":{"name":"gt","nativeSrc":"2482:2:21","nodeType":"YulIdentifier","src":"2482:2:21"},"nativeSrc":"2482:25:21","nodeType":"YulFunctionCall","src":"2482:25:21"},"nativeSrc":"2479:112:21","nodeType":"YulIf","src":"2479:112:21"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2635:3:21","nodeType":"YulIdentifier","src":"2635:3:21"},{"name":"dst","nativeSrc":"2640:3:21","nodeType":"YulIdentifier","src":"2640:3:21"},{"name":"length","nativeSrc":"2645:6:21","nodeType":"YulIdentifier","src":"2645:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2600:34:21","nodeType":"YulIdentifier","src":"2600:34:21"},"nativeSrc":"2600:52:21","nodeType":"YulFunctionCall","src":"2600:52:21"},"nativeSrc":"2600:52:21","nodeType":"YulExpressionStatement","src":"2600:52:21"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2224:434:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2292:3:21","nodeType":"YulTypedName","src":"2292:3:21","type":""},{"name":"length","nativeSrc":"2297:6:21","nodeType":"YulTypedName","src":"2297:6:21","type":""},{"name":"end","nativeSrc":"2305:3:21","nodeType":"YulTypedName","src":"2305:3:21","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2313:5:21","nodeType":"YulTypedName","src":"2313:5:21","type":""}],"src":"2224:434:21"},{"body":{"nativeSrc":"2751:282:21","nodeType":"YulBlock","src":"2751:282:21","statements":[{"body":{"nativeSrc":"2800:83:21","nodeType":"YulBlock","src":"2800:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2802:77:21","nodeType":"YulIdentifier","src":"2802:77:21"},"nativeSrc":"2802:79:21","nodeType":"YulFunctionCall","src":"2802:79:21"},"nativeSrc":"2802:79:21","nodeType":"YulExpressionStatement","src":"2802:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2779:6:21","nodeType":"YulIdentifier","src":"2779:6:21"},{"kind":"number","nativeSrc":"2787:4:21","nodeType":"YulLiteral","src":"2787:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2775:3:21","nodeType":"YulIdentifier","src":"2775:3:21"},"nativeSrc":"2775:17:21","nodeType":"YulFunctionCall","src":"2775:17:21"},{"name":"end","nativeSrc":"2794:3:21","nodeType":"YulIdentifier","src":"2794:3:21"}],"functionName":{"name":"slt","nativeSrc":"2771:3:21","nodeType":"YulIdentifier","src":"2771:3:21"},"nativeSrc":"2771:27:21","nodeType":"YulFunctionCall","src":"2771:27:21"}],"functionName":{"name":"iszero","nativeSrc":"2764:6:21","nodeType":"YulIdentifier","src":"2764:6:21"},"nativeSrc":"2764:35:21","nodeType":"YulFunctionCall","src":"2764:35:21"},"nativeSrc":"2761:122:21","nodeType":"YulIf","src":"2761:122:21"},{"nativeSrc":"2892:27:21","nodeType":"YulVariableDeclaration","src":"2892:27:21","value":{"arguments":[{"name":"offset","nativeSrc":"2912:6:21","nodeType":"YulIdentifier","src":"2912:6:21"}],"functionName":{"name":"mload","nativeSrc":"2906:5:21","nodeType":"YulIdentifier","src":"2906:5:21"},"nativeSrc":"2906:13:21","nodeType":"YulFunctionCall","src":"2906:13:21"},"variables":[{"name":"length","nativeSrc":"2896:6:21","nodeType":"YulTypedName","src":"2896:6:21","type":""}]},{"nativeSrc":"2928:99:21","nodeType":"YulAssignment","src":"2928:99:21","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3000:6:21","nodeType":"YulIdentifier","src":"3000:6:21"},{"kind":"number","nativeSrc":"3008:4:21","nodeType":"YulLiteral","src":"3008:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2996:3:21","nodeType":"YulIdentifier","src":"2996:3:21"},"nativeSrc":"2996:17:21","nodeType":"YulFunctionCall","src":"2996:17:21"},{"name":"length","nativeSrc":"3015:6:21","nodeType":"YulIdentifier","src":"3015:6:21"},{"name":"end","nativeSrc":"3023:3:21","nodeType":"YulIdentifier","src":"3023:3:21"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2937:58:21","nodeType":"YulIdentifier","src":"2937:58:21"},"nativeSrc":"2937:90:21","nodeType":"YulFunctionCall","src":"2937:90:21"},"variableNames":[{"name":"array","nativeSrc":"2928:5:21","nodeType":"YulIdentifier","src":"2928:5:21"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"2678:355:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2729:6:21","nodeType":"YulTypedName","src":"2729:6:21","type":""},{"name":"end","nativeSrc":"2737:3:21","nodeType":"YulTypedName","src":"2737:3:21","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2745:5:21","nodeType":"YulTypedName","src":"2745:5:21","type":""}],"src":"2678:355:21"},{"body":{"nativeSrc":"3143:576:21","nodeType":"YulBlock","src":"3143:576:21","statements":[{"body":{"nativeSrc":"3189:83:21","nodeType":"YulBlock","src":"3189:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3191:77:21","nodeType":"YulIdentifier","src":"3191:77:21"},"nativeSrc":"3191:79:21","nodeType":"YulFunctionCall","src":"3191:79:21"},"nativeSrc":"3191:79:21","nodeType":"YulExpressionStatement","src":"3191:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3164:7:21","nodeType":"YulIdentifier","src":"3164:7:21"},{"name":"headStart","nativeSrc":"3173:9:21","nodeType":"YulIdentifier","src":"3173:9:21"}],"functionName":{"name":"sub","nativeSrc":"3160:3:21","nodeType":"YulIdentifier","src":"3160:3:21"},"nativeSrc":"3160:23:21","nodeType":"YulFunctionCall","src":"3160:23:21"},{"kind":"number","nativeSrc":"3185:2:21","nodeType":"YulLiteral","src":"3185:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3156:3:21","nodeType":"YulIdentifier","src":"3156:3:21"},"nativeSrc":"3156:32:21","nodeType":"YulFunctionCall","src":"3156:32:21"},"nativeSrc":"3153:119:21","nodeType":"YulIf","src":"3153:119:21"},{"nativeSrc":"3282:128:21","nodeType":"YulBlock","src":"3282:128:21","statements":[{"nativeSrc":"3297:15:21","nodeType":"YulVariableDeclaration","src":"3297:15:21","value":{"kind":"number","nativeSrc":"3311:1:21","nodeType":"YulLiteral","src":"3311:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3301:6:21","nodeType":"YulTypedName","src":"3301:6:21","type":""}]},{"nativeSrc":"3326:74:21","nodeType":"YulAssignment","src":"3326:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3372:9:21","nodeType":"YulIdentifier","src":"3372:9:21"},{"name":"offset","nativeSrc":"3383:6:21","nodeType":"YulIdentifier","src":"3383:6:21"}],"functionName":{"name":"add","nativeSrc":"3368:3:21","nodeType":"YulIdentifier","src":"3368:3:21"},"nativeSrc":"3368:22:21","nodeType":"YulFunctionCall","src":"3368:22:21"},{"name":"dataEnd","nativeSrc":"3392:7:21","nodeType":"YulIdentifier","src":"3392:7:21"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"3336:31:21","nodeType":"YulIdentifier","src":"3336:31:21"},"nativeSrc":"3336:64:21","nodeType":"YulFunctionCall","src":"3336:64:21"},"variableNames":[{"name":"value0","nativeSrc":"3326:6:21","nodeType":"YulIdentifier","src":"3326:6:21"}]}]},{"nativeSrc":"3420:292:21","nodeType":"YulBlock","src":"3420:292:21","statements":[{"nativeSrc":"3435:39:21","nodeType":"YulVariableDeclaration","src":"3435:39:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3459:9:21","nodeType":"YulIdentifier","src":"3459:9:21"},{"kind":"number","nativeSrc":"3470:2:21","nodeType":"YulLiteral","src":"3470:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3455:3:21","nodeType":"YulIdentifier","src":"3455:3:21"},"nativeSrc":"3455:18:21","nodeType":"YulFunctionCall","src":"3455:18:21"}],"functionName":{"name":"mload","nativeSrc":"3449:5:21","nodeType":"YulIdentifier","src":"3449:5:21"},"nativeSrc":"3449:25:21","nodeType":"YulFunctionCall","src":"3449:25:21"},"variables":[{"name":"offset","nativeSrc":"3439:6:21","nodeType":"YulTypedName","src":"3439:6:21","type":""}]},{"body":{"nativeSrc":"3521:83:21","nodeType":"YulBlock","src":"3521:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3523:77:21","nodeType":"YulIdentifier","src":"3523:77:21"},"nativeSrc":"3523:79:21","nodeType":"YulFunctionCall","src":"3523:79:21"},"nativeSrc":"3523:79:21","nodeType":"YulExpressionStatement","src":"3523:79:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3493:6:21","nodeType":"YulIdentifier","src":"3493:6:21"},{"kind":"number","nativeSrc":"3501:18:21","nodeType":"YulLiteral","src":"3501:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3490:2:21","nodeType":"YulIdentifier","src":"3490:2:21"},"nativeSrc":"3490:30:21","nodeType":"YulFunctionCall","src":"3490:30:21"},"nativeSrc":"3487:117:21","nodeType":"YulIf","src":"3487:117:21"},{"nativeSrc":"3618:84:21","nodeType":"YulAssignment","src":"3618:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3674:9:21","nodeType":"YulIdentifier","src":"3674:9:21"},{"name":"offset","nativeSrc":"3685:6:21","nodeType":"YulIdentifier","src":"3685:6:21"}],"functionName":{"name":"add","nativeSrc":"3670:3:21","nodeType":"YulIdentifier","src":"3670:3:21"},"nativeSrc":"3670:22:21","nodeType":"YulFunctionCall","src":"3670:22:21"},{"name":"dataEnd","nativeSrc":"3694:7:21","nodeType":"YulIdentifier","src":"3694:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3628:41:21","nodeType":"YulIdentifier","src":"3628:41:21"},"nativeSrc":"3628:74:21","nodeType":"YulFunctionCall","src":"3628:74:21"},"variableNames":[{"name":"value1","nativeSrc":"3618:6:21","nodeType":"YulIdentifier","src":"3618:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr_fromMemory","nativeSrc":"3039:680:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3105:9:21","nodeType":"YulTypedName","src":"3105:9:21","type":""},{"name":"dataEnd","nativeSrc":"3116:7:21","nodeType":"YulTypedName","src":"3116:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3128:6:21","nodeType":"YulTypedName","src":"3128:6:21","type":""},{"name":"value1","nativeSrc":"3136:6:21","nodeType":"YulTypedName","src":"3136:6:21","type":""}],"src":"3039:680:21"},{"body":{"nativeSrc":"3784:40:21","nodeType":"YulBlock","src":"3784:40:21","statements":[{"nativeSrc":"3795:22:21","nodeType":"YulAssignment","src":"3795:22:21","value":{"arguments":[{"name":"value","nativeSrc":"3811:5:21","nodeType":"YulIdentifier","src":"3811:5:21"}],"functionName":{"name":"mload","nativeSrc":"3805:5:21","nodeType":"YulIdentifier","src":"3805:5:21"},"nativeSrc":"3805:12:21","nodeType":"YulFunctionCall","src":"3805:12:21"},"variableNames":[{"name":"length","nativeSrc":"3795:6:21","nodeType":"YulIdentifier","src":"3795:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"3725:99:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3767:5:21","nodeType":"YulTypedName","src":"3767:5:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3777:6:21","nodeType":"YulTypedName","src":"3777:6:21","type":""}],"src":"3725:99:21"},{"body":{"nativeSrc":"3858:152:21","nodeType":"YulBlock","src":"3858:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3875:1:21","nodeType":"YulLiteral","src":"3875:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3878:77:21","nodeType":"YulLiteral","src":"3878:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3868:6:21","nodeType":"YulIdentifier","src":"3868:6:21"},"nativeSrc":"3868:88:21","nodeType":"YulFunctionCall","src":"3868:88:21"},"nativeSrc":"3868:88:21","nodeType":"YulExpressionStatement","src":"3868:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3972:1:21","nodeType":"YulLiteral","src":"3972:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"3975:4:21","nodeType":"YulLiteral","src":"3975:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"3965:6:21","nodeType":"YulIdentifier","src":"3965:6:21"},"nativeSrc":"3965:15:21","nodeType":"YulFunctionCall","src":"3965:15:21"},"nativeSrc":"3965:15:21","nodeType":"YulExpressionStatement","src":"3965:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3996:1:21","nodeType":"YulLiteral","src":"3996:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3999:4:21","nodeType":"YulLiteral","src":"3999:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3989:6:21","nodeType":"YulIdentifier","src":"3989:6:21"},"nativeSrc":"3989:15:21","nodeType":"YulFunctionCall","src":"3989:15:21"},"nativeSrc":"3989:15:21","nodeType":"YulExpressionStatement","src":"3989:15:21"}]},"name":"panic_error_0x22","nativeSrc":"3830:180:21","nodeType":"YulFunctionDefinition","src":"3830:180:21"},{"body":{"nativeSrc":"4067:269:21","nodeType":"YulBlock","src":"4067:269:21","statements":[{"nativeSrc":"4077:22:21","nodeType":"YulAssignment","src":"4077:22:21","value":{"arguments":[{"name":"data","nativeSrc":"4091:4:21","nodeType":"YulIdentifier","src":"4091:4:21"},{"kind":"number","nativeSrc":"4097:1:21","nodeType":"YulLiteral","src":"4097:1:21","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"4087:3:21","nodeType":"YulIdentifier","src":"4087:3:21"},"nativeSrc":"4087:12:21","nodeType":"YulFunctionCall","src":"4087:12:21"},"variableNames":[{"name":"length","nativeSrc":"4077:6:21","nodeType":"YulIdentifier","src":"4077:6:21"}]},{"nativeSrc":"4108:38:21","nodeType":"YulVariableDeclaration","src":"4108:38:21","value":{"arguments":[{"name":"data","nativeSrc":"4138:4:21","nodeType":"YulIdentifier","src":"4138:4:21"},{"kind":"number","nativeSrc":"4144:1:21","nodeType":"YulLiteral","src":"4144:1:21","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"4134:3:21","nodeType":"YulIdentifier","src":"4134:3:21"},"nativeSrc":"4134:12:21","nodeType":"YulFunctionCall","src":"4134:12:21"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"4112:18:21","nodeType":"YulTypedName","src":"4112:18:21","type":""}]},{"body":{"nativeSrc":"4185:51:21","nodeType":"YulBlock","src":"4185:51:21","statements":[{"nativeSrc":"4199:27:21","nodeType":"YulAssignment","src":"4199:27:21","value":{"arguments":[{"name":"length","nativeSrc":"4213:6:21","nodeType":"YulIdentifier","src":"4213:6:21"},{"kind":"number","nativeSrc":"4221:4:21","nodeType":"YulLiteral","src":"4221:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"4209:3:21","nodeType":"YulIdentifier","src":"4209:3:21"},"nativeSrc":"4209:17:21","nodeType":"YulFunctionCall","src":"4209:17:21"},"variableNames":[{"name":"length","nativeSrc":"4199:6:21","nodeType":"YulIdentifier","src":"4199:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4165:18:21","nodeType":"YulIdentifier","src":"4165:18:21"}],"functionName":{"name":"iszero","nativeSrc":"4158:6:21","nodeType":"YulIdentifier","src":"4158:6:21"},"nativeSrc":"4158:26:21","nodeType":"YulFunctionCall","src":"4158:26:21"},"nativeSrc":"4155:81:21","nodeType":"YulIf","src":"4155:81:21"},{"body":{"nativeSrc":"4288:42:21","nodeType":"YulBlock","src":"4288:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"4302:16:21","nodeType":"YulIdentifier","src":"4302:16:21"},"nativeSrc":"4302:18:21","nodeType":"YulFunctionCall","src":"4302:18:21"},"nativeSrc":"4302:18:21","nodeType":"YulExpressionStatement","src":"4302:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4252:18:21","nodeType":"YulIdentifier","src":"4252:18:21"},{"arguments":[{"name":"length","nativeSrc":"4275:6:21","nodeType":"YulIdentifier","src":"4275:6:21"},{"kind":"number","nativeSrc":"4283:2:21","nodeType":"YulLiteral","src":"4283:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4272:2:21","nodeType":"YulIdentifier","src":"4272:2:21"},"nativeSrc":"4272:14:21","nodeType":"YulFunctionCall","src":"4272:14:21"}],"functionName":{"name":"eq","nativeSrc":"4249:2:21","nodeType":"YulIdentifier","src":"4249:2:21"},"nativeSrc":"4249:38:21","nodeType":"YulFunctionCall","src":"4249:38:21"},"nativeSrc":"4246:84:21","nodeType":"YulIf","src":"4246:84:21"}]},"name":"extract_byte_array_length","nativeSrc":"4016:320:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4051:4:21","nodeType":"YulTypedName","src":"4051:4:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4060:6:21","nodeType":"YulTypedName","src":"4060:6:21","type":""}],"src":"4016:320:21"},{"body":{"nativeSrc":"4396:87:21","nodeType":"YulBlock","src":"4396:87:21","statements":[{"nativeSrc":"4406:11:21","nodeType":"YulAssignment","src":"4406:11:21","value":{"name":"ptr","nativeSrc":"4414:3:21","nodeType":"YulIdentifier","src":"4414:3:21"},"variableNames":[{"name":"data","nativeSrc":"4406:4:21","nodeType":"YulIdentifier","src":"4406:4:21"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4434:1:21","nodeType":"YulLiteral","src":"4434:1:21","type":"","value":"0"},{"name":"ptr","nativeSrc":"4437:3:21","nodeType":"YulIdentifier","src":"4437:3:21"}],"functionName":{"name":"mstore","nativeSrc":"4427:6:21","nodeType":"YulIdentifier","src":"4427:6:21"},"nativeSrc":"4427:14:21","nodeType":"YulFunctionCall","src":"4427:14:21"},"nativeSrc":"4427:14:21","nodeType":"YulExpressionStatement","src":"4427:14:21"},{"nativeSrc":"4450:26:21","nodeType":"YulAssignment","src":"4450:26:21","value":{"arguments":[{"kind":"number","nativeSrc":"4468:1:21","nodeType":"YulLiteral","src":"4468:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4471:4:21","nodeType":"YulLiteral","src":"4471:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"4458:9:21","nodeType":"YulIdentifier","src":"4458:9:21"},"nativeSrc":"4458:18:21","nodeType":"YulFunctionCall","src":"4458:18:21"},"variableNames":[{"name":"data","nativeSrc":"4450:4:21","nodeType":"YulIdentifier","src":"4450:4:21"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"4342:141:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"4383:3:21","nodeType":"YulTypedName","src":"4383:3:21","type":""}],"returnVariables":[{"name":"data","nativeSrc":"4391:4:21","nodeType":"YulTypedName","src":"4391:4:21","type":""}],"src":"4342:141:21"},{"body":{"nativeSrc":"4533:49:21","nodeType":"YulBlock","src":"4533:49:21","statements":[{"nativeSrc":"4543:33:21","nodeType":"YulAssignment","src":"4543:33:21","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4561:5:21","nodeType":"YulIdentifier","src":"4561:5:21"},{"kind":"number","nativeSrc":"4568:2:21","nodeType":"YulLiteral","src":"4568:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4557:3:21","nodeType":"YulIdentifier","src":"4557:3:21"},"nativeSrc":"4557:14:21","nodeType":"YulFunctionCall","src":"4557:14:21"},{"kind":"number","nativeSrc":"4573:2:21","nodeType":"YulLiteral","src":"4573:2:21","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"4553:3:21","nodeType":"YulIdentifier","src":"4553:3:21"},"nativeSrc":"4553:23:21","nodeType":"YulFunctionCall","src":"4553:23:21"},"variableNames":[{"name":"result","nativeSrc":"4543:6:21","nodeType":"YulIdentifier","src":"4543:6:21"}]}]},"name":"divide_by_32_ceil","nativeSrc":"4489:93:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4516:5:21","nodeType":"YulTypedName","src":"4516:5:21","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4526:6:21","nodeType":"YulTypedName","src":"4526:6:21","type":""}],"src":"4489:93:21"},{"body":{"nativeSrc":"4641:54:21","nodeType":"YulBlock","src":"4641:54:21","statements":[{"nativeSrc":"4651:37:21","nodeType":"YulAssignment","src":"4651:37:21","value":{"arguments":[{"name":"bits","nativeSrc":"4676:4:21","nodeType":"YulIdentifier","src":"4676:4:21"},{"name":"value","nativeSrc":"4682:5:21","nodeType":"YulIdentifier","src":"4682:5:21"}],"functionName":{"name":"shl","nativeSrc":"4672:3:21","nodeType":"YulIdentifier","src":"4672:3:21"},"nativeSrc":"4672:16:21","nodeType":"YulFunctionCall","src":"4672:16:21"},"variableNames":[{"name":"newValue","nativeSrc":"4651:8:21","nodeType":"YulIdentifier","src":"4651:8:21"}]}]},"name":"shift_left_dynamic","nativeSrc":"4588:107:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4616:4:21","nodeType":"YulTypedName","src":"4616:4:21","type":""},{"name":"value","nativeSrc":"4622:5:21","nodeType":"YulTypedName","src":"4622:5:21","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4632:8:21","nodeType":"YulTypedName","src":"4632:8:21","type":""}],"src":"4588:107:21"},{"body":{"nativeSrc":"4777:317:21","nodeType":"YulBlock","src":"4777:317:21","statements":[{"nativeSrc":"4787:35:21","nodeType":"YulVariableDeclaration","src":"4787:35:21","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"4808:10:21","nodeType":"YulIdentifier","src":"4808:10:21"},{"kind":"number","nativeSrc":"4820:1:21","nodeType":"YulLiteral","src":"4820:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"4804:3:21","nodeType":"YulIdentifier","src":"4804:3:21"},"nativeSrc":"4804:18:21","nodeType":"YulFunctionCall","src":"4804:18:21"},"variables":[{"name":"shiftBits","nativeSrc":"4791:9:21","nodeType":"YulTypedName","src":"4791:9:21","type":""}]},{"nativeSrc":"4831:109:21","nodeType":"YulVariableDeclaration","src":"4831:109:21","value":{"arguments":[{"name":"shiftBits","nativeSrc":"4862:9:21","nodeType":"YulIdentifier","src":"4862:9:21"},{"kind":"number","nativeSrc":"4873:66:21","nodeType":"YulLiteral","src":"4873:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"4843:18:21","nodeType":"YulIdentifier","src":"4843:18:21"},"nativeSrc":"4843:97:21","nodeType":"YulFunctionCall","src":"4843:97:21"},"variables":[{"name":"mask","nativeSrc":"4835:4:21","nodeType":"YulTypedName","src":"4835:4:21","type":""}]},{"nativeSrc":"4949:51:21","nodeType":"YulAssignment","src":"4949:51:21","value":{"arguments":[{"name":"shiftBits","nativeSrc":"4980:9:21","nodeType":"YulIdentifier","src":"4980:9:21"},{"name":"toInsert","nativeSrc":"4991:8:21","nodeType":"YulIdentifier","src":"4991:8:21"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"4961:18:21","nodeType":"YulIdentifier","src":"4961:18:21"},"nativeSrc":"4961:39:21","nodeType":"YulFunctionCall","src":"4961:39:21"},"variableNames":[{"name":"toInsert","nativeSrc":"4949:8:21","nodeType":"YulIdentifier","src":"4949:8:21"}]},{"nativeSrc":"5009:30:21","nodeType":"YulAssignment","src":"5009:30:21","value":{"arguments":[{"name":"value","nativeSrc":"5022:5:21","nodeType":"YulIdentifier","src":"5022:5:21"},{"arguments":[{"name":"mask","nativeSrc":"5033:4:21","nodeType":"YulIdentifier","src":"5033:4:21"}],"functionName":{"name":"not","nativeSrc":"5029:3:21","nodeType":"YulIdentifier","src":"5029:3:21"},"nativeSrc":"5029:9:21","nodeType":"YulFunctionCall","src":"5029:9:21"}],"functionName":{"name":"and","nativeSrc":"5018:3:21","nodeType":"YulIdentifier","src":"5018:3:21"},"nativeSrc":"5018:21:21","nodeType":"YulFunctionCall","src":"5018:21:21"},"variableNames":[{"name":"value","nativeSrc":"5009:5:21","nodeType":"YulIdentifier","src":"5009:5:21"}]},{"nativeSrc":"5048:40:21","nodeType":"YulAssignment","src":"5048:40:21","value":{"arguments":[{"name":"value","nativeSrc":"5061:5:21","nodeType":"YulIdentifier","src":"5061:5:21"},{"arguments":[{"name":"toInsert","nativeSrc":"5072:8:21","nodeType":"YulIdentifier","src":"5072:8:21"},{"name":"mask","nativeSrc":"5082:4:21","nodeType":"YulIdentifier","src":"5082:4:21"}],"functionName":{"name":"and","nativeSrc":"5068:3:21","nodeType":"YulIdentifier","src":"5068:3:21"},"nativeSrc":"5068:19:21","nodeType":"YulFunctionCall","src":"5068:19:21"}],"functionName":{"name":"or","nativeSrc":"5058:2:21","nodeType":"YulIdentifier","src":"5058:2:21"},"nativeSrc":"5058:30:21","nodeType":"YulFunctionCall","src":"5058:30:21"},"variableNames":[{"name":"result","nativeSrc":"5048:6:21","nodeType":"YulIdentifier","src":"5048:6:21"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"4701:393:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4738:5:21","nodeType":"YulTypedName","src":"4738:5:21","type":""},{"name":"shiftBytes","nativeSrc":"4745:10:21","nodeType":"YulTypedName","src":"4745:10:21","type":""},{"name":"toInsert","nativeSrc":"4757:8:21","nodeType":"YulTypedName","src":"4757:8:21","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4770:6:21","nodeType":"YulTypedName","src":"4770:6:21","type":""}],"src":"4701:393:21"},{"body":{"nativeSrc":"5132:28:21","nodeType":"YulBlock","src":"5132:28:21","statements":[{"nativeSrc":"5142:12:21","nodeType":"YulAssignment","src":"5142:12:21","value":{"name":"value","nativeSrc":"5149:5:21","nodeType":"YulIdentifier","src":"5149:5:21"},"variableNames":[{"name":"ret","nativeSrc":"5142:3:21","nodeType":"YulIdentifier","src":"5142:3:21"}]}]},"name":"identity","nativeSrc":"5100:60:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5118:5:21","nodeType":"YulTypedName","src":"5118:5:21","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5128:3:21","nodeType":"YulTypedName","src":"5128:3:21","type":""}],"src":"5100:60:21"},{"body":{"nativeSrc":"5226:82:21","nodeType":"YulBlock","src":"5226:82:21","statements":[{"nativeSrc":"5236:66:21","nodeType":"YulAssignment","src":"5236:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5294:5:21","nodeType":"YulIdentifier","src":"5294:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5276:17:21","nodeType":"YulIdentifier","src":"5276:17:21"},"nativeSrc":"5276:24:21","nodeType":"YulFunctionCall","src":"5276:24:21"}],"functionName":{"name":"identity","nativeSrc":"5267:8:21","nodeType":"YulIdentifier","src":"5267:8:21"},"nativeSrc":"5267:34:21","nodeType":"YulFunctionCall","src":"5267:34:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5249:17:21","nodeType":"YulIdentifier","src":"5249:17:21"},"nativeSrc":"5249:53:21","nodeType":"YulFunctionCall","src":"5249:53:21"},"variableNames":[{"name":"converted","nativeSrc":"5236:9:21","nodeType":"YulIdentifier","src":"5236:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5166:142:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5206:5:21","nodeType":"YulTypedName","src":"5206:5:21","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"5216:9:21","nodeType":"YulTypedName","src":"5216:9:21","type":""}],"src":"5166:142:21"},{"body":{"nativeSrc":"5361:28:21","nodeType":"YulBlock","src":"5361:28:21","statements":[{"nativeSrc":"5371:12:21","nodeType":"YulAssignment","src":"5371:12:21","value":{"name":"value","nativeSrc":"5378:5:21","nodeType":"YulIdentifier","src":"5378:5:21"},"variableNames":[{"name":"ret","nativeSrc":"5371:3:21","nodeType":"YulIdentifier","src":"5371:3:21"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"5314:75:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5347:5:21","nodeType":"YulTypedName","src":"5347:5:21","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5357:3:21","nodeType":"YulTypedName","src":"5357:3:21","type":""}],"src":"5314:75:21"},{"body":{"nativeSrc":"5471:193:21","nodeType":"YulBlock","src":"5471:193:21","statements":[{"nativeSrc":"5481:63:21","nodeType":"YulVariableDeclaration","src":"5481:63:21","value":{"arguments":[{"name":"value_0","nativeSrc":"5536:7:21","nodeType":"YulIdentifier","src":"5536:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5505:30:21","nodeType":"YulIdentifier","src":"5505:30:21"},"nativeSrc":"5505:39:21","nodeType":"YulFunctionCall","src":"5505:39:21"},"variables":[{"name":"convertedValue_0","nativeSrc":"5485:16:21","nodeType":"YulTypedName","src":"5485:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5560:4:21","nodeType":"YulIdentifier","src":"5560:4:21"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5600:4:21","nodeType":"YulIdentifier","src":"5600:4:21"}],"functionName":{"name":"sload","nativeSrc":"5594:5:21","nodeType":"YulIdentifier","src":"5594:5:21"},"nativeSrc":"5594:11:21","nodeType":"YulFunctionCall","src":"5594:11:21"},{"name":"offset","nativeSrc":"5607:6:21","nodeType":"YulIdentifier","src":"5607:6:21"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"5639:16:21","nodeType":"YulIdentifier","src":"5639:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"5615:23:21","nodeType":"YulIdentifier","src":"5615:23:21"},"nativeSrc":"5615:41:21","nodeType":"YulFunctionCall","src":"5615:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"5566:27:21","nodeType":"YulIdentifier","src":"5566:27:21"},"nativeSrc":"5566:91:21","nodeType":"YulFunctionCall","src":"5566:91:21"}],"functionName":{"name":"sstore","nativeSrc":"5553:6:21","nodeType":"YulIdentifier","src":"5553:6:21"},"nativeSrc":"5553:105:21","nodeType":"YulFunctionCall","src":"5553:105:21"},"nativeSrc":"5553:105:21","nodeType":"YulExpressionStatement","src":"5553:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"5395:269:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5448:4:21","nodeType":"YulTypedName","src":"5448:4:21","type":""},{"name":"offset","nativeSrc":"5454:6:21","nodeType":"YulTypedName","src":"5454:6:21","type":""},{"name":"value_0","nativeSrc":"5462:7:21","nodeType":"YulTypedName","src":"5462:7:21","type":""}],"src":"5395:269:21"},{"body":{"nativeSrc":"5719:24:21","nodeType":"YulBlock","src":"5719:24:21","statements":[{"nativeSrc":"5729:8:21","nodeType":"YulAssignment","src":"5729:8:21","value":{"kind":"number","nativeSrc":"5736:1:21","nodeType":"YulLiteral","src":"5736:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"5729:3:21","nodeType":"YulIdentifier","src":"5729:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"5670:73:21","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"5715:3:21","nodeType":"YulTypedName","src":"5715:3:21","type":""}],"src":"5670:73:21"},{"body":{"nativeSrc":"5802:136:21","nodeType":"YulBlock","src":"5802:136:21","statements":[{"nativeSrc":"5812:46:21","nodeType":"YulVariableDeclaration","src":"5812:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"5826:30:21","nodeType":"YulIdentifier","src":"5826:30:21"},"nativeSrc":"5826:32:21","nodeType":"YulFunctionCall","src":"5826:32:21"},"variables":[{"name":"zero_0","nativeSrc":"5816:6:21","nodeType":"YulTypedName","src":"5816:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5911:4:21","nodeType":"YulIdentifier","src":"5911:4:21"},{"name":"offset","nativeSrc":"5917:6:21","nodeType":"YulIdentifier","src":"5917:6:21"},{"name":"zero_0","nativeSrc":"5925:6:21","nodeType":"YulIdentifier","src":"5925:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"5867:43:21","nodeType":"YulIdentifier","src":"5867:43:21"},"nativeSrc":"5867:65:21","nodeType":"YulFunctionCall","src":"5867:65:21"},"nativeSrc":"5867:65:21","nodeType":"YulExpressionStatement","src":"5867:65:21"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"5749:189:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5788:4:21","nodeType":"YulTypedName","src":"5788:4:21","type":""},{"name":"offset","nativeSrc":"5794:6:21","nodeType":"YulTypedName","src":"5794:6:21","type":""}],"src":"5749:189:21"},{"body":{"nativeSrc":"5994:136:21","nodeType":"YulBlock","src":"5994:136:21","statements":[{"body":{"nativeSrc":"6061:63:21","nodeType":"YulBlock","src":"6061:63:21","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"6105:5:21","nodeType":"YulIdentifier","src":"6105:5:21"},{"kind":"number","nativeSrc":"6112:1:21","nodeType":"YulLiteral","src":"6112:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"6075:29:21","nodeType":"YulIdentifier","src":"6075:29:21"},"nativeSrc":"6075:39:21","nodeType":"YulFunctionCall","src":"6075:39:21"},"nativeSrc":"6075:39:21","nodeType":"YulExpressionStatement","src":"6075:39:21"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"6014:5:21","nodeType":"YulIdentifier","src":"6014:5:21"},{"name":"end","nativeSrc":"6021:3:21","nodeType":"YulIdentifier","src":"6021:3:21"}],"functionName":{"name":"lt","nativeSrc":"6011:2:21","nodeType":"YulIdentifier","src":"6011:2:21"},"nativeSrc":"6011:14:21","nodeType":"YulFunctionCall","src":"6011:14:21"},"nativeSrc":"6004:120:21","nodeType":"YulForLoop","post":{"nativeSrc":"6026:26:21","nodeType":"YulBlock","src":"6026:26:21","statements":[{"nativeSrc":"6028:22:21","nodeType":"YulAssignment","src":"6028:22:21","value":{"arguments":[{"name":"start","nativeSrc":"6041:5:21","nodeType":"YulIdentifier","src":"6041:5:21"},{"kind":"number","nativeSrc":"6048:1:21","nodeType":"YulLiteral","src":"6048:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6037:3:21","nodeType":"YulIdentifier","src":"6037:3:21"},"nativeSrc":"6037:13:21","nodeType":"YulFunctionCall","src":"6037:13:21"},"variableNames":[{"name":"start","nativeSrc":"6028:5:21","nodeType":"YulIdentifier","src":"6028:5:21"}]}]},"pre":{"nativeSrc":"6008:2:21","nodeType":"YulBlock","src":"6008:2:21","statements":[]},"src":"6004:120:21"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"5944:186:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"5982:5:21","nodeType":"YulTypedName","src":"5982:5:21","type":""},{"name":"end","nativeSrc":"5989:3:21","nodeType":"YulTypedName","src":"5989:3:21","type":""}],"src":"5944:186:21"},{"body":{"nativeSrc":"6215:464:21","nodeType":"YulBlock","src":"6215:464:21","statements":[{"body":{"nativeSrc":"6241:431:21","nodeType":"YulBlock","src":"6241:431:21","statements":[{"nativeSrc":"6255:54:21","nodeType":"YulVariableDeclaration","src":"6255:54:21","value":{"arguments":[{"name":"array","nativeSrc":"6303:5:21","nodeType":"YulIdentifier","src":"6303:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"6271:31:21","nodeType":"YulIdentifier","src":"6271:31:21"},"nativeSrc":"6271:38:21","nodeType":"YulFunctionCall","src":"6271:38:21"},"variables":[{"name":"dataArea","nativeSrc":"6259:8:21","nodeType":"YulTypedName","src":"6259:8:21","type":""}]},{"nativeSrc":"6322:63:21","nodeType":"YulVariableDeclaration","src":"6322:63:21","value":{"arguments":[{"name":"dataArea","nativeSrc":"6345:8:21","nodeType":"YulIdentifier","src":"6345:8:21"},{"arguments":[{"name":"startIndex","nativeSrc":"6373:10:21","nodeType":"YulIdentifier","src":"6373:10:21"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"6355:17:21","nodeType":"YulIdentifier","src":"6355:17:21"},"nativeSrc":"6355:29:21","nodeType":"YulFunctionCall","src":"6355:29:21"}],"functionName":{"name":"add","nativeSrc":"6341:3:21","nodeType":"YulIdentifier","src":"6341:3:21"},"nativeSrc":"6341:44:21","nodeType":"YulFunctionCall","src":"6341:44:21"},"variables":[{"name":"deleteStart","nativeSrc":"6326:11:21","nodeType":"YulTypedName","src":"6326:11:21","type":""}]},{"body":{"nativeSrc":"6542:27:21","nodeType":"YulBlock","src":"6542:27:21","statements":[{"nativeSrc":"6544:23:21","nodeType":"YulAssignment","src":"6544:23:21","value":{"name":"dataArea","nativeSrc":"6559:8:21","nodeType":"YulIdentifier","src":"6559:8:21"},"variableNames":[{"name":"deleteStart","nativeSrc":"6544:11:21","nodeType":"YulIdentifier","src":"6544:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"6526:10:21","nodeType":"YulIdentifier","src":"6526:10:21"},{"kind":"number","nativeSrc":"6538:2:21","nodeType":"YulLiteral","src":"6538:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6523:2:21","nodeType":"YulIdentifier","src":"6523:2:21"},"nativeSrc":"6523:18:21","nodeType":"YulFunctionCall","src":"6523:18:21"},"nativeSrc":"6520:49:21","nodeType":"YulIf","src":"6520:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"6611:11:21","nodeType":"YulIdentifier","src":"6611:11:21"},{"arguments":[{"name":"dataArea","nativeSrc":"6628:8:21","nodeType":"YulIdentifier","src":"6628:8:21"},{"arguments":[{"name":"len","nativeSrc":"6656:3:21","nodeType":"YulIdentifier","src":"6656:3:21"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"6638:17:21","nodeType":"YulIdentifier","src":"6638:17:21"},"nativeSrc":"6638:22:21","nodeType":"YulFunctionCall","src":"6638:22:21"}],"functionName":{"name":"add","nativeSrc":"6624:3:21","nodeType":"YulIdentifier","src":"6624:3:21"},"nativeSrc":"6624:37:21","nodeType":"YulFunctionCall","src":"6624:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"6582:28:21","nodeType":"YulIdentifier","src":"6582:28:21"},"nativeSrc":"6582:80:21","nodeType":"YulFunctionCall","src":"6582:80:21"},"nativeSrc":"6582:80:21","nodeType":"YulExpressionStatement","src":"6582:80:21"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"6232:3:21","nodeType":"YulIdentifier","src":"6232:3:21"},{"kind":"number","nativeSrc":"6237:2:21","nodeType":"YulLiteral","src":"6237:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"6229:2:21","nodeType":"YulIdentifier","src":"6229:2:21"},"nativeSrc":"6229:11:21","nodeType":"YulFunctionCall","src":"6229:11:21"},"nativeSrc":"6226:446:21","nodeType":"YulIf","src":"6226:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"6136:543:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"6191:5:21","nodeType":"YulTypedName","src":"6191:5:21","type":""},{"name":"len","nativeSrc":"6198:3:21","nodeType":"YulTypedName","src":"6198:3:21","type":""},{"name":"startIndex","nativeSrc":"6203:10:21","nodeType":"YulTypedName","src":"6203:10:21","type":""}],"src":"6136:543:21"},{"body":{"nativeSrc":"6748:54:21","nodeType":"YulBlock","src":"6748:54:21","statements":[{"nativeSrc":"6758:37:21","nodeType":"YulAssignment","src":"6758:37:21","value":{"arguments":[{"name":"bits","nativeSrc":"6783:4:21","nodeType":"YulIdentifier","src":"6783:4:21"},{"name":"value","nativeSrc":"6789:5:21","nodeType":"YulIdentifier","src":"6789:5:21"}],"functionName":{"name":"shr","nativeSrc":"6779:3:21","nodeType":"YulIdentifier","src":"6779:3:21"},"nativeSrc":"6779:16:21","nodeType":"YulFunctionCall","src":"6779:16:21"},"variableNames":[{"name":"newValue","nativeSrc":"6758:8:21","nodeType":"YulIdentifier","src":"6758:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"6685:117:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"6723:4:21","nodeType":"YulTypedName","src":"6723:4:21","type":""},{"name":"value","nativeSrc":"6729:5:21","nodeType":"YulTypedName","src":"6729:5:21","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"6739:8:21","nodeType":"YulTypedName","src":"6739:8:21","type":""}],"src":"6685:117:21"},{"body":{"nativeSrc":"6859:118:21","nodeType":"YulBlock","src":"6859:118:21","statements":[{"nativeSrc":"6869:68:21","nodeType":"YulVariableDeclaration","src":"6869:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6918:1:21","nodeType":"YulLiteral","src":"6918:1:21","type":"","value":"8"},{"name":"bytes","nativeSrc":"6921:5:21","nodeType":"YulIdentifier","src":"6921:5:21"}],"functionName":{"name":"mul","nativeSrc":"6914:3:21","nodeType":"YulIdentifier","src":"6914:3:21"},"nativeSrc":"6914:13:21","nodeType":"YulFunctionCall","src":"6914:13:21"},{"arguments":[{"kind":"number","nativeSrc":"6933:1:21","nodeType":"YulLiteral","src":"6933:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"6929:3:21","nodeType":"YulIdentifier","src":"6929:3:21"},"nativeSrc":"6929:6:21","nodeType":"YulFunctionCall","src":"6929:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"6885:28:21","nodeType":"YulIdentifier","src":"6885:28:21"},"nativeSrc":"6885:51:21","nodeType":"YulFunctionCall","src":"6885:51:21"}],"functionName":{"name":"not","nativeSrc":"6881:3:21","nodeType":"YulIdentifier","src":"6881:3:21"},"nativeSrc":"6881:56:21","nodeType":"YulFunctionCall","src":"6881:56:21"},"variables":[{"name":"mask","nativeSrc":"6873:4:21","nodeType":"YulTypedName","src":"6873:4:21","type":""}]},{"nativeSrc":"6946:25:21","nodeType":"YulAssignment","src":"6946:25:21","value":{"arguments":[{"name":"data","nativeSrc":"6960:4:21","nodeType":"YulIdentifier","src":"6960:4:21"},{"name":"mask","nativeSrc":"6966:4:21","nodeType":"YulIdentifier","src":"6966:4:21"}],"functionName":{"name":"and","nativeSrc":"6956:3:21","nodeType":"YulIdentifier","src":"6956:3:21"},"nativeSrc":"6956:15:21","nodeType":"YulFunctionCall","src":"6956:15:21"},"variableNames":[{"name":"result","nativeSrc":"6946:6:21","nodeType":"YulIdentifier","src":"6946:6:21"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"6808:169:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6836:4:21","nodeType":"YulTypedName","src":"6836:4:21","type":""},{"name":"bytes","nativeSrc":"6842:5:21","nodeType":"YulTypedName","src":"6842:5:21","type":""}],"returnVariables":[{"name":"result","nativeSrc":"6852:6:21","nodeType":"YulTypedName","src":"6852:6:21","type":""}],"src":"6808:169:21"},{"body":{"nativeSrc":"7063:214:21","nodeType":"YulBlock","src":"7063:214:21","statements":[{"nativeSrc":"7196:37:21","nodeType":"YulAssignment","src":"7196:37:21","value":{"arguments":[{"name":"data","nativeSrc":"7223:4:21","nodeType":"YulIdentifier","src":"7223:4:21"},{"name":"len","nativeSrc":"7229:3:21","nodeType":"YulIdentifier","src":"7229:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"7204:18:21","nodeType":"YulIdentifier","src":"7204:18:21"},"nativeSrc":"7204:29:21","nodeType":"YulFunctionCall","src":"7204:29:21"},"variableNames":[{"name":"data","nativeSrc":"7196:4:21","nodeType":"YulIdentifier","src":"7196:4:21"}]},{"nativeSrc":"7242:29:21","nodeType":"YulAssignment","src":"7242:29:21","value":{"arguments":[{"name":"data","nativeSrc":"7253:4:21","nodeType":"YulIdentifier","src":"7253:4:21"},{"arguments":[{"kind":"number","nativeSrc":"7263:1:21","nodeType":"YulLiteral","src":"7263:1:21","type":"","value":"2"},{"name":"len","nativeSrc":"7266:3:21","nodeType":"YulIdentifier","src":"7266:3:21"}],"functionName":{"name":"mul","nativeSrc":"7259:3:21","nodeType":"YulIdentifier","src":"7259:3:21"},"nativeSrc":"7259:11:21","nodeType":"YulFunctionCall","src":"7259:11:21"}],"functionName":{"name":"or","nativeSrc":"7250:2:21","nodeType":"YulIdentifier","src":"7250:2:21"},"nativeSrc":"7250:21:21","nodeType":"YulFunctionCall","src":"7250:21:21"},"variableNames":[{"name":"used","nativeSrc":"7242:4:21","nodeType":"YulIdentifier","src":"7242:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6982:295:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7044:4:21","nodeType":"YulTypedName","src":"7044:4:21","type":""},{"name":"len","nativeSrc":"7050:3:21","nodeType":"YulTypedName","src":"7050:3:21","type":""}],"returnVariables":[{"name":"used","nativeSrc":"7058:4:21","nodeType":"YulTypedName","src":"7058:4:21","type":""}],"src":"6982:295:21"},{"body":{"nativeSrc":"7374:1303:21","nodeType":"YulBlock","src":"7374:1303:21","statements":[{"nativeSrc":"7385:51:21","nodeType":"YulVariableDeclaration","src":"7385:51:21","value":{"arguments":[{"name":"src","nativeSrc":"7432:3:21","nodeType":"YulIdentifier","src":"7432:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"7399:32:21","nodeType":"YulIdentifier","src":"7399:32:21"},"nativeSrc":"7399:37:21","nodeType":"YulFunctionCall","src":"7399:37:21"},"variables":[{"name":"newLen","nativeSrc":"7389:6:21","nodeType":"YulTypedName","src":"7389:6:21","type":""}]},{"body":{"nativeSrc":"7521:22:21","nodeType":"YulBlock","src":"7521:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7523:16:21","nodeType":"YulIdentifier","src":"7523:16:21"},"nativeSrc":"7523:18:21","nodeType":"YulFunctionCall","src":"7523:18:21"},"nativeSrc":"7523:18:21","nodeType":"YulExpressionStatement","src":"7523:18:21"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"7493:6:21","nodeType":"YulIdentifier","src":"7493:6:21"},{"kind":"number","nativeSrc":"7501:18:21","nodeType":"YulLiteral","src":"7501:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7490:2:21","nodeType":"YulIdentifier","src":"7490:2:21"},"nativeSrc":"7490:30:21","nodeType":"YulFunctionCall","src":"7490:30:21"},"nativeSrc":"7487:56:21","nodeType":"YulIf","src":"7487:56:21"},{"nativeSrc":"7553:52:21","nodeType":"YulVariableDeclaration","src":"7553:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"7599:4:21","nodeType":"YulIdentifier","src":"7599:4:21"}],"functionName":{"name":"sload","nativeSrc":"7593:5:21","nodeType":"YulIdentifier","src":"7593:5:21"},"nativeSrc":"7593:11:21","nodeType":"YulFunctionCall","src":"7593:11:21"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"7567:25:21","nodeType":"YulIdentifier","src":"7567:25:21"},"nativeSrc":"7567:38:21","nodeType":"YulFunctionCall","src":"7567:38:21"},"variables":[{"name":"oldLen","nativeSrc":"7557:6:21","nodeType":"YulTypedName","src":"7557:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"7698:4:21","nodeType":"YulIdentifier","src":"7698:4:21"},{"name":"oldLen","nativeSrc":"7704:6:21","nodeType":"YulIdentifier","src":"7704:6:21"},{"name":"newLen","nativeSrc":"7712:6:21","nodeType":"YulIdentifier","src":"7712:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"7652:45:21","nodeType":"YulIdentifier","src":"7652:45:21"},"nativeSrc":"7652:67:21","nodeType":"YulFunctionCall","src":"7652:67:21"},"nativeSrc":"7652:67:21","nodeType":"YulExpressionStatement","src":"7652:67:21"},{"nativeSrc":"7729:18:21","nodeType":"YulVariableDeclaration","src":"7729:18:21","value":{"kind":"number","nativeSrc":"7746:1:21","nodeType":"YulLiteral","src":"7746:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"7733:9:21","nodeType":"YulTypedName","src":"7733:9:21","type":""}]},{"nativeSrc":"7757:17:21","nodeType":"YulAssignment","src":"7757:17:21","value":{"kind":"number","nativeSrc":"7770:4:21","nodeType":"YulLiteral","src":"7770:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"7757:9:21","nodeType":"YulIdentifier","src":"7757:9:21"}]},{"cases":[{"body":{"nativeSrc":"7821:611:21","nodeType":"YulBlock","src":"7821:611:21","statements":[{"nativeSrc":"7835:37:21","nodeType":"YulVariableDeclaration","src":"7835:37:21","value":{"arguments":[{"name":"newLen","nativeSrc":"7854:6:21","nodeType":"YulIdentifier","src":"7854:6:21"},{"arguments":[{"kind":"number","nativeSrc":"7866:4:21","nodeType":"YulLiteral","src":"7866:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"7862:3:21","nodeType":"YulIdentifier","src":"7862:3:21"},"nativeSrc":"7862:9:21","nodeType":"YulFunctionCall","src":"7862:9:21"}],"functionName":{"name":"and","nativeSrc":"7850:3:21","nodeType":"YulIdentifier","src":"7850:3:21"},"nativeSrc":"7850:22:21","nodeType":"YulFunctionCall","src":"7850:22:21"},"variables":[{"name":"loopEnd","nativeSrc":"7839:7:21","nodeType":"YulTypedName","src":"7839:7:21","type":""}]},{"nativeSrc":"7886:51:21","nodeType":"YulVariableDeclaration","src":"7886:51:21","value":{"arguments":[{"name":"slot","nativeSrc":"7932:4:21","nodeType":"YulIdentifier","src":"7932:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"7900:31:21","nodeType":"YulIdentifier","src":"7900:31:21"},"nativeSrc":"7900:37:21","nodeType":"YulFunctionCall","src":"7900:37:21"},"variables":[{"name":"dstPtr","nativeSrc":"7890:6:21","nodeType":"YulTypedName","src":"7890:6:21","type":""}]},{"nativeSrc":"7950:10:21","nodeType":"YulVariableDeclaration","src":"7950:10:21","value":{"kind":"number","nativeSrc":"7959:1:21","nodeType":"YulLiteral","src":"7959:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7954:1:21","nodeType":"YulTypedName","src":"7954:1:21","type":""}]},{"body":{"nativeSrc":"8018:163:21","nodeType":"YulBlock","src":"8018:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8043:6:21","nodeType":"YulIdentifier","src":"8043:6:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8061:3:21","nodeType":"YulIdentifier","src":"8061:3:21"},{"name":"srcOffset","nativeSrc":"8066:9:21","nodeType":"YulIdentifier","src":"8066:9:21"}],"functionName":{"name":"add","nativeSrc":"8057:3:21","nodeType":"YulIdentifier","src":"8057:3:21"},"nativeSrc":"8057:19:21","nodeType":"YulFunctionCall","src":"8057:19:21"}],"functionName":{"name":"mload","nativeSrc":"8051:5:21","nodeType":"YulIdentifier","src":"8051:5:21"},"nativeSrc":"8051:26:21","nodeType":"YulFunctionCall","src":"8051:26:21"}],"functionName":{"name":"sstore","nativeSrc":"8036:6:21","nodeType":"YulIdentifier","src":"8036:6:21"},"nativeSrc":"8036:42:21","nodeType":"YulFunctionCall","src":"8036:42:21"},"nativeSrc":"8036:42:21","nodeType":"YulExpressionStatement","src":"8036:42:21"},{"nativeSrc":"8095:24:21","nodeType":"YulAssignment","src":"8095:24:21","value":{"arguments":[{"name":"dstPtr","nativeSrc":"8109:6:21","nodeType":"YulIdentifier","src":"8109:6:21"},{"kind":"number","nativeSrc":"8117:1:21","nodeType":"YulLiteral","src":"8117:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8105:3:21","nodeType":"YulIdentifier","src":"8105:3:21"},"nativeSrc":"8105:14:21","nodeType":"YulFunctionCall","src":"8105:14:21"},"variableNames":[{"name":"dstPtr","nativeSrc":"8095:6:21","nodeType":"YulIdentifier","src":"8095:6:21"}]},{"nativeSrc":"8136:31:21","nodeType":"YulAssignment","src":"8136:31:21","value":{"arguments":[{"name":"srcOffset","nativeSrc":"8153:9:21","nodeType":"YulIdentifier","src":"8153:9:21"},{"kind":"number","nativeSrc":"8164:2:21","nodeType":"YulLiteral","src":"8164:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8149:3:21","nodeType":"YulIdentifier","src":"8149:3:21"},"nativeSrc":"8149:18:21","nodeType":"YulFunctionCall","src":"8149:18:21"},"variableNames":[{"name":"srcOffset","nativeSrc":"8136:9:21","nodeType":"YulIdentifier","src":"8136:9:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7984:1:21","nodeType":"YulIdentifier","src":"7984:1:21"},{"name":"loopEnd","nativeSrc":"7987:7:21","nodeType":"YulIdentifier","src":"7987:7:21"}],"functionName":{"name":"lt","nativeSrc":"7981:2:21","nodeType":"YulIdentifier","src":"7981:2:21"},"nativeSrc":"7981:14:21","nodeType":"YulFunctionCall","src":"7981:14:21"},"nativeSrc":"7973:208:21","nodeType":"YulForLoop","post":{"nativeSrc":"7996:21:21","nodeType":"YulBlock","src":"7996:21:21","statements":[{"nativeSrc":"7998:17:21","nodeType":"YulAssignment","src":"7998:17:21","value":{"arguments":[{"name":"i","nativeSrc":"8007:1:21","nodeType":"YulIdentifier","src":"8007:1:21"},{"kind":"number","nativeSrc":"8010:4:21","nodeType":"YulLiteral","src":"8010:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8003:3:21","nodeType":"YulIdentifier","src":"8003:3:21"},"nativeSrc":"8003:12:21","nodeType":"YulFunctionCall","src":"8003:12:21"},"variableNames":[{"name":"i","nativeSrc":"7998:1:21","nodeType":"YulIdentifier","src":"7998:1:21"}]}]},"pre":{"nativeSrc":"7977:3:21","nodeType":"YulBlock","src":"7977:3:21","statements":[]},"src":"7973:208:21"},{"body":{"nativeSrc":"8217:156:21","nodeType":"YulBlock","src":"8217:156:21","statements":[{"nativeSrc":"8235:43:21","nodeType":"YulVariableDeclaration","src":"8235:43:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8262:3:21","nodeType":"YulIdentifier","src":"8262:3:21"},{"name":"srcOffset","nativeSrc":"8267:9:21","nodeType":"YulIdentifier","src":"8267:9:21"}],"functionName":{"name":"add","nativeSrc":"8258:3:21","nodeType":"YulIdentifier","src":"8258:3:21"},"nativeSrc":"8258:19:21","nodeType":"YulFunctionCall","src":"8258:19:21"}],"functionName":{"name":"mload","nativeSrc":"8252:5:21","nodeType":"YulIdentifier","src":"8252:5:21"},"nativeSrc":"8252:26:21","nodeType":"YulFunctionCall","src":"8252:26:21"},"variables":[{"name":"lastValue","nativeSrc":"8239:9:21","nodeType":"YulTypedName","src":"8239:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8302:6:21","nodeType":"YulIdentifier","src":"8302:6:21"},{"arguments":[{"name":"lastValue","nativeSrc":"8329:9:21","nodeType":"YulIdentifier","src":"8329:9:21"},{"arguments":[{"name":"newLen","nativeSrc":"8344:6:21","nodeType":"YulIdentifier","src":"8344:6:21"},{"kind":"number","nativeSrc":"8352:4:21","nodeType":"YulLiteral","src":"8352:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"8340:3:21","nodeType":"YulIdentifier","src":"8340:3:21"},"nativeSrc":"8340:17:21","nodeType":"YulFunctionCall","src":"8340:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"8310:18:21","nodeType":"YulIdentifier","src":"8310:18:21"},"nativeSrc":"8310:48:21","nodeType":"YulFunctionCall","src":"8310:48:21"}],"functionName":{"name":"sstore","nativeSrc":"8295:6:21","nodeType":"YulIdentifier","src":"8295:6:21"},"nativeSrc":"8295:64:21","nodeType":"YulFunctionCall","src":"8295:64:21"},"nativeSrc":"8295:64:21","nodeType":"YulExpressionStatement","src":"8295:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"8200:7:21","nodeType":"YulIdentifier","src":"8200:7:21"},{"name":"newLen","nativeSrc":"8209:6:21","nodeType":"YulIdentifier","src":"8209:6:21"}],"functionName":{"name":"lt","nativeSrc":"8197:2:21","nodeType":"YulIdentifier","src":"8197:2:21"},"nativeSrc":"8197:19:21","nodeType":"YulFunctionCall","src":"8197:19:21"},"nativeSrc":"8194:179:21","nodeType":"YulIf","src":"8194:179:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8393:4:21","nodeType":"YulIdentifier","src":"8393:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"8407:6:21","nodeType":"YulIdentifier","src":"8407:6:21"},{"kind":"number","nativeSrc":"8415:1:21","nodeType":"YulLiteral","src":"8415:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"8403:3:21","nodeType":"YulIdentifier","src":"8403:3:21"},"nativeSrc":"8403:14:21","nodeType":"YulFunctionCall","src":"8403:14:21"},{"kind":"number","nativeSrc":"8419:1:21","nodeType":"YulLiteral","src":"8419:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8399:3:21","nodeType":"YulIdentifier","src":"8399:3:21"},"nativeSrc":"8399:22:21","nodeType":"YulFunctionCall","src":"8399:22:21"}],"functionName":{"name":"sstore","nativeSrc":"8386:6:21","nodeType":"YulIdentifier","src":"8386:6:21"},"nativeSrc":"8386:36:21","nodeType":"YulFunctionCall","src":"8386:36:21"},"nativeSrc":"8386:36:21","nodeType":"YulExpressionStatement","src":"8386:36:21"}]},"nativeSrc":"7814:618:21","nodeType":"YulCase","src":"7814:618:21","value":{"kind":"number","nativeSrc":"7819:1:21","nodeType":"YulLiteral","src":"7819:1:21","type":"","value":"1"}},{"body":{"nativeSrc":"8449:222:21","nodeType":"YulBlock","src":"8449:222:21","statements":[{"nativeSrc":"8463:14:21","nodeType":"YulVariableDeclaration","src":"8463:14:21","value":{"kind":"number","nativeSrc":"8476:1:21","nodeType":"YulLiteral","src":"8476:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"8467:5:21","nodeType":"YulTypedName","src":"8467:5:21","type":""}]},{"body":{"nativeSrc":"8500:67:21","nodeType":"YulBlock","src":"8500:67:21","statements":[{"nativeSrc":"8518:35:21","nodeType":"YulAssignment","src":"8518:35:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8537:3:21","nodeType":"YulIdentifier","src":"8537:3:21"},{"name":"srcOffset","nativeSrc":"8542:9:21","nodeType":"YulIdentifier","src":"8542:9:21"}],"functionName":{"name":"add","nativeSrc":"8533:3:21","nodeType":"YulIdentifier","src":"8533:3:21"},"nativeSrc":"8533:19:21","nodeType":"YulFunctionCall","src":"8533:19:21"}],"functionName":{"name":"mload","nativeSrc":"8527:5:21","nodeType":"YulIdentifier","src":"8527:5:21"},"nativeSrc":"8527:26:21","nodeType":"YulFunctionCall","src":"8527:26:21"},"variableNames":[{"name":"value","nativeSrc":"8518:5:21","nodeType":"YulIdentifier","src":"8518:5:21"}]}]},"condition":{"name":"newLen","nativeSrc":"8493:6:21","nodeType":"YulIdentifier","src":"8493:6:21"},"nativeSrc":"8490:77:21","nodeType":"YulIf","src":"8490:77:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8587:4:21","nodeType":"YulIdentifier","src":"8587:4:21"},{"arguments":[{"name":"value","nativeSrc":"8646:5:21","nodeType":"YulIdentifier","src":"8646:5:21"},{"name":"newLen","nativeSrc":"8653:6:21","nodeType":"YulIdentifier","src":"8653:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"8593:52:21","nodeType":"YulIdentifier","src":"8593:52:21"},"nativeSrc":"8593:67:21","nodeType":"YulFunctionCall","src":"8593:67:21"}],"functionName":{"name":"sstore","nativeSrc":"8580:6:21","nodeType":"YulIdentifier","src":"8580:6:21"},"nativeSrc":"8580:81:21","nodeType":"YulFunctionCall","src":"8580:81:21"},"nativeSrc":"8580:81:21","nodeType":"YulExpressionStatement","src":"8580:81:21"}]},"nativeSrc":"8441:230:21","nodeType":"YulCase","src":"8441:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"7794:6:21","nodeType":"YulIdentifier","src":"7794:6:21"},{"kind":"number","nativeSrc":"7802:2:21","nodeType":"YulLiteral","src":"7802:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"7791:2:21","nodeType":"YulIdentifier","src":"7791:2:21"},"nativeSrc":"7791:14:21","nodeType":"YulFunctionCall","src":"7791:14:21"},"nativeSrc":"7784:887:21","nodeType":"YulSwitch","src":"7784:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"7282:1395:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"7363:4:21","nodeType":"YulTypedName","src":"7363:4:21","type":""},{"name":"src","nativeSrc":"7369:3:21","nodeType":"YulTypedName","src":"7369:3:21","type":""}],"src":"7282:1395:21"},{"body":{"nativeSrc":"8711:152:21","nodeType":"YulBlock","src":"8711:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8728:1:21","nodeType":"YulLiteral","src":"8728:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"8731:77:21","nodeType":"YulLiteral","src":"8731:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8721:6:21","nodeType":"YulIdentifier","src":"8721:6:21"},"nativeSrc":"8721:88:21","nodeType":"YulFunctionCall","src":"8721:88:21"},"nativeSrc":"8721:88:21","nodeType":"YulExpressionStatement","src":"8721:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8825:1:21","nodeType":"YulLiteral","src":"8825:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"8828:4:21","nodeType":"YulLiteral","src":"8828:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"8818:6:21","nodeType":"YulIdentifier","src":"8818:6:21"},"nativeSrc":"8818:15:21","nodeType":"YulFunctionCall","src":"8818:15:21"},"nativeSrc":"8818:15:21","nodeType":"YulExpressionStatement","src":"8818:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8849:1:21","nodeType":"YulLiteral","src":"8849:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"8852:4:21","nodeType":"YulLiteral","src":"8852:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8842:6:21","nodeType":"YulIdentifier","src":"8842:6:21"},"nativeSrc":"8842:15:21","nodeType":"YulFunctionCall","src":"8842:15:21"},"nativeSrc":"8842:15:21","nodeType":"YulExpressionStatement","src":"8842:15:21"}]},"name":"panic_error_0x11","nativeSrc":"8683:180:21","nodeType":"YulFunctionDefinition","src":"8683:180:21"},{"body":{"nativeSrc":"8920:51:21","nodeType":"YulBlock","src":"8920:51:21","statements":[{"nativeSrc":"8930:34:21","nodeType":"YulAssignment","src":"8930:34:21","value":{"arguments":[{"kind":"number","nativeSrc":"8955:1:21","nodeType":"YulLiteral","src":"8955:1:21","type":"","value":"1"},{"name":"value","nativeSrc":"8958:5:21","nodeType":"YulIdentifier","src":"8958:5:21"}],"functionName":{"name":"shr","nativeSrc":"8951:3:21","nodeType":"YulIdentifier","src":"8951:3:21"},"nativeSrc":"8951:13:21","nodeType":"YulFunctionCall","src":"8951:13:21"},"variableNames":[{"name":"newValue","nativeSrc":"8930:8:21","nodeType":"YulIdentifier","src":"8930:8:21"}]}]},"name":"shift_right_1_unsigned","nativeSrc":"8869:102:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8901:5:21","nodeType":"YulTypedName","src":"8901:5:21","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"8911:8:21","nodeType":"YulTypedName","src":"8911:8:21","type":""}],"src":"8869:102:21"},{"body":{"nativeSrc":"9050:775:21","nodeType":"YulBlock","src":"9050:775:21","statements":[{"nativeSrc":"9060:15:21","nodeType":"YulAssignment","src":"9060:15:21","value":{"name":"_power","nativeSrc":"9069:6:21","nodeType":"YulIdentifier","src":"9069:6:21"},"variableNames":[{"name":"power","nativeSrc":"9060:5:21","nodeType":"YulIdentifier","src":"9060:5:21"}]},{"nativeSrc":"9084:14:21","nodeType":"YulAssignment","src":"9084:14:21","value":{"name":"_base","nativeSrc":"9093:5:21","nodeType":"YulIdentifier","src":"9093:5:21"},"variableNames":[{"name":"base","nativeSrc":"9084:4:21","nodeType":"YulIdentifier","src":"9084:4:21"}]},{"body":{"nativeSrc":"9142:677:21","nodeType":"YulBlock","src":"9142:677:21","statements":[{"body":{"nativeSrc":"9230:22:21","nodeType":"YulBlock","src":"9230:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9232:16:21","nodeType":"YulIdentifier","src":"9232:16:21"},"nativeSrc":"9232:18:21","nodeType":"YulFunctionCall","src":"9232:18:21"},"nativeSrc":"9232:18:21","nodeType":"YulExpressionStatement","src":"9232:18:21"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"9208:4:21","nodeType":"YulIdentifier","src":"9208:4:21"},{"arguments":[{"name":"max","nativeSrc":"9218:3:21","nodeType":"YulIdentifier","src":"9218:3:21"},{"name":"base","nativeSrc":"9223:4:21","nodeType":"YulIdentifier","src":"9223:4:21"}],"functionName":{"name":"div","nativeSrc":"9214:3:21","nodeType":"YulIdentifier","src":"9214:3:21"},"nativeSrc":"9214:14:21","nodeType":"YulFunctionCall","src":"9214:14:21"}],"functionName":{"name":"gt","nativeSrc":"9205:2:21","nodeType":"YulIdentifier","src":"9205:2:21"},"nativeSrc":"9205:24:21","nodeType":"YulFunctionCall","src":"9205:24:21"},"nativeSrc":"9202:50:21","nodeType":"YulIf","src":"9202:50:21"},{"body":{"nativeSrc":"9297:419:21","nodeType":"YulBlock","src":"9297:419:21","statements":[{"nativeSrc":"9677:25:21","nodeType":"YulAssignment","src":"9677:25:21","value":{"arguments":[{"name":"power","nativeSrc":"9690:5:21","nodeType":"YulIdentifier","src":"9690:5:21"},{"name":"base","nativeSrc":"9697:4:21","nodeType":"YulIdentifier","src":"9697:4:21"}],"functionName":{"name":"mul","nativeSrc":"9686:3:21","nodeType":"YulIdentifier","src":"9686:3:21"},"nativeSrc":"9686:16:21","nodeType":"YulFunctionCall","src":"9686:16:21"},"variableNames":[{"name":"power","nativeSrc":"9677:5:21","nodeType":"YulIdentifier","src":"9677:5:21"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"9272:8:21","nodeType":"YulIdentifier","src":"9272:8:21"},{"kind":"number","nativeSrc":"9282:1:21","nodeType":"YulLiteral","src":"9282:1:21","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"9268:3:21","nodeType":"YulIdentifier","src":"9268:3:21"},"nativeSrc":"9268:16:21","nodeType":"YulFunctionCall","src":"9268:16:21"},"nativeSrc":"9265:451:21","nodeType":"YulIf","src":"9265:451:21"},{"nativeSrc":"9729:23:21","nodeType":"YulAssignment","src":"9729:23:21","value":{"arguments":[{"name":"base","nativeSrc":"9741:4:21","nodeType":"YulIdentifier","src":"9741:4:21"},{"name":"base","nativeSrc":"9747:4:21","nodeType":"YulIdentifier","src":"9747:4:21"}],"functionName":{"name":"mul","nativeSrc":"9737:3:21","nodeType":"YulIdentifier","src":"9737:3:21"},"nativeSrc":"9737:15:21","nodeType":"YulFunctionCall","src":"9737:15:21"},"variableNames":[{"name":"base","nativeSrc":"9729:4:21","nodeType":"YulIdentifier","src":"9729:4:21"}]},{"nativeSrc":"9765:44:21","nodeType":"YulAssignment","src":"9765:44:21","value":{"arguments":[{"name":"exponent","nativeSrc":"9800:8:21","nodeType":"YulIdentifier","src":"9800:8:21"}],"functionName":{"name":"shift_right_1_unsigned","nativeSrc":"9777:22:21","nodeType":"YulIdentifier","src":"9777:22:21"},"nativeSrc":"9777:32:21","nodeType":"YulFunctionCall","src":"9777:32:21"},"variableNames":[{"name":"exponent","nativeSrc":"9765:8:21","nodeType":"YulIdentifier","src":"9765:8:21"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"9118:8:21","nodeType":"YulIdentifier","src":"9118:8:21"},{"kind":"number","nativeSrc":"9128:1:21","nodeType":"YulLiteral","src":"9128:1:21","type":"","value":"1"}],"functionName":{"name":"gt","nativeSrc":"9115:2:21","nodeType":"YulIdentifier","src":"9115:2:21"},"nativeSrc":"9115:15:21","nodeType":"YulFunctionCall","src":"9115:15:21"},"nativeSrc":"9107:712:21","nodeType":"YulForLoop","post":{"nativeSrc":"9131:2:21","nodeType":"YulBlock","src":"9131:2:21","statements":[]},"pre":{"nativeSrc":"9111:3:21","nodeType":"YulBlock","src":"9111:3:21","statements":[]},"src":"9107:712:21"}]},"name":"checked_exp_helper","nativeSrc":"8977:848:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nativeSrc":"9005:6:21","nodeType":"YulTypedName","src":"9005:6:21","type":""},{"name":"_base","nativeSrc":"9013:5:21","nodeType":"YulTypedName","src":"9013:5:21","type":""},{"name":"exponent","nativeSrc":"9020:8:21","nodeType":"YulTypedName","src":"9020:8:21","type":""},{"name":"max","nativeSrc":"9030:3:21","nodeType":"YulTypedName","src":"9030:3:21","type":""}],"returnVariables":[{"name":"power","nativeSrc":"9038:5:21","nodeType":"YulTypedName","src":"9038:5:21","type":""},{"name":"base","nativeSrc":"9045:4:21","nodeType":"YulTypedName","src":"9045:4:21","type":""}],"src":"8977:848:21"},{"body":{"nativeSrc":"9891:1013:21","nodeType":"YulBlock","src":"9891:1013:21","statements":[{"body":{"nativeSrc":"10086:20:21","nodeType":"YulBlock","src":"10086:20:21","statements":[{"nativeSrc":"10088:10:21","nodeType":"YulAssignment","src":"10088:10:21","value":{"kind":"number","nativeSrc":"10097:1:21","nodeType":"YulLiteral","src":"10097:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"10088:5:21","nodeType":"YulIdentifier","src":"10088:5:21"}]},{"nativeSrc":"10099:5:21","nodeType":"YulLeave","src":"10099:5:21"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"10076:8:21","nodeType":"YulIdentifier","src":"10076:8:21"}],"functionName":{"name":"iszero","nativeSrc":"10069:6:21","nodeType":"YulIdentifier","src":"10069:6:21"},"nativeSrc":"10069:16:21","nodeType":"YulFunctionCall","src":"10069:16:21"},"nativeSrc":"10066:40:21","nodeType":"YulIf","src":"10066:40:21"},{"body":{"nativeSrc":"10131:20:21","nodeType":"YulBlock","src":"10131:20:21","statements":[{"nativeSrc":"10133:10:21","nodeType":"YulAssignment","src":"10133:10:21","value":{"kind":"number","nativeSrc":"10142:1:21","nodeType":"YulLiteral","src":"10142:1:21","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"10133:5:21","nodeType":"YulIdentifier","src":"10133:5:21"}]},{"nativeSrc":"10144:5:21","nodeType":"YulLeave","src":"10144:5:21"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"10125:4:21","nodeType":"YulIdentifier","src":"10125:4:21"}],"functionName":{"name":"iszero","nativeSrc":"10118:6:21","nodeType":"YulIdentifier","src":"10118:6:21"},"nativeSrc":"10118:12:21","nodeType":"YulFunctionCall","src":"10118:12:21"},"nativeSrc":"10115:36:21","nodeType":"YulIf","src":"10115:36:21"},{"cases":[{"body":{"nativeSrc":"10261:20:21","nodeType":"YulBlock","src":"10261:20:21","statements":[{"nativeSrc":"10263:10:21","nodeType":"YulAssignment","src":"10263:10:21","value":{"kind":"number","nativeSrc":"10272:1:21","nodeType":"YulLiteral","src":"10272:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"10263:5:21","nodeType":"YulIdentifier","src":"10263:5:21"}]},{"nativeSrc":"10274:5:21","nodeType":"YulLeave","src":"10274:5:21"}]},"nativeSrc":"10254:27:21","nodeType":"YulCase","src":"10254:27:21","value":{"kind":"number","nativeSrc":"10259:1:21","nodeType":"YulLiteral","src":"10259:1:21","type":"","value":"1"}},{"body":{"nativeSrc":"10305:176:21","nodeType":"YulBlock","src":"10305:176:21","statements":[{"body":{"nativeSrc":"10340:22:21","nodeType":"YulBlock","src":"10340:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10342:16:21","nodeType":"YulIdentifier","src":"10342:16:21"},"nativeSrc":"10342:18:21","nodeType":"YulFunctionCall","src":"10342:18:21"},"nativeSrc":"10342:18:21","nodeType":"YulExpressionStatement","src":"10342:18:21"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"10325:8:21","nodeType":"YulIdentifier","src":"10325:8:21"},{"kind":"number","nativeSrc":"10335:3:21","nodeType":"YulLiteral","src":"10335:3:21","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"10322:2:21","nodeType":"YulIdentifier","src":"10322:2:21"},"nativeSrc":"10322:17:21","nodeType":"YulFunctionCall","src":"10322:17:21"},"nativeSrc":"10319:43:21","nodeType":"YulIf","src":"10319:43:21"},{"nativeSrc":"10375:25:21","nodeType":"YulAssignment","src":"10375:25:21","value":{"arguments":[{"kind":"number","nativeSrc":"10388:1:21","nodeType":"YulLiteral","src":"10388:1:21","type":"","value":"2"},{"name":"exponent","nativeSrc":"10391:8:21","nodeType":"YulIdentifier","src":"10391:8:21"}],"functionName":{"name":"exp","nativeSrc":"10384:3:21","nodeType":"YulIdentifier","src":"10384:3:21"},"nativeSrc":"10384:16:21","nodeType":"YulFunctionCall","src":"10384:16:21"},"variableNames":[{"name":"power","nativeSrc":"10375:5:21","nodeType":"YulIdentifier","src":"10375:5:21"}]},{"body":{"nativeSrc":"10431:22:21","nodeType":"YulBlock","src":"10431:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10433:16:21","nodeType":"YulIdentifier","src":"10433:16:21"},"nativeSrc":"10433:18:21","nodeType":"YulFunctionCall","src":"10433:18:21"},"nativeSrc":"10433:18:21","nodeType":"YulExpressionStatement","src":"10433:18:21"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"10419:5:21","nodeType":"YulIdentifier","src":"10419:5:21"},{"name":"max","nativeSrc":"10426:3:21","nodeType":"YulIdentifier","src":"10426:3:21"}],"functionName":{"name":"gt","nativeSrc":"10416:2:21","nodeType":"YulIdentifier","src":"10416:2:21"},"nativeSrc":"10416:14:21","nodeType":"YulFunctionCall","src":"10416:14:21"},"nativeSrc":"10413:40:21","nodeType":"YulIf","src":"10413:40:21"},{"nativeSrc":"10466:5:21","nodeType":"YulLeave","src":"10466:5:21"}]},"nativeSrc":"10290:191:21","nodeType":"YulCase","src":"10290:191:21","value":{"kind":"number","nativeSrc":"10295:1:21","nodeType":"YulLiteral","src":"10295:1:21","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"10211:4:21","nodeType":"YulIdentifier","src":"10211:4:21"},"nativeSrc":"10204:277:21","nodeType":"YulSwitch","src":"10204:277:21"},{"body":{"nativeSrc":"10613:123:21","nodeType":"YulBlock","src":"10613:123:21","statements":[{"nativeSrc":"10627:28:21","nodeType":"YulAssignment","src":"10627:28:21","value":{"arguments":[{"name":"base","nativeSrc":"10640:4:21","nodeType":"YulIdentifier","src":"10640:4:21"},{"name":"exponent","nativeSrc":"10646:8:21","nodeType":"YulIdentifier","src":"10646:8:21"}],"functionName":{"name":"exp","nativeSrc":"10636:3:21","nodeType":"YulIdentifier","src":"10636:3:21"},"nativeSrc":"10636:19:21","nodeType":"YulFunctionCall","src":"10636:19:21"},"variableNames":[{"name":"power","nativeSrc":"10627:5:21","nodeType":"YulIdentifier","src":"10627:5:21"}]},{"body":{"nativeSrc":"10686:22:21","nodeType":"YulBlock","src":"10686:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10688:16:21","nodeType":"YulIdentifier","src":"10688:16:21"},"nativeSrc":"10688:18:21","nodeType":"YulFunctionCall","src":"10688:18:21"},"nativeSrc":"10688:18:21","nodeType":"YulExpressionStatement","src":"10688:18:21"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"10674:5:21","nodeType":"YulIdentifier","src":"10674:5:21"},{"name":"max","nativeSrc":"10681:3:21","nodeType":"YulIdentifier","src":"10681:3:21"}],"functionName":{"name":"gt","nativeSrc":"10671:2:21","nodeType":"YulIdentifier","src":"10671:2:21"},"nativeSrc":"10671:14:21","nodeType":"YulFunctionCall","src":"10671:14:21"},"nativeSrc":"10668:40:21","nodeType":"YulIf","src":"10668:40:21"},{"nativeSrc":"10721:5:21","nodeType":"YulLeave","src":"10721:5:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"10516:4:21","nodeType":"YulIdentifier","src":"10516:4:21"},{"kind":"number","nativeSrc":"10522:2:21","nodeType":"YulLiteral","src":"10522:2:21","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"10513:2:21","nodeType":"YulIdentifier","src":"10513:2:21"},"nativeSrc":"10513:12:21","nodeType":"YulFunctionCall","src":"10513:12:21"},{"arguments":[{"name":"exponent","nativeSrc":"10530:8:21","nodeType":"YulIdentifier","src":"10530:8:21"},{"kind":"number","nativeSrc":"10540:2:21","nodeType":"YulLiteral","src":"10540:2:21","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"10527:2:21","nodeType":"YulIdentifier","src":"10527:2:21"},"nativeSrc":"10527:16:21","nodeType":"YulFunctionCall","src":"10527:16:21"}],"functionName":{"name":"and","nativeSrc":"10509:3:21","nodeType":"YulIdentifier","src":"10509:3:21"},"nativeSrc":"10509:35:21","nodeType":"YulFunctionCall","src":"10509:35:21"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"10565:4:21","nodeType":"YulIdentifier","src":"10565:4:21"},{"kind":"number","nativeSrc":"10571:3:21","nodeType":"YulLiteral","src":"10571:3:21","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"10562:2:21","nodeType":"YulIdentifier","src":"10562:2:21"},"nativeSrc":"10562:13:21","nodeType":"YulFunctionCall","src":"10562:13:21"},{"arguments":[{"name":"exponent","nativeSrc":"10580:8:21","nodeType":"YulIdentifier","src":"10580:8:21"},{"kind":"number","nativeSrc":"10590:2:21","nodeType":"YulLiteral","src":"10590:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"10577:2:21","nodeType":"YulIdentifier","src":"10577:2:21"},"nativeSrc":"10577:16:21","nodeType":"YulFunctionCall","src":"10577:16:21"}],"functionName":{"name":"and","nativeSrc":"10558:3:21","nodeType":"YulIdentifier","src":"10558:3:21"},"nativeSrc":"10558:36:21","nodeType":"YulFunctionCall","src":"10558:36:21"}],"functionName":{"name":"or","nativeSrc":"10493:2:21","nodeType":"YulIdentifier","src":"10493:2:21"},"nativeSrc":"10493:111:21","nodeType":"YulFunctionCall","src":"10493:111:21"},"nativeSrc":"10490:246:21","nodeType":"YulIf","src":"10490:246:21"},{"nativeSrc":"10746:57:21","nodeType":"YulAssignment","src":"10746:57:21","value":{"arguments":[{"kind":"number","nativeSrc":"10780:1:21","nodeType":"YulLiteral","src":"10780:1:21","type":"","value":"1"},{"name":"base","nativeSrc":"10783:4:21","nodeType":"YulIdentifier","src":"10783:4:21"},{"name":"exponent","nativeSrc":"10789:8:21","nodeType":"YulIdentifier","src":"10789:8:21"},{"name":"max","nativeSrc":"10799:3:21","nodeType":"YulIdentifier","src":"10799:3:21"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"10761:18:21","nodeType":"YulIdentifier","src":"10761:18:21"},"nativeSrc":"10761:42:21","nodeType":"YulFunctionCall","src":"10761:42:21"},"variableNames":[{"name":"power","nativeSrc":"10746:5:21","nodeType":"YulIdentifier","src":"10746:5:21"},{"name":"base","nativeSrc":"10753:4:21","nodeType":"YulIdentifier","src":"10753:4:21"}]},{"body":{"nativeSrc":"10842:22:21","nodeType":"YulBlock","src":"10842:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10844:16:21","nodeType":"YulIdentifier","src":"10844:16:21"},"nativeSrc":"10844:18:21","nodeType":"YulFunctionCall","src":"10844:18:21"},"nativeSrc":"10844:18:21","nodeType":"YulExpressionStatement","src":"10844:18:21"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"10819:5:21","nodeType":"YulIdentifier","src":"10819:5:21"},{"arguments":[{"name":"max","nativeSrc":"10830:3:21","nodeType":"YulIdentifier","src":"10830:3:21"},{"name":"base","nativeSrc":"10835:4:21","nodeType":"YulIdentifier","src":"10835:4:21"}],"functionName":{"name":"div","nativeSrc":"10826:3:21","nodeType":"YulIdentifier","src":"10826:3:21"},"nativeSrc":"10826:14:21","nodeType":"YulFunctionCall","src":"10826:14:21"}],"functionName":{"name":"gt","nativeSrc":"10816:2:21","nodeType":"YulIdentifier","src":"10816:2:21"},"nativeSrc":"10816:25:21","nodeType":"YulFunctionCall","src":"10816:25:21"},"nativeSrc":"10813:51:21","nodeType":"YulIf","src":"10813:51:21"},{"nativeSrc":"10873:25:21","nodeType":"YulAssignment","src":"10873:25:21","value":{"arguments":[{"name":"power","nativeSrc":"10886:5:21","nodeType":"YulIdentifier","src":"10886:5:21"},{"name":"base","nativeSrc":"10893:4:21","nodeType":"YulIdentifier","src":"10893:4:21"}],"functionName":{"name":"mul","nativeSrc":"10882:3:21","nodeType":"YulIdentifier","src":"10882:3:21"},"nativeSrc":"10882:16:21","nodeType":"YulFunctionCall","src":"10882:16:21"},"variableNames":[{"name":"power","nativeSrc":"10873:5:21","nodeType":"YulIdentifier","src":"10873:5:21"}]}]},"name":"checked_exp_unsigned","nativeSrc":"9831:1073:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"9861:4:21","nodeType":"YulTypedName","src":"9861:4:21","type":""},{"name":"exponent","nativeSrc":"9867:8:21","nodeType":"YulTypedName","src":"9867:8:21","type":""},{"name":"max","nativeSrc":"9877:3:21","nodeType":"YulTypedName","src":"9877:3:21","type":""}],"returnVariables":[{"name":"power","nativeSrc":"9885:5:21","nodeType":"YulTypedName","src":"9885:5:21","type":""}],"src":"9831:1073:21"},{"body":{"nativeSrc":"10953:43:21","nodeType":"YulBlock","src":"10953:43:21","statements":[{"nativeSrc":"10963:27:21","nodeType":"YulAssignment","src":"10963:27:21","value":{"arguments":[{"name":"value","nativeSrc":"10978:5:21","nodeType":"YulIdentifier","src":"10978:5:21"},{"kind":"number","nativeSrc":"10985:4:21","nodeType":"YulLiteral","src":"10985:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"10974:3:21","nodeType":"YulIdentifier","src":"10974:3:21"},"nativeSrc":"10974:16:21","nodeType":"YulFunctionCall","src":"10974:16:21"},"variableNames":[{"name":"cleaned","nativeSrc":"10963:7:21","nodeType":"YulIdentifier","src":"10963:7:21"}]}]},"name":"cleanup_t_uint8","nativeSrc":"10910:86:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10935:5:21","nodeType":"YulTypedName","src":"10935:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"10945:7:21","nodeType":"YulTypedName","src":"10945:7:21","type":""}],"src":"10910:86:21"},{"body":{"nativeSrc":"11066:217:21","nodeType":"YulBlock","src":"11066:217:21","statements":[{"nativeSrc":"11076:31:21","nodeType":"YulAssignment","src":"11076:31:21","value":{"arguments":[{"name":"base","nativeSrc":"11102:4:21","nodeType":"YulIdentifier","src":"11102:4:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11084:17:21","nodeType":"YulIdentifier","src":"11084:17:21"},"nativeSrc":"11084:23:21","nodeType":"YulFunctionCall","src":"11084:23:21"},"variableNames":[{"name":"base","nativeSrc":"11076:4:21","nodeType":"YulIdentifier","src":"11076:4:21"}]},{"nativeSrc":"11116:37:21","nodeType":"YulAssignment","src":"11116:37:21","value":{"arguments":[{"name":"exponent","nativeSrc":"11144:8:21","nodeType":"YulIdentifier","src":"11144:8:21"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"11128:15:21","nodeType":"YulIdentifier","src":"11128:15:21"},"nativeSrc":"11128:25:21","nodeType":"YulFunctionCall","src":"11128:25:21"},"variableNames":[{"name":"exponent","nativeSrc":"11116:8:21","nodeType":"YulIdentifier","src":"11116:8:21"}]},{"nativeSrc":"11163:113:21","nodeType":"YulAssignment","src":"11163:113:21","value":{"arguments":[{"name":"base","nativeSrc":"11193:4:21","nodeType":"YulIdentifier","src":"11193:4:21"},{"name":"exponent","nativeSrc":"11199:8:21","nodeType":"YulIdentifier","src":"11199:8:21"},{"kind":"number","nativeSrc":"11209:66:21","nodeType":"YulLiteral","src":"11209:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"11172:20:21","nodeType":"YulIdentifier","src":"11172:20:21"},"nativeSrc":"11172:104:21","nodeType":"YulFunctionCall","src":"11172:104:21"},"variableNames":[{"name":"power","nativeSrc":"11163:5:21","nodeType":"YulIdentifier","src":"11163:5:21"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"11002:281:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"11041:4:21","nodeType":"YulTypedName","src":"11041:4:21","type":""},{"name":"exponent","nativeSrc":"11047:8:21","nodeType":"YulTypedName","src":"11047:8:21","type":""}],"returnVariables":[{"name":"power","nativeSrc":"11060:5:21","nodeType":"YulTypedName","src":"11060:5:21","type":""}],"src":"11002:281:21"},{"body":{"nativeSrc":"11337:362:21","nodeType":"YulBlock","src":"11337:362:21","statements":[{"nativeSrc":"11347:25:21","nodeType":"YulAssignment","src":"11347:25:21","value":{"arguments":[{"name":"x","nativeSrc":"11370:1:21","nodeType":"YulIdentifier","src":"11370:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11352:17:21","nodeType":"YulIdentifier","src":"11352:17:21"},"nativeSrc":"11352:20:21","nodeType":"YulFunctionCall","src":"11352:20:21"},"variableNames":[{"name":"x","nativeSrc":"11347:1:21","nodeType":"YulIdentifier","src":"11347:1:21"}]},{"nativeSrc":"11381:25:21","nodeType":"YulAssignment","src":"11381:25:21","value":{"arguments":[{"name":"y","nativeSrc":"11404:1:21","nodeType":"YulIdentifier","src":"11404:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11386:17:21","nodeType":"YulIdentifier","src":"11386:17:21"},"nativeSrc":"11386:20:21","nodeType":"YulFunctionCall","src":"11386:20:21"},"variableNames":[{"name":"y","nativeSrc":"11381:1:21","nodeType":"YulIdentifier","src":"11381:1:21"}]},{"nativeSrc":"11415:28:21","nodeType":"YulVariableDeclaration","src":"11415:28:21","value":{"arguments":[{"name":"x","nativeSrc":"11438:1:21","nodeType":"YulIdentifier","src":"11438:1:21"},{"name":"y","nativeSrc":"11441:1:21","nodeType":"YulIdentifier","src":"11441:1:21"}],"functionName":{"name":"mul","nativeSrc":"11434:3:21","nodeType":"YulIdentifier","src":"11434:3:21"},"nativeSrc":"11434:9:21","nodeType":"YulFunctionCall","src":"11434:9:21"},"variables":[{"name":"product_raw","nativeSrc":"11419:11:21","nodeType":"YulTypedName","src":"11419:11:21","type":""}]},{"nativeSrc":"11452:41:21","nodeType":"YulAssignment","src":"11452:41:21","value":{"arguments":[{"name":"product_raw","nativeSrc":"11481:11:21","nodeType":"YulIdentifier","src":"11481:11:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11463:17:21","nodeType":"YulIdentifier","src":"11463:17:21"},"nativeSrc":"11463:30:21","nodeType":"YulFunctionCall","src":"11463:30:21"},"variableNames":[{"name":"product","nativeSrc":"11452:7:21","nodeType":"YulIdentifier","src":"11452:7:21"}]},{"body":{"nativeSrc":"11670:22:21","nodeType":"YulBlock","src":"11670:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11672:16:21","nodeType":"YulIdentifier","src":"11672:16:21"},"nativeSrc":"11672:18:21","nodeType":"YulFunctionCall","src":"11672:18:21"},"nativeSrc":"11672:18:21","nodeType":"YulExpressionStatement","src":"11672:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"11603:1:21","nodeType":"YulIdentifier","src":"11603:1:21"}],"functionName":{"name":"iszero","nativeSrc":"11596:6:21","nodeType":"YulIdentifier","src":"11596:6:21"},"nativeSrc":"11596:9:21","nodeType":"YulFunctionCall","src":"11596:9:21"},{"arguments":[{"name":"y","nativeSrc":"11626:1:21","nodeType":"YulIdentifier","src":"11626:1:21"},{"arguments":[{"name":"product","nativeSrc":"11633:7:21","nodeType":"YulIdentifier","src":"11633:7:21"},{"name":"x","nativeSrc":"11642:1:21","nodeType":"YulIdentifier","src":"11642:1:21"}],"functionName":{"name":"div","nativeSrc":"11629:3:21","nodeType":"YulIdentifier","src":"11629:3:21"},"nativeSrc":"11629:15:21","nodeType":"YulFunctionCall","src":"11629:15:21"}],"functionName":{"name":"eq","nativeSrc":"11623:2:21","nodeType":"YulIdentifier","src":"11623:2:21"},"nativeSrc":"11623:22:21","nodeType":"YulFunctionCall","src":"11623:22:21"}],"functionName":{"name":"or","nativeSrc":"11576:2:21","nodeType":"YulIdentifier","src":"11576:2:21"},"nativeSrc":"11576:83:21","nodeType":"YulFunctionCall","src":"11576:83:21"}],"functionName":{"name":"iszero","nativeSrc":"11556:6:21","nodeType":"YulIdentifier","src":"11556:6:21"},"nativeSrc":"11556:113:21","nodeType":"YulFunctionCall","src":"11556:113:21"},"nativeSrc":"11553:139:21","nodeType":"YulIf","src":"11553:139:21"}]},"name":"checked_mul_t_uint256","nativeSrc":"11289:410:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11320:1:21","nodeType":"YulTypedName","src":"11320:1:21","type":""},{"name":"y","nativeSrc":"11323:1:21","nodeType":"YulTypedName","src":"11323:1:21","type":""}],"returnVariables":[{"name":"product","nativeSrc":"11329:7:21","nodeType":"YulTypedName","src":"11329:7:21","type":""}],"src":"11289:410:21"},{"body":{"nativeSrc":"11750:32:21","nodeType":"YulBlock","src":"11750:32:21","statements":[{"nativeSrc":"11760:16:21","nodeType":"YulAssignment","src":"11760:16:21","value":{"name":"value","nativeSrc":"11771:5:21","nodeType":"YulIdentifier","src":"11771:5:21"},"variableNames":[{"name":"cleaned","nativeSrc":"11760:7:21","nodeType":"YulIdentifier","src":"11760:7:21"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"11705:77:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11732:5:21","nodeType":"YulTypedName","src":"11732:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"11742:7:21","nodeType":"YulTypedName","src":"11742:7:21","type":""}],"src":"11705:77:21"},{"body":{"nativeSrc":"11853:53:21","nodeType":"YulBlock","src":"11853:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11870:3:21","nodeType":"YulIdentifier","src":"11870:3:21"},{"arguments":[{"name":"value","nativeSrc":"11893:5:21","nodeType":"YulIdentifier","src":"11893:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"11875:17:21","nodeType":"YulIdentifier","src":"11875:17:21"},"nativeSrc":"11875:24:21","nodeType":"YulFunctionCall","src":"11875:24:21"}],"functionName":{"name":"mstore","nativeSrc":"11863:6:21","nodeType":"YulIdentifier","src":"11863:6:21"},"nativeSrc":"11863:37:21","nodeType":"YulFunctionCall","src":"11863:37:21"},"nativeSrc":"11863:37:21","nodeType":"YulExpressionStatement","src":"11863:37:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"11788:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11841:5:21","nodeType":"YulTypedName","src":"11841:5:21","type":""},{"name":"pos","nativeSrc":"11848:3:21","nodeType":"YulTypedName","src":"11848:3:21","type":""}],"src":"11788:118:21"},{"body":{"nativeSrc":"11977:53:21","nodeType":"YulBlock","src":"11977:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11994:3:21","nodeType":"YulIdentifier","src":"11994:3:21"},{"arguments":[{"name":"value","nativeSrc":"12017:5:21","nodeType":"YulIdentifier","src":"12017:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11999:17:21","nodeType":"YulIdentifier","src":"11999:17:21"},"nativeSrc":"11999:24:21","nodeType":"YulFunctionCall","src":"11999:24:21"}],"functionName":{"name":"mstore","nativeSrc":"11987:6:21","nodeType":"YulIdentifier","src":"11987:6:21"},"nativeSrc":"11987:37:21","nodeType":"YulFunctionCall","src":"11987:37:21"},"nativeSrc":"11987:37:21","nodeType":"YulExpressionStatement","src":"11987:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11912:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11965:5:21","nodeType":"YulTypedName","src":"11965:5:21","type":""},{"name":"pos","nativeSrc":"11972:3:21","nodeType":"YulTypedName","src":"11972:3:21","type":""}],"src":"11912:118:21"},{"body":{"nativeSrc":"12081:81:21","nodeType":"YulBlock","src":"12081:81:21","statements":[{"nativeSrc":"12091:65:21","nodeType":"YulAssignment","src":"12091:65:21","value":{"arguments":[{"name":"value","nativeSrc":"12106:5:21","nodeType":"YulIdentifier","src":"12106:5:21"},{"kind":"number","nativeSrc":"12113:42:21","nodeType":"YulLiteral","src":"12113:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"12102:3:21","nodeType":"YulIdentifier","src":"12102:3:21"},"nativeSrc":"12102:54:21","nodeType":"YulFunctionCall","src":"12102:54:21"},"variableNames":[{"name":"cleaned","nativeSrc":"12091:7:21","nodeType":"YulIdentifier","src":"12091:7:21"}]}]},"name":"cleanup_t_uint160","nativeSrc":"12036:126:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12063:5:21","nodeType":"YulTypedName","src":"12063:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"12073:7:21","nodeType":"YulTypedName","src":"12073:7:21","type":""}],"src":"12036:126:21"},{"body":{"nativeSrc":"12213:51:21","nodeType":"YulBlock","src":"12213:51:21","statements":[{"nativeSrc":"12223:35:21","nodeType":"YulAssignment","src":"12223:35:21","value":{"arguments":[{"name":"value","nativeSrc":"12252:5:21","nodeType":"YulIdentifier","src":"12252:5:21"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"12234:17:21","nodeType":"YulIdentifier","src":"12234:17:21"},"nativeSrc":"12234:24:21","nodeType":"YulFunctionCall","src":"12234:24:21"},"variableNames":[{"name":"cleaned","nativeSrc":"12223:7:21","nodeType":"YulIdentifier","src":"12223:7:21"}]}]},"name":"cleanup_t_address","nativeSrc":"12168:96:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12195:5:21","nodeType":"YulTypedName","src":"12195:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"12205:7:21","nodeType":"YulTypedName","src":"12205:7:21","type":""}],"src":"12168:96:21"},{"body":{"nativeSrc":"12335:53:21","nodeType":"YulBlock","src":"12335:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12352:3:21","nodeType":"YulIdentifier","src":"12352:3:21"},{"arguments":[{"name":"value","nativeSrc":"12375:5:21","nodeType":"YulIdentifier","src":"12375:5:21"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"12357:17:21","nodeType":"YulIdentifier","src":"12357:17:21"},"nativeSrc":"12357:24:21","nodeType":"YulFunctionCall","src":"12357:24:21"}],"functionName":{"name":"mstore","nativeSrc":"12345:6:21","nodeType":"YulIdentifier","src":"12345:6:21"},"nativeSrc":"12345:37:21","nodeType":"YulFunctionCall","src":"12345:37:21"},"nativeSrc":"12345:37:21","nodeType":"YulExpressionStatement","src":"12345:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12270:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12323:5:21","nodeType":"YulTypedName","src":"12323:5:21","type":""},{"name":"pos","nativeSrc":"12330:3:21","nodeType":"YulTypedName","src":"12330:3:21","type":""}],"src":"12270:118:21"},{"body":{"nativeSrc":"12604:454:21","nodeType":"YulBlock","src":"12604:454:21","statements":[{"nativeSrc":"12614:27:21","nodeType":"YulAssignment","src":"12614:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"12626:9:21","nodeType":"YulIdentifier","src":"12626:9:21"},{"kind":"number","nativeSrc":"12637:3:21","nodeType":"YulLiteral","src":"12637:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12622:3:21","nodeType":"YulIdentifier","src":"12622:3:21"},"nativeSrc":"12622:19:21","nodeType":"YulFunctionCall","src":"12622:19:21"},"variableNames":[{"name":"tail","nativeSrc":"12614:4:21","nodeType":"YulIdentifier","src":"12614:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12695:6:21","nodeType":"YulIdentifier","src":"12695:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"12708:9:21","nodeType":"YulIdentifier","src":"12708:9:21"},{"kind":"number","nativeSrc":"12719:1:21","nodeType":"YulLiteral","src":"12719:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12704:3:21","nodeType":"YulIdentifier","src":"12704:3:21"},"nativeSrc":"12704:17:21","nodeType":"YulFunctionCall","src":"12704:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12651:43:21","nodeType":"YulIdentifier","src":"12651:43:21"},"nativeSrc":"12651:71:21","nodeType":"YulFunctionCall","src":"12651:71:21"},"nativeSrc":"12651:71:21","nodeType":"YulExpressionStatement","src":"12651:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12776:6:21","nodeType":"YulIdentifier","src":"12776:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"12789:9:21","nodeType":"YulIdentifier","src":"12789:9:21"},{"kind":"number","nativeSrc":"12800:2:21","nodeType":"YulLiteral","src":"12800:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12785:3:21","nodeType":"YulIdentifier","src":"12785:3:21"},"nativeSrc":"12785:18:21","nodeType":"YulFunctionCall","src":"12785:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12732:43:21","nodeType":"YulIdentifier","src":"12732:43:21"},"nativeSrc":"12732:72:21","nodeType":"YulFunctionCall","src":"12732:72:21"},"nativeSrc":"12732:72:21","nodeType":"YulExpressionStatement","src":"12732:72:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12858:6:21","nodeType":"YulIdentifier","src":"12858:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"12871:9:21","nodeType":"YulIdentifier","src":"12871:9:21"},{"kind":"number","nativeSrc":"12882:2:21","nodeType":"YulLiteral","src":"12882:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12867:3:21","nodeType":"YulIdentifier","src":"12867:3:21"},"nativeSrc":"12867:18:21","nodeType":"YulFunctionCall","src":"12867:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12814:43:21","nodeType":"YulIdentifier","src":"12814:43:21"},"nativeSrc":"12814:72:21","nodeType":"YulFunctionCall","src":"12814:72:21"},"nativeSrc":"12814:72:21","nodeType":"YulExpressionStatement","src":"12814:72:21"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"12940:6:21","nodeType":"YulIdentifier","src":"12940:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"12953:9:21","nodeType":"YulIdentifier","src":"12953:9:21"},{"kind":"number","nativeSrc":"12964:2:21","nodeType":"YulLiteral","src":"12964:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12949:3:21","nodeType":"YulIdentifier","src":"12949:3:21"},"nativeSrc":"12949:18:21","nodeType":"YulFunctionCall","src":"12949:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12896:43:21","nodeType":"YulIdentifier","src":"12896:43:21"},"nativeSrc":"12896:72:21","nodeType":"YulFunctionCall","src":"12896:72:21"},"nativeSrc":"12896:72:21","nodeType":"YulExpressionStatement","src":"12896:72:21"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"13022:6:21","nodeType":"YulIdentifier","src":"13022:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"13035:9:21","nodeType":"YulIdentifier","src":"13035:9:21"},{"kind":"number","nativeSrc":"13046:3:21","nodeType":"YulLiteral","src":"13046:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"13031:3:21","nodeType":"YulIdentifier","src":"13031:3:21"},"nativeSrc":"13031:19:21","nodeType":"YulFunctionCall","src":"13031:19:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12978:43:21","nodeType":"YulIdentifier","src":"12978:43:21"},"nativeSrc":"12978:73:21","nodeType":"YulFunctionCall","src":"12978:73:21"},"nativeSrc":"12978:73:21","nodeType":"YulExpressionStatement","src":"12978:73:21"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"12394:664:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12544:9:21","nodeType":"YulTypedName","src":"12544:9:21","type":""},{"name":"value4","nativeSrc":"12556:6:21","nodeType":"YulTypedName","src":"12556:6:21","type":""},{"name":"value3","nativeSrc":"12564:6:21","nodeType":"YulTypedName","src":"12564:6:21","type":""},{"name":"value2","nativeSrc":"12572:6:21","nodeType":"YulTypedName","src":"12572:6:21","type":""},{"name":"value1","nativeSrc":"12580:6:21","nodeType":"YulTypedName","src":"12580:6:21","type":""},{"name":"value0","nativeSrc":"12588:6:21","nodeType":"YulTypedName","src":"12588:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12599:4:21","nodeType":"YulTypedName","src":"12599:4:21","type":""}],"src":"12394:664:21"},{"body":{"nativeSrc":"13162:124:21","nodeType":"YulBlock","src":"13162:124:21","statements":[{"nativeSrc":"13172:26:21","nodeType":"YulAssignment","src":"13172:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"13184:9:21","nodeType":"YulIdentifier","src":"13184:9:21"},{"kind":"number","nativeSrc":"13195:2:21","nodeType":"YulLiteral","src":"13195:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13180:3:21","nodeType":"YulIdentifier","src":"13180:3:21"},"nativeSrc":"13180:18:21","nodeType":"YulFunctionCall","src":"13180:18:21"},"variableNames":[{"name":"tail","nativeSrc":"13172:4:21","nodeType":"YulIdentifier","src":"13172:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13252:6:21","nodeType":"YulIdentifier","src":"13252:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"13265:9:21","nodeType":"YulIdentifier","src":"13265:9:21"},{"kind":"number","nativeSrc":"13276:1:21","nodeType":"YulLiteral","src":"13276:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13261:3:21","nodeType":"YulIdentifier","src":"13261:3:21"},"nativeSrc":"13261:17:21","nodeType":"YulFunctionCall","src":"13261:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13208:43:21","nodeType":"YulIdentifier","src":"13208:43:21"},"nativeSrc":"13208:71:21","nodeType":"YulFunctionCall","src":"13208:71:21"},"nativeSrc":"13208:71:21","nodeType":"YulExpressionStatement","src":"13208:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"13064:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13134:9:21","nodeType":"YulTypedName","src":"13134:9:21","type":""},{"name":"value0","nativeSrc":"13146:6:21","nodeType":"YulTypedName","src":"13146:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13157:4:21","nodeType":"YulTypedName","src":"13157:4:21","type":""}],"src":"13064:222:21"},{"body":{"nativeSrc":"13388:73:21","nodeType":"YulBlock","src":"13388:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13405:3:21","nodeType":"YulIdentifier","src":"13405:3:21"},{"name":"length","nativeSrc":"13410:6:21","nodeType":"YulIdentifier","src":"13410:6:21"}],"functionName":{"name":"mstore","nativeSrc":"13398:6:21","nodeType":"YulIdentifier","src":"13398:6:21"},"nativeSrc":"13398:19:21","nodeType":"YulFunctionCall","src":"13398:19:21"},"nativeSrc":"13398:19:21","nodeType":"YulExpressionStatement","src":"13398:19:21"},{"nativeSrc":"13426:29:21","nodeType":"YulAssignment","src":"13426:29:21","value":{"arguments":[{"name":"pos","nativeSrc":"13445:3:21","nodeType":"YulIdentifier","src":"13445:3:21"},{"kind":"number","nativeSrc":"13450:4:21","nodeType":"YulLiteral","src":"13450:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13441:3:21","nodeType":"YulIdentifier","src":"13441:3:21"},"nativeSrc":"13441:14:21","nodeType":"YulFunctionCall","src":"13441:14:21"},"variableNames":[{"name":"updated_pos","nativeSrc":"13426:11:21","nodeType":"YulIdentifier","src":"13426:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"13292:169:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13360:3:21","nodeType":"YulTypedName","src":"13360:3:21","type":""},{"name":"length","nativeSrc":"13365:6:21","nodeType":"YulTypedName","src":"13365:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"13376:11:21","nodeType":"YulTypedName","src":"13376:11:21","type":""}],"src":"13292:169:21"},{"body":{"nativeSrc":"13559:285:21","nodeType":"YulBlock","src":"13559:285:21","statements":[{"nativeSrc":"13569:53:21","nodeType":"YulVariableDeclaration","src":"13569:53:21","value":{"arguments":[{"name":"value","nativeSrc":"13616:5:21","nodeType":"YulIdentifier","src":"13616:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"13583:32:21","nodeType":"YulIdentifier","src":"13583:32:21"},"nativeSrc":"13583:39:21","nodeType":"YulFunctionCall","src":"13583:39:21"},"variables":[{"name":"length","nativeSrc":"13573:6:21","nodeType":"YulTypedName","src":"13573:6:21","type":""}]},{"nativeSrc":"13631:78:21","nodeType":"YulAssignment","src":"13631:78:21","value":{"arguments":[{"name":"pos","nativeSrc":"13697:3:21","nodeType":"YulIdentifier","src":"13697:3:21"},{"name":"length","nativeSrc":"13702:6:21","nodeType":"YulIdentifier","src":"13702:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"13638:58:21","nodeType":"YulIdentifier","src":"13638:58:21"},"nativeSrc":"13638:71:21","nodeType":"YulFunctionCall","src":"13638:71:21"},"variableNames":[{"name":"pos","nativeSrc":"13631:3:21","nodeType":"YulIdentifier","src":"13631:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"13757:5:21","nodeType":"YulIdentifier","src":"13757:5:21"},{"kind":"number","nativeSrc":"13764:4:21","nodeType":"YulLiteral","src":"13764:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13753:3:21","nodeType":"YulIdentifier","src":"13753:3:21"},"nativeSrc":"13753:16:21","nodeType":"YulFunctionCall","src":"13753:16:21"},{"name":"pos","nativeSrc":"13771:3:21","nodeType":"YulIdentifier","src":"13771:3:21"},{"name":"length","nativeSrc":"13776:6:21","nodeType":"YulIdentifier","src":"13776:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"13718:34:21","nodeType":"YulIdentifier","src":"13718:34:21"},"nativeSrc":"13718:65:21","nodeType":"YulFunctionCall","src":"13718:65:21"},"nativeSrc":"13718:65:21","nodeType":"YulExpressionStatement","src":"13718:65:21"},{"nativeSrc":"13792:46:21","nodeType":"YulAssignment","src":"13792:46:21","value":{"arguments":[{"name":"pos","nativeSrc":"13803:3:21","nodeType":"YulIdentifier","src":"13803:3:21"},{"arguments":[{"name":"length","nativeSrc":"13830:6:21","nodeType":"YulIdentifier","src":"13830:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"13808:21:21","nodeType":"YulIdentifier","src":"13808:21:21"},"nativeSrc":"13808:29:21","nodeType":"YulFunctionCall","src":"13808:29:21"}],"functionName":{"name":"add","nativeSrc":"13799:3:21","nodeType":"YulIdentifier","src":"13799:3:21"},"nativeSrc":"13799:39:21","nodeType":"YulFunctionCall","src":"13799:39:21"},"variableNames":[{"name":"end","nativeSrc":"13792:3:21","nodeType":"YulIdentifier","src":"13792:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"13467:377:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13540:5:21","nodeType":"YulTypedName","src":"13540:5:21","type":""},{"name":"pos","nativeSrc":"13547:3:21","nodeType":"YulTypedName","src":"13547:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13555:3:21","nodeType":"YulTypedName","src":"13555:3:21","type":""}],"src":"13467:377:21"},{"body":{"nativeSrc":"13968:195:21","nodeType":"YulBlock","src":"13968:195:21","statements":[{"nativeSrc":"13978:26:21","nodeType":"YulAssignment","src":"13978:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"13990:9:21","nodeType":"YulIdentifier","src":"13990:9:21"},{"kind":"number","nativeSrc":"14001:2:21","nodeType":"YulLiteral","src":"14001:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13986:3:21","nodeType":"YulIdentifier","src":"13986:3:21"},"nativeSrc":"13986:18:21","nodeType":"YulFunctionCall","src":"13986:18:21"},"variableNames":[{"name":"tail","nativeSrc":"13978:4:21","nodeType":"YulIdentifier","src":"13978:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14025:9:21","nodeType":"YulIdentifier","src":"14025:9:21"},{"kind":"number","nativeSrc":"14036:1:21","nodeType":"YulLiteral","src":"14036:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14021:3:21","nodeType":"YulIdentifier","src":"14021:3:21"},"nativeSrc":"14021:17:21","nodeType":"YulFunctionCall","src":"14021:17:21"},{"arguments":[{"name":"tail","nativeSrc":"14044:4:21","nodeType":"YulIdentifier","src":"14044:4:21"},{"name":"headStart","nativeSrc":"14050:9:21","nodeType":"YulIdentifier","src":"14050:9:21"}],"functionName":{"name":"sub","nativeSrc":"14040:3:21","nodeType":"YulIdentifier","src":"14040:3:21"},"nativeSrc":"14040:20:21","nodeType":"YulFunctionCall","src":"14040:20:21"}],"functionName":{"name":"mstore","nativeSrc":"14014:6:21","nodeType":"YulIdentifier","src":"14014:6:21"},"nativeSrc":"14014:47:21","nodeType":"YulFunctionCall","src":"14014:47:21"},"nativeSrc":"14014:47:21","nodeType":"YulExpressionStatement","src":"14014:47:21"},{"nativeSrc":"14070:86:21","nodeType":"YulAssignment","src":"14070:86:21","value":{"arguments":[{"name":"value0","nativeSrc":"14142:6:21","nodeType":"YulIdentifier","src":"14142:6:21"},{"name":"tail","nativeSrc":"14151:4:21","nodeType":"YulIdentifier","src":"14151:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"14078:63:21","nodeType":"YulIdentifier","src":"14078:63:21"},"nativeSrc":"14078:78:21","nodeType":"YulFunctionCall","src":"14078:78:21"},"variableNames":[{"name":"tail","nativeSrc":"14070:4:21","nodeType":"YulIdentifier","src":"14070:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13850:313:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13940:9:21","nodeType":"YulTypedName","src":"13940:9:21","type":""},{"name":"value0","nativeSrc":"13952:6:21","nodeType":"YulTypedName","src":"13952:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13963:4:21","nodeType":"YulTypedName","src":"13963:4:21","type":""}],"src":"13850:313:21"},{"body":{"nativeSrc":"14227:40:21","nodeType":"YulBlock","src":"14227:40:21","statements":[{"nativeSrc":"14238:22:21","nodeType":"YulAssignment","src":"14238:22:21","value":{"arguments":[{"name":"value","nativeSrc":"14254:5:21","nodeType":"YulIdentifier","src":"14254:5:21"}],"functionName":{"name":"mload","nativeSrc":"14248:5:21","nodeType":"YulIdentifier","src":"14248:5:21"},"nativeSrc":"14248:12:21","nodeType":"YulFunctionCall","src":"14248:12:21"},"variableNames":[{"name":"length","nativeSrc":"14238:6:21","nodeType":"YulIdentifier","src":"14238:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"14169:98:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14210:5:21","nodeType":"YulTypedName","src":"14210:5:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"14220:6:21","nodeType":"YulTypedName","src":"14220:6:21","type":""}],"src":"14169:98:21"},{"body":{"nativeSrc":"14329:60:21","nodeType":"YulBlock","src":"14329:60:21","statements":[{"nativeSrc":"14339:11:21","nodeType":"YulAssignment","src":"14339:11:21","value":{"name":"ptr","nativeSrc":"14347:3:21","nodeType":"YulIdentifier","src":"14347:3:21"},"variableNames":[{"name":"data","nativeSrc":"14339:4:21","nodeType":"YulIdentifier","src":"14339:4:21"}]},{"nativeSrc":"14360:22:21","nodeType":"YulAssignment","src":"14360:22:21","value":{"arguments":[{"name":"ptr","nativeSrc":"14372:3:21","nodeType":"YulIdentifier","src":"14372:3:21"},{"kind":"number","nativeSrc":"14377:4:21","nodeType":"YulLiteral","src":"14377:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14368:3:21","nodeType":"YulIdentifier","src":"14368:3:21"},"nativeSrc":"14368:14:21","nodeType":"YulFunctionCall","src":"14368:14:21"},"variableNames":[{"name":"data","nativeSrc":"14360:4:21","nodeType":"YulIdentifier","src":"14360:4:21"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"14273:116:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"14316:3:21","nodeType":"YulTypedName","src":"14316:3:21","type":""}],"returnVariables":[{"name":"data","nativeSrc":"14324:4:21","nodeType":"YulTypedName","src":"14324:4:21","type":""}],"src":"14273:116:21"},{"body":{"nativeSrc":"14450:99:21","nodeType":"YulBlock","src":"14450:99:21","statements":[{"nativeSrc":"14461:42:21","nodeType":"YulVariableDeclaration","src":"14461:42:21","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"14498:3:21","nodeType":"YulIdentifier","src":"14498:3:21"}],"functionName":{"name":"mload","nativeSrc":"14492:5:21","nodeType":"YulIdentifier","src":"14492:5:21"},"nativeSrc":"14492:10:21","nodeType":"YulFunctionCall","src":"14492:10:21"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"14474:17:21","nodeType":"YulIdentifier","src":"14474:17:21"},"nativeSrc":"14474:29:21","nodeType":"YulFunctionCall","src":"14474:29:21"},"variables":[{"name":"value","nativeSrc":"14465:5:21","nodeType":"YulTypedName","src":"14465:5:21","type":""}]},{"nativeSrc":"14513:29:21","nodeType":"YulAssignment","src":"14513:29:21","value":{"name":"value","nativeSrc":"14537:5:21","nodeType":"YulIdentifier","src":"14537:5:21"},"variableNames":[{"name":"returnValue","nativeSrc":"14513:11:21","nodeType":"YulIdentifier","src":"14513:11:21"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"14395:154:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"14430:3:21","nodeType":"YulTypedName","src":"14430:3:21","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"14438:11:21","nodeType":"YulTypedName","src":"14438:11:21","type":""}],"src":"14395:154:21"},{"body":{"nativeSrc":"14645:504:21","nodeType":"YulBlock","src":"14645:504:21","statements":[{"nativeSrc":"14656:52:21","nodeType":"YulVariableDeclaration","src":"14656:52:21","value":{"arguments":[{"name":"array","nativeSrc":"14702:5:21","nodeType":"YulIdentifier","src":"14702:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"14670:31:21","nodeType":"YulIdentifier","src":"14670:31:21"},"nativeSrc":"14670:38:21","nodeType":"YulFunctionCall","src":"14670:38:21"},"variables":[{"name":"length","nativeSrc":"14660:6:21","nodeType":"YulTypedName","src":"14660:6:21","type":""}]},{"nativeSrc":"14717:21:21","nodeType":"YulVariableDeclaration","src":"14717:21:21","value":{"name":"array","nativeSrc":"14733:5:21","nodeType":"YulIdentifier","src":"14733:5:21"},"variables":[{"name":"dataArea","nativeSrc":"14721:8:21","nodeType":"YulTypedName","src":"14721:8:21","type":""}]},{"nativeSrc":"14748:52:21","nodeType":"YulAssignment","src":"14748:52:21","value":{"arguments":[{"name":"array","nativeSrc":"14794:5:21","nodeType":"YulIdentifier","src":"14794:5:21"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"14760:33:21","nodeType":"YulIdentifier","src":"14760:33:21"},"nativeSrc":"14760:40:21","nodeType":"YulFunctionCall","src":"14760:40:21"},"variableNames":[{"name":"dataArea","nativeSrc":"14748:8:21","nodeType":"YulIdentifier","src":"14748:8:21"}]},{"nativeSrc":"14810:44:21","nodeType":"YulAssignment","src":"14810:44:21","value":{"arguments":[{"name":"dataArea","nativeSrc":"14845:8:21","nodeType":"YulIdentifier","src":"14845:8:21"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"14819:25:21","nodeType":"YulIdentifier","src":"14819:25:21"},"nativeSrc":"14819:35:21","nodeType":"YulFunctionCall","src":"14819:35:21"},"variableNames":[{"name":"value","nativeSrc":"14810:5:21","nodeType":"YulIdentifier","src":"14810:5:21"}]},{"body":{"nativeSrc":"14882:260:21","nodeType":"YulBlock","src":"14882:260:21","statements":[{"nativeSrc":"14896:236:21","nodeType":"YulAssignment","src":"14896:236:21","value":{"arguments":[{"name":"value","nativeSrc":"14926:5:21","nodeType":"YulIdentifier","src":"14926:5:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14993:1:21","nodeType":"YulLiteral","src":"14993:1:21","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"15000:2:21","nodeType":"YulLiteral","src":"15000:2:21","type":"","value":"32"},{"name":"length","nativeSrc":"15004:6:21","nodeType":"YulIdentifier","src":"15004:6:21"}],"functionName":{"name":"sub","nativeSrc":"14996:3:21","nodeType":"YulIdentifier","src":"14996:3:21"},"nativeSrc":"14996:15:21","nodeType":"YulFunctionCall","src":"14996:15:21"}],"functionName":{"name":"mul","nativeSrc":"14989:3:21","nodeType":"YulIdentifier","src":"14989:3:21"},"nativeSrc":"14989:23:21","nodeType":"YulFunctionCall","src":"14989:23:21"},{"kind":"number","nativeSrc":"15034:66:21","nodeType":"YulLiteral","src":"15034:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"14949:18:21","nodeType":"YulIdentifier","src":"14949:18:21"},"nativeSrc":"14949:169:21","nodeType":"YulFunctionCall","src":"14949:169:21"}],"functionName":{"name":"and","nativeSrc":"14905:3:21","nodeType":"YulIdentifier","src":"14905:3:21"},"nativeSrc":"14905:227:21","nodeType":"YulFunctionCall","src":"14905:227:21"},"variableNames":[{"name":"value","nativeSrc":"14896:5:21","nodeType":"YulIdentifier","src":"14896:5:21"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"14870:6:21","nodeType":"YulIdentifier","src":"14870:6:21"},{"kind":"number","nativeSrc":"14878:2:21","nodeType":"YulLiteral","src":"14878:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"14867:2:21","nodeType":"YulIdentifier","src":"14867:2:21"},"nativeSrc":"14867:14:21","nodeType":"YulFunctionCall","src":"14867:14:21"},"nativeSrc":"14864:278:21","nodeType":"YulIf","src":"14864:278:21"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"14555:594:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"14629:5:21","nodeType":"YulTypedName","src":"14629:5:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"14639:5:21","nodeType":"YulTypedName","src":"14639:5:21","type":""}],"src":"14555:594:21"},{"body":{"nativeSrc":"15199:147:21","nodeType":"YulBlock","src":"15199:147:21","statements":[{"nativeSrc":"15209:25:21","nodeType":"YulAssignment","src":"15209:25:21","value":{"arguments":[{"name":"x","nativeSrc":"15232:1:21","nodeType":"YulIdentifier","src":"15232:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15214:17:21","nodeType":"YulIdentifier","src":"15214:17:21"},"nativeSrc":"15214:20:21","nodeType":"YulFunctionCall","src":"15214:20:21"},"variableNames":[{"name":"x","nativeSrc":"15209:1:21","nodeType":"YulIdentifier","src":"15209:1:21"}]},{"nativeSrc":"15243:25:21","nodeType":"YulAssignment","src":"15243:25:21","value":{"arguments":[{"name":"y","nativeSrc":"15266:1:21","nodeType":"YulIdentifier","src":"15266:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15248:17:21","nodeType":"YulIdentifier","src":"15248:17:21"},"nativeSrc":"15248:20:21","nodeType":"YulFunctionCall","src":"15248:20:21"},"variableNames":[{"name":"y","nativeSrc":"15243:1:21","nodeType":"YulIdentifier","src":"15243:1:21"}]},{"nativeSrc":"15277:16:21","nodeType":"YulAssignment","src":"15277:16:21","value":{"arguments":[{"name":"x","nativeSrc":"15288:1:21","nodeType":"YulIdentifier","src":"15288:1:21"},{"name":"y","nativeSrc":"15291:1:21","nodeType":"YulIdentifier","src":"15291:1:21"}],"functionName":{"name":"add","nativeSrc":"15284:3:21","nodeType":"YulIdentifier","src":"15284:3:21"},"nativeSrc":"15284:9:21","nodeType":"YulFunctionCall","src":"15284:9:21"},"variableNames":[{"name":"sum","nativeSrc":"15277:3:21","nodeType":"YulIdentifier","src":"15277:3:21"}]},{"body":{"nativeSrc":"15317:22:21","nodeType":"YulBlock","src":"15317:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"15319:16:21","nodeType":"YulIdentifier","src":"15319:16:21"},"nativeSrc":"15319:18:21","nodeType":"YulFunctionCall","src":"15319:18:21"},"nativeSrc":"15319:18:21","nodeType":"YulExpressionStatement","src":"15319:18:21"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"15309:1:21","nodeType":"YulIdentifier","src":"15309:1:21"},{"name":"sum","nativeSrc":"15312:3:21","nodeType":"YulIdentifier","src":"15312:3:21"}],"functionName":{"name":"gt","nativeSrc":"15306:2:21","nodeType":"YulIdentifier","src":"15306:2:21"},"nativeSrc":"15306:10:21","nodeType":"YulFunctionCall","src":"15306:10:21"},"nativeSrc":"15303:36:21","nodeType":"YulIf","src":"15303:36:21"}]},"name":"checked_add_t_uint256","nativeSrc":"15155:191:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15186:1:21","nodeType":"YulTypedName","src":"15186:1:21","type":""},{"name":"y","nativeSrc":"15189:1:21","nodeType":"YulTypedName","src":"15189:1:21","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"15195:3:21","nodeType":"YulTypedName","src":"15195:3:21","type":""}],"src":"15155:191:21"},{"body":{"nativeSrc":"15506:288:21","nodeType":"YulBlock","src":"15506:288:21","statements":[{"nativeSrc":"15516:26:21","nodeType":"YulAssignment","src":"15516:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"15528:9:21","nodeType":"YulIdentifier","src":"15528:9:21"},{"kind":"number","nativeSrc":"15539:2:21","nodeType":"YulLiteral","src":"15539:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15524:3:21","nodeType":"YulIdentifier","src":"15524:3:21"},"nativeSrc":"15524:18:21","nodeType":"YulFunctionCall","src":"15524:18:21"},"variableNames":[{"name":"tail","nativeSrc":"15516:4:21","nodeType":"YulIdentifier","src":"15516:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15596:6:21","nodeType":"YulIdentifier","src":"15596:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"15609:9:21","nodeType":"YulIdentifier","src":"15609:9:21"},{"kind":"number","nativeSrc":"15620:1:21","nodeType":"YulLiteral","src":"15620:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15605:3:21","nodeType":"YulIdentifier","src":"15605:3:21"},"nativeSrc":"15605:17:21","nodeType":"YulFunctionCall","src":"15605:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15552:43:21","nodeType":"YulIdentifier","src":"15552:43:21"},"nativeSrc":"15552:71:21","nodeType":"YulFunctionCall","src":"15552:71:21"},"nativeSrc":"15552:71:21","nodeType":"YulExpressionStatement","src":"15552:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15677:6:21","nodeType":"YulIdentifier","src":"15677:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"15690:9:21","nodeType":"YulIdentifier","src":"15690:9:21"},{"kind":"number","nativeSrc":"15701:2:21","nodeType":"YulLiteral","src":"15701:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15686:3:21","nodeType":"YulIdentifier","src":"15686:3:21"},"nativeSrc":"15686:18:21","nodeType":"YulFunctionCall","src":"15686:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15633:43:21","nodeType":"YulIdentifier","src":"15633:43:21"},"nativeSrc":"15633:72:21","nodeType":"YulFunctionCall","src":"15633:72:21"},"nativeSrc":"15633:72:21","nodeType":"YulExpressionStatement","src":"15633:72:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15759:6:21","nodeType":"YulIdentifier","src":"15759:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"15772:9:21","nodeType":"YulIdentifier","src":"15772:9:21"},{"kind":"number","nativeSrc":"15783:2:21","nodeType":"YulLiteral","src":"15783:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15768:3:21","nodeType":"YulIdentifier","src":"15768:3:21"},"nativeSrc":"15768:18:21","nodeType":"YulFunctionCall","src":"15768:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15715:43:21","nodeType":"YulIdentifier","src":"15715:43:21"},"nativeSrc":"15715:72:21","nodeType":"YulFunctionCall","src":"15715:72:21"},"nativeSrc":"15715:72:21","nodeType":"YulExpressionStatement","src":"15715:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"15352:442:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15462:9:21","nodeType":"YulTypedName","src":"15462:9:21","type":""},{"name":"value2","nativeSrc":"15474:6:21","nodeType":"YulTypedName","src":"15474:6:21","type":""},{"name":"value1","nativeSrc":"15482:6:21","nodeType":"YulTypedName","src":"15482:6:21","type":""},{"name":"value0","nativeSrc":"15490:6:21","nodeType":"YulTypedName","src":"15490:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15501:4:21","nodeType":"YulTypedName","src":"15501:4:21","type":""}],"src":"15352:442:21"},{"body":{"nativeSrc":"15898:124:21","nodeType":"YulBlock","src":"15898:124:21","statements":[{"nativeSrc":"15908:26:21","nodeType":"YulAssignment","src":"15908:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"15920:9:21","nodeType":"YulIdentifier","src":"15920:9:21"},{"kind":"number","nativeSrc":"15931:2:21","nodeType":"YulLiteral","src":"15931:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15916:3:21","nodeType":"YulIdentifier","src":"15916:3:21"},"nativeSrc":"15916:18:21","nodeType":"YulFunctionCall","src":"15916:18:21"},"variableNames":[{"name":"tail","nativeSrc":"15908:4:21","nodeType":"YulIdentifier","src":"15908:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15988:6:21","nodeType":"YulIdentifier","src":"15988:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"16001:9:21","nodeType":"YulIdentifier","src":"16001:9:21"},{"kind":"number","nativeSrc":"16012:1:21","nodeType":"YulLiteral","src":"16012:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15997:3:21","nodeType":"YulIdentifier","src":"15997:3:21"},"nativeSrc":"15997:17:21","nodeType":"YulFunctionCall","src":"15997:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15944:43:21","nodeType":"YulIdentifier","src":"15944:43:21"},"nativeSrc":"15944:71:21","nodeType":"YulFunctionCall","src":"15944:71:21"},"nativeSrc":"15944:71:21","nodeType":"YulExpressionStatement","src":"15944:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"15800:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15870:9:21","nodeType":"YulTypedName","src":"15870:9:21","type":""},{"name":"value0","nativeSrc":"15882:6:21","nodeType":"YulTypedName","src":"15882:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15893:4:21","nodeType":"YulTypedName","src":"15893:4:21","type":""}],"src":"15800:222:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2C80 CODESIZE SUB DUP1 PUSH2 0x2C80 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x33 SWAP2 SWAP1 PUSH2 0x7A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4149444546490000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4149444546490000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4149444546490000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x11B SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST POP POP POP PUSH2 0x142 PUSH1 0x5 DUP4 PUSH2 0x224 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH2 0x15E PUSH1 0x6 DUP3 PUSH2 0x224 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0x19B PUSH2 0x274 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP DUP1 PUSH1 0x8 SWAP1 DUP2 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST POP PUSH2 0x21D CALLER PUSH2 0x1FB PUSH2 0x2CF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x207 SWAP2 SWAP1 PUSH2 0xC56 JUMP JUMPDEST DUP5 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0x2D8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x246 JUMPI PUSH2 0x23F DUP4 PUSH2 0x360 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH2 0x26E JUMP JUMPDEST DUP3 PUSH2 0x256 DUP4 PUSH2 0x3C8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2B4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x34A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35C PUSH1 0x0 DUP4 DUP4 PUSH2 0x3D2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x3AD JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x3B9 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x424 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0xEBD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4B0 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x540 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x58D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x60B JUMP JUMPDEST DUP2 EQ PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x63B DUP2 PUSH2 0x615 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x694 DUP3 PUSH2 0x64B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x6B2 PUSH2 0x65C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C6 PUSH2 0x5F7 JUMP JUMPDEST SWAP1 POP PUSH2 0x6D2 DUP3 DUP3 PUSH2 0x68B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6F2 JUMPI PUSH2 0x6F1 PUSH2 0x65C JUMP JUMPDEST JUMPDEST PUSH2 0x6FB DUP3 PUSH2 0x64B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x726 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x70B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x745 PUSH2 0x740 DUP5 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x6BC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x761 JUMPI PUSH2 0x760 PUSH2 0x646 JUMP JUMPDEST JUMPDEST PUSH2 0x76C DUP5 DUP3 DUP6 PUSH2 0x708 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x789 JUMPI PUSH2 0x788 PUSH2 0x641 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x799 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x732 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7B9 JUMPI PUSH2 0x7B8 PUSH2 0x601 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7C7 DUP6 DUP3 DUP7 ADD PUSH2 0x62C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7E8 JUMPI PUSH2 0x7E7 PUSH2 0x606 JUMP JUMPDEST JUMPDEST PUSH2 0x7F4 DUP6 DUP3 DUP7 ADD PUSH2 0x774 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x850 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x863 JUMPI PUSH2 0x862 PUSH2 0x809 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x8CB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x88E JUMP JUMPDEST PUSH2 0x8D5 DUP7 DUP4 PUSH2 0x88E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x912 PUSH2 0x90D PUSH2 0x908 DUP5 PUSH2 0x60B JUMP JUMPDEST PUSH2 0x8ED JUMP JUMPDEST PUSH2 0x60B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x92C DUP4 PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x940 PUSH2 0x938 DUP3 PUSH2 0x919 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x89B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x955 PUSH2 0x948 JUMP JUMPDEST PUSH2 0x960 DUP2 DUP5 DUP5 PUSH2 0x923 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x984 JUMPI PUSH2 0x979 PUSH1 0x0 DUP3 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x966 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9C9 JUMPI PUSH2 0x99A DUP2 PUSH2 0x869 JUMP JUMPDEST PUSH2 0x9A3 DUP5 PUSH2 0x87E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x9B2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x9C6 PUSH2 0x9BE DUP6 PUSH2 0x87E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x965 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9EC PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x9CE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA05 DUP4 DUP4 PUSH2 0x9DB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA1E DUP3 PUSH2 0x7FE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA37 JUMPI PUSH2 0xA36 PUSH2 0x65C JUMP JUMPDEST JUMPDEST PUSH2 0xA41 DUP3 SLOAD PUSH2 0x838 JUMP JUMPDEST PUSH2 0xA4C DUP3 DUP3 DUP6 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA7F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xA6D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA77 DUP6 DUP3 PUSH2 0x9F9 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xADF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA8D DUP7 PUSH2 0x869 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAB5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA90 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xAD2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xACE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x9DB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xB6D JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xB49 JUMPI PUSH2 0xB48 PUSH2 0xAE7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xB58 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xB66 DUP6 PUSH2 0xB16 JUMP JUMPDEST SWAP5 POP PUSH2 0xB2D JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB86 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC42 JUMP JUMPDEST DUP2 PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xC42 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xBAA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xBB4 JUMPI PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xC42 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xBC6 JUMPI PUSH2 0xBC5 PUSH2 0xAE7 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xBDD JUMPI PUSH2 0xBDC PUSH2 0xAE7 JUMP JUMPDEST JUMPDEST POP PUSH2 0xC42 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xC18 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xC13 JUMPI PUSH2 0xC12 PUSH2 0xAE7 JUMP JUMPDEST JUMPDEST PUSH2 0xC42 JUMP JUMPDEST PUSH2 0xC25 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xB23 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xC3C JUMPI PUSH2 0xC3B PUSH2 0xAE7 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC61 DUP3 PUSH2 0x60B JUMP JUMPDEST SWAP2 POP PUSH2 0xC6C DUP4 PUSH2 0xC49 JUMP JUMPDEST SWAP3 POP PUSH2 0xC99 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xB76 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAC DUP3 PUSH2 0x60B JUMP JUMPDEST SWAP2 POP PUSH2 0xCB7 DUP4 PUSH2 0x60B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xCC5 DUP2 PUSH2 0x60B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xCDC JUMPI PUSH2 0xCDB PUSH2 0xAE7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF6 DUP2 PUSH2 0xCE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD05 DUP2 PUSH2 0x60B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD36 DUP3 PUSH2 0xD0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD46 DUP2 PUSH2 0xD2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xD61 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xCED JUMP JUMPDEST PUSH2 0xD6E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xCED JUMP JUMPDEST PUSH2 0xD7B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xCED JUMP JUMPDEST PUSH2 0xD88 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0xD95 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xD3D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD6 DUP3 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0xDE0 DUP2 DUP6 PUSH2 0xDBA JUMP JUMPDEST SWAP4 POP PUSH2 0xDF0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x708 JUMP JUMPDEST PUSH2 0xDF9 DUP2 PUSH2 0x64B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1E DUP2 DUP5 PUSH2 0xDCB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4D DUP3 MLOAD PUSH2 0xCE3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE61 DUP3 PUSH2 0xE26 JUMP JUMPDEST DUP3 PUSH2 0xE6B DUP5 PUSH2 0xE31 JUMP JUMPDEST SWAP1 POP PUSH2 0xE76 DUP2 PUSH2 0xE41 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0xEB6 JUMPI PUSH2 0xEB1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x88E JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC8 DUP3 PUSH2 0x60B JUMP JUMPDEST SWAP2 POP PUSH2 0xED3 DUP4 PUSH2 0x60B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEEB JUMPI PUSH2 0xEEA PUSH2 0xAE7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF06 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0xF13 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0xF20 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCFC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF3D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1CE3 PUSH2 0xF9D PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xB0A ADD MSTORE PUSH1 0x0 PUSH2 0xACF ADD MSTORE PUSH1 0x0 PUSH2 0x101F ADD MSTORE PUSH1 0x0 PUSH2 0xFFE ADD MSTORE PUSH1 0x0 PUSH2 0x9CA ADD MSTORE PUSH1 0x0 PUSH2 0xA20 ADD MSTORE PUSH1 0x0 PUSH2 0xA49 ADD MSTORE PUSH2 0x1CE3 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x245 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x1C7 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x409 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x185A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x19D8 JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x312 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33E SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x38B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x360 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x38B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3A0 PUSH2 0x823 JUMP JUMPDEST SWAP1 POP PUSH2 0x3AD DUP2 DUP6 DUP6 PUSH2 0x82B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3CD PUSH2 0x823 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DA DUP6 DUP3 DUP6 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x3E5 DUP6 DUP6 DUP6 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 PUSH2 0x9C6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x418 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x444 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x491 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x466 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x491 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x474 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EE DUP3 PUSH2 0xA7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x509 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x511 PUSH2 0xB01 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x532 JUMPI PUSH2 0x531 PUSH2 0x1A78 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x560 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5AE SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DA SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x627 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x627 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x60A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x63C PUSH2 0x823 JUMP JUMPDEST SWAP1 POP PUSH2 0x649 DUP2 DUP6 DUP6 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x699 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x690 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6C8 DUP13 PUSH2 0xB3C JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6DE SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x701 DUP3 PUSH2 0xB93 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x711 DUP3 DUP8 DUP8 DUP8 PUSH2 0xBAD JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x785 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77C SWAP3 SWAP2 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x790 DUP11 DUP11 DUP11 PUSH2 0x82B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x838 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBDD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x849 DUP5 DUP5 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x8CC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8BC JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CB DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xBDD JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x944 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93B SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9B6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AD SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C1 DUP4 DUP4 DUP4 PUSH2 0xDB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xA42 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xA6F JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xA7A JUMP JUMPDEST PUSH2 0xA77 PUSH2 0xFD9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAFC PUSH1 0x5 PUSH32 0x0 PUSH2 0x106F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB37 PUSH1 0x6 PUSH32 0x0 PUSH2 0x106F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA6 PUSH2 0xBA0 PUSH2 0x9C6 JUMP JUMPDEST DUP4 PUSH2 0x111F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xBBF DUP9 DUP9 DUP9 DUP9 PUSH2 0x1160 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xBCF DUP3 DUP3 PUSH2 0x1254 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC4F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC46 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCC1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDAE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDA5 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE06 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDFA SWAP2 SWAP1 PUSH2 0x1BB2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xED9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE92 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE89 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF22 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF6F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFCC SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1054 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x108C JUMPI PUSH2 0x1085 DUP4 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1119 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1098 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10C4 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1111 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1111 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x11A0 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x124A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x11C5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x123B JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x124A JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1268 JUMPI PUSH2 0x1267 PUSH2 0x1C7E JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x127B JUMPI PUSH2 0x127A PUSH2 0x1C7E JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x13B4 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1295 JUMPI PUSH2 0x1294 PUSH2 0x1C7E JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12A8 JUMPI PUSH2 0x12A7 PUSH2 0x1C7E JUMP JUMPDEST JUMPDEST SUB PUSH2 0x12DF JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12F3 JUMPI PUSH2 0x12F2 PUSH2 0x1C7E JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1306 JUMPI PUSH2 0x1305 PUSH2 0x1C7E JUMP JUMPDEST JUMPDEST SUB PUSH2 0x134B JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1342 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x135E JUMPI PUSH2 0x135D PUSH2 0x1C7E JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1371 JUMPI PUSH2 0x1370 PUSH2 0x1C7E JUMP JUMPDEST JUMPDEST SUB PUSH2 0x13B3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AA SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x13C5 DUP4 PUSH2 0x142C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E4 JUMPI PUSH2 0x13E3 PUSH2 0x1A78 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1416 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1473 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14B6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x149B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DE DUP3 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x14E8 DUP2 DUP6 PUSH2 0x1487 JUMP JUMPDEST SWAP4 POP PUSH2 0x14F8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1498 JUMP JUMPDEST PUSH2 0x1501 DUP2 PUSH2 0x14C2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1526 DUP2 DUP5 PUSH2 0x14D3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155E DUP3 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x156E DUP2 PUSH2 0x1553 JUMP JUMPDEST DUP2 EQ PUSH2 0x1579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x158B DUP2 PUSH2 0x1565 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A4 DUP2 PUSH2 0x1591 JUMP JUMPDEST DUP2 EQ PUSH2 0x15AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15C1 DUP2 PUSH2 0x159B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15DE JUMPI PUSH2 0x15DD PUSH2 0x152E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15EC DUP6 DUP3 DUP7 ADD PUSH2 0x157C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15FD DUP6 DUP3 DUP7 ADD PUSH2 0x15B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x1607 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1637 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1646 DUP2 PUSH2 0x1591 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1661 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x163D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1680 JUMPI PUSH2 0x167F PUSH2 0x152E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x168E DUP7 DUP3 DUP8 ADD PUSH2 0x157C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x169F DUP7 DUP3 DUP8 ADD PUSH2 0x157C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16B0 DUP7 DUP3 DUP8 ADD PUSH2 0x15B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D0 DUP2 PUSH2 0x16BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1704 DUP2 PUSH2 0x16F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x171F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173B JUMPI PUSH2 0x173A PUSH2 0x152E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1749 DUP5 DUP3 DUP6 ADD PUSH2 0x157C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1787 DUP2 PUSH2 0x1752 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1796 DUP2 PUSH2 0x1553 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17D1 DUP2 PUSH2 0x1591 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E3 DUP4 DUP4 PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1807 DUP3 PUSH2 0x179C JUMP JUMPDEST PUSH2 0x1811 DUP2 DUP6 PUSH2 0x17A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x181C DUP4 PUSH2 0x17B8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x184D JUMPI DUP2 MLOAD PUSH2 0x1834 DUP9 DUP3 PUSH2 0x17D7 JUMP JUMPDEST SWAP8 POP PUSH2 0x183F DUP4 PUSH2 0x17EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1820 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x186F PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x177E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1881 DUP2 DUP10 PUSH2 0x14D3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1895 DUP2 DUP9 PUSH2 0x14D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x18A4 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x18B1 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x18BE PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x16FB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x18D0 DUP2 DUP5 PUSH2 0x17FC JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18E7 DUP2 PUSH2 0x16BA JUMP JUMPDEST DUP2 EQ PUSH2 0x18F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1904 DUP2 PUSH2 0x18DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1913 DUP2 PUSH2 0x16F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x191E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1930 DUP2 PUSH2 0x190A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1955 JUMPI PUSH2 0x1954 PUSH2 0x152E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1963 DUP11 DUP3 DUP12 ADD PUSH2 0x157C JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1974 DUP11 DUP3 DUP12 ADD PUSH2 0x157C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1985 DUP11 DUP3 DUP12 ADD PUSH2 0x15B2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1996 DUP11 DUP3 DUP12 ADD PUSH2 0x15B2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x19A7 DUP11 DUP3 DUP12 ADD PUSH2 0x18F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x19B8 DUP11 DUP3 DUP12 ADD PUSH2 0x1921 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x19C9 DUP11 DUP3 DUP12 ADD PUSH2 0x1921 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19EF JUMPI PUSH2 0x19EE PUSH2 0x152E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19FD DUP6 DUP3 DUP7 ADD PUSH2 0x157C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A0E DUP6 DUP3 DUP7 ADD PUSH2 0x157C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A5F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A72 JUMPI PUSH2 0x1A71 PUSH2 0x1A18 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1ABC PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x1AC9 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x1AD6 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x1AE3 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x1AF0 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x1AFD PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x163D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B1D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x1B2A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x178D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B46 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x1B53 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x1B60 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x163D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B7D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x178D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BBD DUP3 PUSH2 0x1591 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC8 DUP4 PUSH2 0x1591 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BE0 JUMPI PUSH2 0x1BDF PUSH2 0x1B83 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1BFB PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x1C08 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x1C15 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x1C22 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x1C2F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x178D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1C4E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x1C5B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x1C68 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x1C75 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x16FB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE BYTE 0xC1 0xB9 0xE6 CALLDATASIZE DUP9 PUSH29 0x377F9268E22C862C80329411BB0905F38A3B78447AAEB31264736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"132:371:19:-:0;;;204:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1577:52:4;;;;;;;;;;;;;;;;;1616:4;3428:431:14;;;;;;;;;;;;;;;;;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;3501:45:14;3532:13;3501:4;:30;;;;:45;;;;:::i;:::-;3493:53;;;;;;3567:51;3601:16;3567:7;:33;;;;:51;;;;:::i;:::-;3556:62;;;;;;3658:4;3642:22;;;;;;3628:36;;;;;;3707:7;3691:25;;;;;;3674:42;;;;;;3744:13;3727:30;;;;;;3792:23;:21;;;:23;;:::i;:::-;3767:48;;;;;;3847:4;3825:27;;;;;;;;;;3428:431;;1577:52:4;332:8:19::2;321;:19;;;;;;:::i;:::-;;350:51;356:10;390;:8;;;:10;;:::i;:::-;384:2;:16;;;;:::i;:::-;368:13;:32;;;;:::i;:::-;350:5;;;:51;;:::i;:::-;204:204:::0;;132:371;;2887:340:10;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;;;:20;;:::i;:::-;3050:27;;;;3006:215;3149:5;3108:32;3134:5;3108:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3192:17;;3168:42;;2887:340;;;;;:::o;4213:179:14:-;4268:7;2079:95;4326:11;;4339:14;;4355:13;4378:4;4304:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;:::o;2688:82:2:-;2737:5;2761:2;2754:9;;2688:82;:::o;7362:208::-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;;;:35;;:::i;:::-;7362:208;;:::o;1708:286:10:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3468:175:11:-;3536:20;3617:10;3607:20;;3468:175;;;:::o;5912:1107:2:-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:75:21:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:117::-;803:1;800;793:12;817:117;926:1;923;916:12;940:102;981:6;1032:2;1028:7;1023:2;1016:5;1012:14;1008:28;998:38;;940:102;;;:::o;1048:180::-;1096:77;1093:1;1086:88;1193:4;1190:1;1183:15;1217:4;1214:1;1207:15;1234:281;1317:27;1339:4;1317:27;:::i;:::-;1309:6;1305:40;1447:6;1435:10;1432:22;1411:18;1399:10;1396:34;1393:62;1390:88;;;1458:18;;:::i;:::-;1390:88;1498:10;1494:2;1487:22;1277:238;1234:281;;:::o;1521:129::-;1555:6;1582:20;;:::i;:::-;1572:30;;1611:33;1639:4;1631:6;1611:33;:::i;:::-;1521:129;;;:::o;1656:308::-;1718:4;1808:18;1800:6;1797:30;1794:56;;;1830:18;;:::i;:::-;1794:56;1868:29;1890:6;1868:29;:::i;:::-;1860:37;;1952:4;1946;1942:15;1934:23;;1656:308;;;:::o;1970:248::-;2052:1;2062:113;2076:6;2073:1;2070:13;2062:113;;;2161:1;2156:3;2152:11;2146:18;2142:1;2137:3;2133:11;2126:39;2098:2;2095:1;2091:10;2086:15;;2062:113;;;2209:1;2200:6;2195:3;2191:16;2184:27;2032:186;1970:248;;;:::o;2224:434::-;2313:5;2338:66;2354:49;2396:6;2354:49;:::i;:::-;2338:66;:::i;:::-;2329:75;;2427:6;2420:5;2413:21;2465:4;2458:5;2454:16;2503:3;2494:6;2489:3;2485:16;2482:25;2479:112;;;2510:79;;:::i;:::-;2479:112;2600:52;2645:6;2640:3;2635;2600:52;:::i;:::-;2319:339;2224:434;;;;;:::o;2678:355::-;2745:5;2794:3;2787:4;2779:6;2775:17;2771:27;2761:122;;2802:79;;:::i;:::-;2761:122;2912:6;2906:13;2937:90;3023:3;3015:6;3008:4;3000:6;2996:17;2937:90;:::i;:::-;2928:99;;2751:282;2678:355;;;;:::o;3039:680::-;3128:6;3136;3185:2;3173:9;3164:7;3160:23;3156:32;3153:119;;;3191:79;;:::i;:::-;3153:119;3311:1;3336:64;3392:7;3383:6;3372:9;3368:22;3336:64;:::i;:::-;3326:74;;3282:128;3470:2;3459:9;3455:18;3449:25;3501:18;3493:6;3490:30;3487:117;;;3523:79;;:::i;:::-;3487:117;3628:74;3694:7;3685:6;3674:9;3670:22;3628:74;:::i;:::-;3618:84;;3420:292;3039:680;;;;;:::o;3725:99::-;3777:6;3811:5;3805:12;3795:22;;3725:99;;;:::o;3830:180::-;3878:77;3875:1;3868:88;3975:4;3972:1;3965:15;3999:4;3996:1;3989:15;4016:320;4060:6;4097:1;4091:4;4087:12;4077:22;;4144:1;4138:4;4134:12;4165:18;4155:81;;4221:4;4213:6;4209:17;4199:27;;4155:81;4283:2;4275:6;4272:14;4252:18;4249:38;4246:84;;4302:18;;:::i;:::-;4246:84;4067:269;4016:320;;;:::o;4342:141::-;4391:4;4414:3;4406:11;;4437:3;4434:1;4427:14;4471:4;4468:1;4458:18;4450:26;;4342:141;;;:::o;4489:93::-;4526:6;4573:2;4568;4561:5;4557:14;4553:23;4543:33;;4489:93;;;:::o;4588:107::-;4632:8;4682:5;4676:4;4672:16;4651:37;;4588:107;;;;:::o;4701:393::-;4770:6;4820:1;4808:10;4804:18;4843:97;4873:66;4862:9;4843:97;:::i;:::-;4961:39;4991:8;4980:9;4961:39;:::i;:::-;4949:51;;5033:4;5029:9;5022:5;5018:21;5009:30;;5082:4;5072:8;5068:19;5061:5;5058:30;5048:40;;4777:317;;4701:393;;;;;:::o;5100:60::-;5128:3;5149:5;5142:12;;5100:60;;;:::o;5166:142::-;5216:9;5249:53;5267:34;5276:24;5294:5;5276:24;:::i;:::-;5267:34;:::i;:::-;5249:53;:::i;:::-;5236:66;;5166:142;;;:::o;5314:75::-;5357:3;5378:5;5371:12;;5314:75;;;:::o;5395:269::-;5505:39;5536:7;5505:39;:::i;:::-;5566:91;5615:41;5639:16;5615:41;:::i;:::-;5607:6;5600:4;5594:11;5566:91;:::i;:::-;5560:4;5553:105;5471:193;5395:269;;;:::o;5670:73::-;5715:3;5670:73;:::o;5749:189::-;5826:32;;:::i;:::-;5867:65;5925:6;5917;5911:4;5867:65;:::i;:::-;5802:136;5749:189;;:::o;5944:186::-;6004:120;6021:3;6014:5;6011:14;6004:120;;;6075:39;6112:1;6105:5;6075:39;:::i;:::-;6048:1;6041:5;6037:13;6028:22;;6004:120;;;5944:186;;:::o;6136:543::-;6237:2;6232:3;6229:11;6226:446;;;6271:38;6303:5;6271:38;:::i;:::-;6355:29;6373:10;6355:29;:::i;:::-;6345:8;6341:44;6538:2;6526:10;6523:18;6520:49;;;6559:8;6544:23;;6520:49;6582:80;6638:22;6656:3;6638:22;:::i;:::-;6628:8;6624:37;6611:11;6582:80;:::i;:::-;6241:431;;6226:446;6136:543;;;:::o;6685:117::-;6739:8;6789:5;6783:4;6779:16;6758:37;;6685:117;;;;:::o;6808:169::-;6852:6;6885:51;6933:1;6929:6;6921:5;6918:1;6914:13;6885:51;:::i;:::-;6881:56;6966:4;6960;6956:15;6946:25;;6859:118;6808:169;;;;:::o;6982:295::-;7058:4;7204:29;7229:3;7223:4;7204:29;:::i;:::-;7196:37;;7266:3;7263:1;7259:11;7253:4;7250:21;7242:29;;6982:295;;;;:::o;7282:1395::-;7399:37;7432:3;7399:37;:::i;:::-;7501:18;7493:6;7490:30;7487:56;;;7523:18;;:::i;:::-;7487:56;7567:38;7599:4;7593:11;7567:38;:::i;:::-;7652:67;7712:6;7704;7698:4;7652:67;:::i;:::-;7746:1;7770:4;7757:17;;7802:2;7794:6;7791:14;7819:1;7814:618;;;;8476:1;8493:6;8490:77;;;8542:9;8537:3;8533:19;8527:26;8518:35;;8490:77;8593:67;8653:6;8646:5;8593:67;:::i;:::-;8587:4;8580:81;8449:222;7784:887;;7814:618;7866:4;7862:9;7854:6;7850:22;7900:37;7932:4;7900:37;:::i;:::-;7959:1;7973:208;7987:7;7984:1;7981:14;7973:208;;;8066:9;8061:3;8057:19;8051:26;8043:6;8036:42;8117:1;8109:6;8105:14;8095:24;;8164:2;8153:9;8149:18;8136:31;;8010:4;8007:1;8003:12;7998:17;;7973:208;;;8209:6;8200:7;8197:19;8194:179;;;8267:9;8262:3;8258:19;8252:26;8310:48;8352:4;8344:6;8340:17;8329:9;8310:48;:::i;:::-;8302:6;8295:64;8217:156;8194:179;8419:1;8415;8407:6;8403:14;8399:22;8393:4;8386:36;7821:611;;;7784:887;;7374:1303;;;7282:1395;;:::o;8683:180::-;8731:77;8728:1;8721:88;8828:4;8825:1;8818:15;8852:4;8849:1;8842:15;8869:102;8911:8;8958:5;8955:1;8951:13;8930:34;;8869:102;;;:::o;8977:848::-;9038:5;9045:4;9069:6;9060:15;;9093:5;9084:14;;9107:712;9128:1;9118:8;9115:15;9107:712;;;9223:4;9218:3;9214:14;9208:4;9205:24;9202:50;;;9232:18;;:::i;:::-;9202:50;9282:1;9272:8;9268:16;9265:451;;;9697:4;9690:5;9686:16;9677:25;;9265:451;9747:4;9741;9737:15;9729:23;;9777:32;9800:8;9777:32;:::i;:::-;9765:44;;9107:712;;;8977:848;;;;;;;:::o;9831:1073::-;9885:5;10076:8;10066:40;;10097:1;10088:10;;10099:5;;10066:40;10125:4;10115:36;;10142:1;10133:10;;10144:5;;10115:36;10211:4;10259:1;10254:27;;;;10295:1;10290:191;;;;10204:277;;10254:27;10272:1;10263:10;;10274:5;;;10290:191;10335:3;10325:8;10322:17;10319:43;;;10342:18;;:::i;:::-;10319:43;10391:8;10388:1;10384:16;10375:25;;10426:3;10419:5;10416:14;10413:40;;;10433:18;;:::i;:::-;10413:40;10466:5;;;10204:277;;10590:2;10580:8;10577:16;10571:3;10565:4;10562:13;10558:36;10540:2;10530:8;10527:16;10522:2;10516:4;10513:12;10509:35;10493:111;10490:246;;;10646:8;10640:4;10636:19;10627:28;;10681:3;10674:5;10671:14;10668:40;;;10688:18;;:::i;:::-;10668:40;10721:5;;10490:246;10761:42;10799:3;10789:8;10783:4;10780:1;10761:42;:::i;:::-;10746:57;;;;10835:4;10830:3;10826:14;10819:5;10816:25;10813:51;;;10844:18;;:::i;:::-;10813:51;10893:4;10886:5;10882:16;10873:25;;9831:1073;;;;;;:::o;10910:86::-;10945:7;10985:4;10978:5;10974:16;10963:27;;10910:86;;;:::o;11002:281::-;11060:5;11084:23;11102:4;11084:23;:::i;:::-;11076:31;;11128:25;11144:8;11128:25;:::i;:::-;11116:37;;11172:104;11209:66;11199:8;11193:4;11172:104;:::i;:::-;11163:113;;11002:281;;;;:::o;11289:410::-;11329:7;11352:20;11370:1;11352:20;:::i;:::-;11347:25;;11386:20;11404:1;11386:20;:::i;:::-;11381:25;;11441:1;11438;11434:9;11463:30;11481:11;11463:30;:::i;:::-;11452:41;;11642:1;11633:7;11629:15;11626:1;11623:22;11603:1;11596:9;11576:83;11553:139;;11672:18;;:::i;:::-;11553:139;11337:362;11289:410;;;;:::o;11705:77::-;11742:7;11771:5;11760:16;;11705:77;;;:::o;11788:118::-;11875:24;11893:5;11875:24;:::i;:::-;11870:3;11863:37;11788:118;;:::o;11912:::-;11999:24;12017:5;11999:24;:::i;:::-;11994:3;11987:37;11912:118;;:::o;12036:126::-;12073:7;12113:42;12106:5;12102:54;12091:65;;12036:126;;;:::o;12168:96::-;12205:7;12234:24;12252:5;12234:24;:::i;:::-;12223:35;;12168:96;;;:::o;12270:118::-;12357:24;12375:5;12357:24;:::i;:::-;12352:3;12345:37;12270:118;;:::o;12394:664::-;12599:4;12637:3;12626:9;12622:19;12614:27;;12651:71;12719:1;12708:9;12704:17;12695:6;12651:71;:::i;:::-;12732:72;12800:2;12789:9;12785:18;12776:6;12732:72;:::i;:::-;12814;12882:2;12871:9;12867:18;12858:6;12814:72;:::i;:::-;12896;12964:2;12953:9;12949:18;12940:6;12896:72;:::i;:::-;12978:73;13046:3;13035:9;13031:19;13022:6;12978:73;:::i;:::-;12394:664;;;;;;;;:::o;13064:222::-;13157:4;13195:2;13184:9;13180:18;13172:26;;13208:71;13276:1;13265:9;13261:17;13252:6;13208:71;:::i;:::-;13064:222;;;;:::o;13292:169::-;13376:11;13410:6;13405:3;13398:19;13450:4;13445:3;13441:14;13426:29;;13292:169;;;;:::o;13467:377::-;13555:3;13583:39;13616:5;13583:39;:::i;:::-;13638:71;13702:6;13697:3;13638:71;:::i;:::-;13631:78;;13718:65;13776:6;13771:3;13764:4;13757:5;13753:16;13718:65;:::i;:::-;13808:29;13830:6;13808:29;:::i;:::-;13803:3;13799:39;13792:46;;13559:285;13467:377;;;;:::o;13850:313::-;13963:4;14001:2;13990:9;13986:18;13978:26;;14050:9;14044:4;14040:20;14036:1;14025:9;14021:17;14014:47;14078:78;14151:4;14142:6;14078:78;:::i;:::-;14070:86;;13850:313;;;;:::o;14169:98::-;14220:6;14254:5;14248:12;14238:22;;14169:98;;;:::o;14273:116::-;14324:4;14347:3;14339:11;;14377:4;14372:3;14368:14;14360:22;;14273:116;;;:::o;14395:154::-;14438:11;14474:29;14498:3;14492:10;14474:29;:::i;:::-;14537:5;14513:29;;14450:99;14395:154;;;:::o;14555:594::-;14639:5;14670:38;14702:5;14670:38;:::i;:::-;14733:5;14760:40;14794:5;14760:40;:::i;:::-;14748:52;;14819:35;14845:8;14819:35;:::i;:::-;14810:44;;14878:2;14870:6;14867:14;14864:278;;;14949:169;15034:66;15004:6;15000:2;14996:15;14993:1;14989:23;14949:169;:::i;:::-;14926:5;14905:227;14896:236;;14864:278;14645:504;;14555:594;;;:::o;15155:191::-;15195:3;15214:20;15232:1;15214:20;:::i;:::-;15209:25;;15248:20;15266:1;15248:20;:::i;:::-;15243:25;;15291:1;15288;15284:9;15277:16;;15312:3;15309:1;15306:10;15303:36;;;15319:18;;:::i;:::-;15303:36;15155:191;;;;:::o;15352:442::-;15501:4;15539:2;15528:9;15524:18;15516:26;;15552:71;15620:1;15609:9;15605:17;15596:6;15552:71;:::i;:::-;15633:72;15701:2;15690:9;15686:18;15677:6;15633:72;:::i;:::-;15715;15783:2;15772:9;15768:18;15759:6;15715:72;:::i;:::-;15352:442;;;;;;:::o;15800:222::-;15893:4;15931:2;15920:9;15916:18;15908:26;;15944:71;16012:1;16001:9;15997:17;15988:6;15944:71;:::i;:::-;15800:222;;;;:::o;132:371:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_907":{"entryPoint":1018,"id":907,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_3425":{"entryPoint":2758,"id":3425,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3437":{"entryPoint":2817,"id":3437,"parameterSlots":0,"returnSlots":1},"@_approve_567":{"entryPoint":2091,"id":567,"parameterSlots":3,"returnSlots":0},"@_approve_627":{"entryPoint":3037,"id":627,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3355":{"entryPoint":4057,"id":3355,"parameterSlots":0,"returnSlots":1},"@_domainSeparatorV4_3334":{"entryPoint":2502,"id":3334,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3371":{"entryPoint":2963,"id":3371,"parameterSlots":1,"returnSlots":1},"@_msgSender_982":{"entryPoint":2083,"id":982,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_675":{"entryPoint":2109,"id":675,"parameterSlots":3,"returnSlots":0},"@_throwError_3210":{"entryPoint":4692,"id":3210,"parameterSlots":2,"returnSlots":0},"@_transfer_406":{"entryPoint":2258,"id":406,"parameterSlots":3,"returnSlots":0},"@_update_483":{"entryPoint":3508,"id":483,"parameterSlots":3,"returnSlots":0},"@_useNonce_1042":{"entryPoint":2876,"id":1042,"parameterSlots":1,"returnSlots":1},"@allowance_303":{"entryPoint":1948,"id":303,"parameterSlots":2,"returnSlots":1},"@approve_327":{"entryPoint":917,"id":327,"parameterSlots":2,"returnSlots":1},"@balanceOf_262":{"entryPoint":1179,"id":262,"parameterSlots":1,"returnSlots":1},"@byteLength_1238":{"entryPoint":5164,"id":1238,"parameterSlots":1,"returnSlots":1},"@decimals_240":{"entryPoint":1009,"id":240,"parameterSlots":0,"returnSlots":1},"@eip712Domain_3413":{"entryPoint":1269,"id":3413,"parameterSlots":0,"returnSlots":7},"@name_222":{"entryPoint":771,"id":222,"parameterSlots":0,"returnSlots":1},"@nonces_1027":{"entryPoint":2685,"id":1027,"parameterSlots":1,"returnSlots":1},"@nonces_897":{"entryPoint":1251,"id":897,"parameterSlots":1,"returnSlots":1},"@permit_880":{"entryPoint":1620,"id":880,"parameterSlots":7,"returnSlots":0},"@recover_3161":{"entryPoint":2989,"id":3161,"parameterSlots":4,"returnSlots":1},"@symbol_231":{"entryPoint":1439,"id":231,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_1305":{"entryPoint":4207,"id":1305,"parameterSlots":2,"returnSlots":1},"@toString_1206":{"entryPoint":5048,"id":1206,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3523":{"entryPoint":4383,"id":3523,"parameterSlots":2,"returnSlots":1},"@totalSupply_249":{"entryPoint":952,"id":249,"parameterSlots":0,"returnSlots":1},"@transferFrom_359":{"entryPoint":962,"id":359,"parameterSlots":3,"returnSlots":1},"@transfer_286":{"entryPoint":1585,"id":286,"parameterSlots":2,"returnSlots":1},"@tryRecover_3125":{"entryPoint":4448,"id":3125,"parameterSlots":4,"returnSlots":3},"@version_7099":{"entryPoint":1033,"id":7099,"parameterSlots":0,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5500,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":6433,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":6389,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5925,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6616,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5735,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":6454,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5575,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":6103,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6029,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6140,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5651,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":6014,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":5883,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5331,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":6088,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5693,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":5831,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7016,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":6920,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6961,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5666,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6234,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":5898,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6823,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":7142,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":7225,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5388,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5708,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":5846,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6072,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6044,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5244,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6127,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6055,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5255,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7090,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5459,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5639,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":5970,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5873,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5427,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5521,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":5818,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":5272,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6727,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7043,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":7294,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6680,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6776,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5422,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5314,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":5477,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":6410,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5531,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":6366,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:15383:21","nodeType":"YulBlock","src":"0:15383:21","statements":[{"body":{"nativeSrc":"66:40:21","nodeType":"YulBlock","src":"66:40:21","statements":[{"nativeSrc":"77:22:21","nodeType":"YulAssignment","src":"77:22:21","value":{"arguments":[{"name":"value","nativeSrc":"93:5:21","nodeType":"YulIdentifier","src":"93:5:21"}],"functionName":{"name":"mload","nativeSrc":"87:5:21","nodeType":"YulIdentifier","src":"87:5:21"},"nativeSrc":"87:12:21","nodeType":"YulFunctionCall","src":"87:12:21"},"variableNames":[{"name":"length","nativeSrc":"77:6:21","nodeType":"YulIdentifier","src":"77:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:21","nodeType":"YulTypedName","src":"49:5:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:21","nodeType":"YulTypedName","src":"59:6:21","type":""}],"src":"7:99:21"},{"body":{"nativeSrc":"208:73:21","nodeType":"YulBlock","src":"208:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:21","nodeType":"YulIdentifier","src":"225:3:21"},{"name":"length","nativeSrc":"230:6:21","nodeType":"YulIdentifier","src":"230:6:21"}],"functionName":{"name":"mstore","nativeSrc":"218:6:21","nodeType":"YulIdentifier","src":"218:6:21"},"nativeSrc":"218:19:21","nodeType":"YulFunctionCall","src":"218:19:21"},"nativeSrc":"218:19:21","nodeType":"YulExpressionStatement","src":"218:19:21"},{"nativeSrc":"246:29:21","nodeType":"YulAssignment","src":"246:29:21","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:21","nodeType":"YulIdentifier","src":"265:3:21"},{"kind":"number","nativeSrc":"270:4:21","nodeType":"YulLiteral","src":"270:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:21","nodeType":"YulIdentifier","src":"261:3:21"},"nativeSrc":"261:14:21","nodeType":"YulFunctionCall","src":"261:14:21"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:21","nodeType":"YulIdentifier","src":"246:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:21","nodeType":"YulTypedName","src":"180:3:21","type":""},{"name":"length","nativeSrc":"185:6:21","nodeType":"YulTypedName","src":"185:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:21","nodeType":"YulTypedName","src":"196:11:21","type":""}],"src":"112:169:21"},{"body":{"nativeSrc":"349:186:21","nodeType":"YulBlock","src":"349:186:21","statements":[{"nativeSrc":"360:10:21","nodeType":"YulVariableDeclaration","src":"360:10:21","value":{"kind":"number","nativeSrc":"369:1:21","nodeType":"YulLiteral","src":"369:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"364:1:21","nodeType":"YulTypedName","src":"364:1:21","type":""}]},{"body":{"nativeSrc":"429:63:21","nodeType":"YulBlock","src":"429:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"454:3:21","nodeType":"YulIdentifier","src":"454:3:21"},{"name":"i","nativeSrc":"459:1:21","nodeType":"YulIdentifier","src":"459:1:21"}],"functionName":{"name":"add","nativeSrc":"450:3:21","nodeType":"YulIdentifier","src":"450:3:21"},"nativeSrc":"450:11:21","nodeType":"YulFunctionCall","src":"450:11:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"473:3:21","nodeType":"YulIdentifier","src":"473:3:21"},{"name":"i","nativeSrc":"478:1:21","nodeType":"YulIdentifier","src":"478:1:21"}],"functionName":{"name":"add","nativeSrc":"469:3:21","nodeType":"YulIdentifier","src":"469:3:21"},"nativeSrc":"469:11:21","nodeType":"YulFunctionCall","src":"469:11:21"}],"functionName":{"name":"mload","nativeSrc":"463:5:21","nodeType":"YulIdentifier","src":"463:5:21"},"nativeSrc":"463:18:21","nodeType":"YulFunctionCall","src":"463:18:21"}],"functionName":{"name":"mstore","nativeSrc":"443:6:21","nodeType":"YulIdentifier","src":"443:6:21"},"nativeSrc":"443:39:21","nodeType":"YulFunctionCall","src":"443:39:21"},"nativeSrc":"443:39:21","nodeType":"YulExpressionStatement","src":"443:39:21"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"390:1:21","nodeType":"YulIdentifier","src":"390:1:21"},{"name":"length","nativeSrc":"393:6:21","nodeType":"YulIdentifier","src":"393:6:21"}],"functionName":{"name":"lt","nativeSrc":"387:2:21","nodeType":"YulIdentifier","src":"387:2:21"},"nativeSrc":"387:13:21","nodeType":"YulFunctionCall","src":"387:13:21"},"nativeSrc":"379:113:21","nodeType":"YulForLoop","post":{"nativeSrc":"401:19:21","nodeType":"YulBlock","src":"401:19:21","statements":[{"nativeSrc":"403:15:21","nodeType":"YulAssignment","src":"403:15:21","value":{"arguments":[{"name":"i","nativeSrc":"412:1:21","nodeType":"YulIdentifier","src":"412:1:21"},{"kind":"number","nativeSrc":"415:2:21","nodeType":"YulLiteral","src":"415:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"408:3:21","nodeType":"YulIdentifier","src":"408:3:21"},"nativeSrc":"408:10:21","nodeType":"YulFunctionCall","src":"408:10:21"},"variableNames":[{"name":"i","nativeSrc":"403:1:21","nodeType":"YulIdentifier","src":"403:1:21"}]}]},"pre":{"nativeSrc":"383:3:21","nodeType":"YulBlock","src":"383:3:21","statements":[]},"src":"379:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"512:3:21","nodeType":"YulIdentifier","src":"512:3:21"},{"name":"length","nativeSrc":"517:6:21","nodeType":"YulIdentifier","src":"517:6:21"}],"functionName":{"name":"add","nativeSrc":"508:3:21","nodeType":"YulIdentifier","src":"508:3:21"},"nativeSrc":"508:16:21","nodeType":"YulFunctionCall","src":"508:16:21"},{"kind":"number","nativeSrc":"526:1:21","nodeType":"YulLiteral","src":"526:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"501:6:21","nodeType":"YulIdentifier","src":"501:6:21"},"nativeSrc":"501:27:21","nodeType":"YulFunctionCall","src":"501:27:21"},"nativeSrc":"501:27:21","nodeType":"YulExpressionStatement","src":"501:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:248:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:21","nodeType":"YulTypedName","src":"331:3:21","type":""},{"name":"dst","nativeSrc":"336:3:21","nodeType":"YulTypedName","src":"336:3:21","type":""},{"name":"length","nativeSrc":"341:6:21","nodeType":"YulTypedName","src":"341:6:21","type":""}],"src":"287:248:21"},{"body":{"nativeSrc":"589:54:21","nodeType":"YulBlock","src":"589:54:21","statements":[{"nativeSrc":"599:38:21","nodeType":"YulAssignment","src":"599:38:21","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"617:5:21","nodeType":"YulIdentifier","src":"617:5:21"},{"kind":"number","nativeSrc":"624:2:21","nodeType":"YulLiteral","src":"624:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"613:3:21","nodeType":"YulIdentifier","src":"613:3:21"},"nativeSrc":"613:14:21","nodeType":"YulFunctionCall","src":"613:14:21"},{"arguments":[{"kind":"number","nativeSrc":"633:2:21","nodeType":"YulLiteral","src":"633:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"629:3:21","nodeType":"YulIdentifier","src":"629:3:21"},"nativeSrc":"629:7:21","nodeType":"YulFunctionCall","src":"629:7:21"}],"functionName":{"name":"and","nativeSrc":"609:3:21","nodeType":"YulIdentifier","src":"609:3:21"},"nativeSrc":"609:28:21","nodeType":"YulFunctionCall","src":"609:28:21"},"variableNames":[{"name":"result","nativeSrc":"599:6:21","nodeType":"YulIdentifier","src":"599:6:21"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"541:102:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"572:5:21","nodeType":"YulTypedName","src":"572:5:21","type":""}],"returnVariables":[{"name":"result","nativeSrc":"582:6:21","nodeType":"YulTypedName","src":"582:6:21","type":""}],"src":"541:102:21"},{"body":{"nativeSrc":"741:285:21","nodeType":"YulBlock","src":"741:285:21","statements":[{"nativeSrc":"751:53:21","nodeType":"YulVariableDeclaration","src":"751:53:21","value":{"arguments":[{"name":"value","nativeSrc":"798:5:21","nodeType":"YulIdentifier","src":"798:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"765:32:21","nodeType":"YulIdentifier","src":"765:32:21"},"nativeSrc":"765:39:21","nodeType":"YulFunctionCall","src":"765:39:21"},"variables":[{"name":"length","nativeSrc":"755:6:21","nodeType":"YulTypedName","src":"755:6:21","type":""}]},{"nativeSrc":"813:78:21","nodeType":"YulAssignment","src":"813:78:21","value":{"arguments":[{"name":"pos","nativeSrc":"879:3:21","nodeType":"YulIdentifier","src":"879:3:21"},{"name":"length","nativeSrc":"884:6:21","nodeType":"YulIdentifier","src":"884:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"820:58:21","nodeType":"YulIdentifier","src":"820:58:21"},"nativeSrc":"820:71:21","nodeType":"YulFunctionCall","src":"820:71:21"},"variableNames":[{"name":"pos","nativeSrc":"813:3:21","nodeType":"YulIdentifier","src":"813:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"939:5:21","nodeType":"YulIdentifier","src":"939:5:21"},{"kind":"number","nativeSrc":"946:4:21","nodeType":"YulLiteral","src":"946:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"935:3:21","nodeType":"YulIdentifier","src":"935:3:21"},"nativeSrc":"935:16:21","nodeType":"YulFunctionCall","src":"935:16:21"},{"name":"pos","nativeSrc":"953:3:21","nodeType":"YulIdentifier","src":"953:3:21"},{"name":"length","nativeSrc":"958:6:21","nodeType":"YulIdentifier","src":"958:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"900:34:21","nodeType":"YulIdentifier","src":"900:34:21"},"nativeSrc":"900:65:21","nodeType":"YulFunctionCall","src":"900:65:21"},"nativeSrc":"900:65:21","nodeType":"YulExpressionStatement","src":"900:65:21"},{"nativeSrc":"974:46:21","nodeType":"YulAssignment","src":"974:46:21","value":{"arguments":[{"name":"pos","nativeSrc":"985:3:21","nodeType":"YulIdentifier","src":"985:3:21"},{"arguments":[{"name":"length","nativeSrc":"1012:6:21","nodeType":"YulIdentifier","src":"1012:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"990:21:21","nodeType":"YulIdentifier","src":"990:21:21"},"nativeSrc":"990:29:21","nodeType":"YulFunctionCall","src":"990:29:21"}],"functionName":{"name":"add","nativeSrc":"981:3:21","nodeType":"YulIdentifier","src":"981:3:21"},"nativeSrc":"981:39:21","nodeType":"YulFunctionCall","src":"981:39:21"},"variableNames":[{"name":"end","nativeSrc":"974:3:21","nodeType":"YulIdentifier","src":"974:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"649:377:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"722:5:21","nodeType":"YulTypedName","src":"722:5:21","type":""},{"name":"pos","nativeSrc":"729:3:21","nodeType":"YulTypedName","src":"729:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"737:3:21","nodeType":"YulTypedName","src":"737:3:21","type":""}],"src":"649:377:21"},{"body":{"nativeSrc":"1150:195:21","nodeType":"YulBlock","src":"1150:195:21","statements":[{"nativeSrc":"1160:26:21","nodeType":"YulAssignment","src":"1160:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1172:9:21","nodeType":"YulIdentifier","src":"1172:9:21"},{"kind":"number","nativeSrc":"1183:2:21","nodeType":"YulLiteral","src":"1183:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1168:3:21","nodeType":"YulIdentifier","src":"1168:3:21"},"nativeSrc":"1168:18:21","nodeType":"YulFunctionCall","src":"1168:18:21"},"variableNames":[{"name":"tail","nativeSrc":"1160:4:21","nodeType":"YulIdentifier","src":"1160:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1207:9:21","nodeType":"YulIdentifier","src":"1207:9:21"},{"kind":"number","nativeSrc":"1218:1:21","nodeType":"YulLiteral","src":"1218:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1203:3:21","nodeType":"YulIdentifier","src":"1203:3:21"},"nativeSrc":"1203:17:21","nodeType":"YulFunctionCall","src":"1203:17:21"},{"arguments":[{"name":"tail","nativeSrc":"1226:4:21","nodeType":"YulIdentifier","src":"1226:4:21"},{"name":"headStart","nativeSrc":"1232:9:21","nodeType":"YulIdentifier","src":"1232:9:21"}],"functionName":{"name":"sub","nativeSrc":"1222:3:21","nodeType":"YulIdentifier","src":"1222:3:21"},"nativeSrc":"1222:20:21","nodeType":"YulFunctionCall","src":"1222:20:21"}],"functionName":{"name":"mstore","nativeSrc":"1196:6:21","nodeType":"YulIdentifier","src":"1196:6:21"},"nativeSrc":"1196:47:21","nodeType":"YulFunctionCall","src":"1196:47:21"},"nativeSrc":"1196:47:21","nodeType":"YulExpressionStatement","src":"1196:47:21"},{"nativeSrc":"1252:86:21","nodeType":"YulAssignment","src":"1252:86:21","value":{"arguments":[{"name":"value0","nativeSrc":"1324:6:21","nodeType":"YulIdentifier","src":"1324:6:21"},{"name":"tail","nativeSrc":"1333:4:21","nodeType":"YulIdentifier","src":"1333:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1260:63:21","nodeType":"YulIdentifier","src":"1260:63:21"},"nativeSrc":"1260:78:21","nodeType":"YulFunctionCall","src":"1260:78:21"},"variableNames":[{"name":"tail","nativeSrc":"1252:4:21","nodeType":"YulIdentifier","src":"1252:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1032:313:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1122:9:21","nodeType":"YulTypedName","src":"1122:9:21","type":""},{"name":"value0","nativeSrc":"1134:6:21","nodeType":"YulTypedName","src":"1134:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1145:4:21","nodeType":"YulTypedName","src":"1145:4:21","type":""}],"src":"1032:313:21"},{"body":{"nativeSrc":"1391:35:21","nodeType":"YulBlock","src":"1391:35:21","statements":[{"nativeSrc":"1401:19:21","nodeType":"YulAssignment","src":"1401:19:21","value":{"arguments":[{"kind":"number","nativeSrc":"1417:2:21","nodeType":"YulLiteral","src":"1417:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1411:5:21","nodeType":"YulIdentifier","src":"1411:5:21"},"nativeSrc":"1411:9:21","nodeType":"YulFunctionCall","src":"1411:9:21"},"variableNames":[{"name":"memPtr","nativeSrc":"1401:6:21","nodeType":"YulIdentifier","src":"1401:6:21"}]}]},"name":"allocate_unbounded","nativeSrc":"1351:75:21","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1384:6:21","nodeType":"YulTypedName","src":"1384:6:21","type":""}],"src":"1351:75:21"},{"body":{"nativeSrc":"1521:28:21","nodeType":"YulBlock","src":"1521:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:21","nodeType":"YulLiteral","src":"1538:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:1:21","nodeType":"YulLiteral","src":"1541:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1531:6:21","nodeType":"YulIdentifier","src":"1531:6:21"},"nativeSrc":"1531:12:21","nodeType":"YulFunctionCall","src":"1531:12:21"},"nativeSrc":"1531:12:21","nodeType":"YulExpressionStatement","src":"1531:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1432:117:21","nodeType":"YulFunctionDefinition","src":"1432:117:21"},{"body":{"nativeSrc":"1644:28:21","nodeType":"YulBlock","src":"1644:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1661:1:21","nodeType":"YulLiteral","src":"1661:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1664:1:21","nodeType":"YulLiteral","src":"1664:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1654:6:21","nodeType":"YulIdentifier","src":"1654:6:21"},"nativeSrc":"1654:12:21","nodeType":"YulFunctionCall","src":"1654:12:21"},"nativeSrc":"1654:12:21","nodeType":"YulExpressionStatement","src":"1654:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1555:117:21","nodeType":"YulFunctionDefinition","src":"1555:117:21"},{"body":{"nativeSrc":"1723:81:21","nodeType":"YulBlock","src":"1723:81:21","statements":[{"nativeSrc":"1733:65:21","nodeType":"YulAssignment","src":"1733:65:21","value":{"arguments":[{"name":"value","nativeSrc":"1748:5:21","nodeType":"YulIdentifier","src":"1748:5:21"},{"kind":"number","nativeSrc":"1755:42:21","nodeType":"YulLiteral","src":"1755:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1744:3:21","nodeType":"YulIdentifier","src":"1744:3:21"},"nativeSrc":"1744:54:21","nodeType":"YulFunctionCall","src":"1744:54:21"},"variableNames":[{"name":"cleaned","nativeSrc":"1733:7:21","nodeType":"YulIdentifier","src":"1733:7:21"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1678:126:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1705:5:21","nodeType":"YulTypedName","src":"1705:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1715:7:21","nodeType":"YulTypedName","src":"1715:7:21","type":""}],"src":"1678:126:21"},{"body":{"nativeSrc":"1855:51:21","nodeType":"YulBlock","src":"1855:51:21","statements":[{"nativeSrc":"1865:35:21","nodeType":"YulAssignment","src":"1865:35:21","value":{"arguments":[{"name":"value","nativeSrc":"1894:5:21","nodeType":"YulIdentifier","src":"1894:5:21"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1876:17:21","nodeType":"YulIdentifier","src":"1876:17:21"},"nativeSrc":"1876:24:21","nodeType":"YulFunctionCall","src":"1876:24:21"},"variableNames":[{"name":"cleaned","nativeSrc":"1865:7:21","nodeType":"YulIdentifier","src":"1865:7:21"}]}]},"name":"cleanup_t_address","nativeSrc":"1810:96:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1837:5:21","nodeType":"YulTypedName","src":"1837:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1847:7:21","nodeType":"YulTypedName","src":"1847:7:21","type":""}],"src":"1810:96:21"},{"body":{"nativeSrc":"1955:79:21","nodeType":"YulBlock","src":"1955:79:21","statements":[{"body":{"nativeSrc":"2012:16:21","nodeType":"YulBlock","src":"2012:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2021:1:21","nodeType":"YulLiteral","src":"2021:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2024:1:21","nodeType":"YulLiteral","src":"2024:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2014:6:21","nodeType":"YulIdentifier","src":"2014:6:21"},"nativeSrc":"2014:12:21","nodeType":"YulFunctionCall","src":"2014:12:21"},"nativeSrc":"2014:12:21","nodeType":"YulExpressionStatement","src":"2014:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1978:5:21","nodeType":"YulIdentifier","src":"1978:5:21"},{"arguments":[{"name":"value","nativeSrc":"2003:5:21","nodeType":"YulIdentifier","src":"2003:5:21"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1985:17:21","nodeType":"YulIdentifier","src":"1985:17:21"},"nativeSrc":"1985:24:21","nodeType":"YulFunctionCall","src":"1985:24:21"}],"functionName":{"name":"eq","nativeSrc":"1975:2:21","nodeType":"YulIdentifier","src":"1975:2:21"},"nativeSrc":"1975:35:21","nodeType":"YulFunctionCall","src":"1975:35:21"}],"functionName":{"name":"iszero","nativeSrc":"1968:6:21","nodeType":"YulIdentifier","src":"1968:6:21"},"nativeSrc":"1968:43:21","nodeType":"YulFunctionCall","src":"1968:43:21"},"nativeSrc":"1965:63:21","nodeType":"YulIf","src":"1965:63:21"}]},"name":"validator_revert_t_address","nativeSrc":"1912:122:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1948:5:21","nodeType":"YulTypedName","src":"1948:5:21","type":""}],"src":"1912:122:21"},{"body":{"nativeSrc":"2092:87:21","nodeType":"YulBlock","src":"2092:87:21","statements":[{"nativeSrc":"2102:29:21","nodeType":"YulAssignment","src":"2102:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"2124:6:21","nodeType":"YulIdentifier","src":"2124:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"2111:12:21","nodeType":"YulIdentifier","src":"2111:12:21"},"nativeSrc":"2111:20:21","nodeType":"YulFunctionCall","src":"2111:20:21"},"variableNames":[{"name":"value","nativeSrc":"2102:5:21","nodeType":"YulIdentifier","src":"2102:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2167:5:21","nodeType":"YulIdentifier","src":"2167:5:21"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2140:26:21","nodeType":"YulIdentifier","src":"2140:26:21"},"nativeSrc":"2140:33:21","nodeType":"YulFunctionCall","src":"2140:33:21"},"nativeSrc":"2140:33:21","nodeType":"YulExpressionStatement","src":"2140:33:21"}]},"name":"abi_decode_t_address","nativeSrc":"2040:139:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2070:6:21","nodeType":"YulTypedName","src":"2070:6:21","type":""},{"name":"end","nativeSrc":"2078:3:21","nodeType":"YulTypedName","src":"2078:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2086:5:21","nodeType":"YulTypedName","src":"2086:5:21","type":""}],"src":"2040:139:21"},{"body":{"nativeSrc":"2230:32:21","nodeType":"YulBlock","src":"2230:32:21","statements":[{"nativeSrc":"2240:16:21","nodeType":"YulAssignment","src":"2240:16:21","value":{"name":"value","nativeSrc":"2251:5:21","nodeType":"YulIdentifier","src":"2251:5:21"},"variableNames":[{"name":"cleaned","nativeSrc":"2240:7:21","nodeType":"YulIdentifier","src":"2240:7:21"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2185:77:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2212:5:21","nodeType":"YulTypedName","src":"2212:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2222:7:21","nodeType":"YulTypedName","src":"2222:7:21","type":""}],"src":"2185:77:21"},{"body":{"nativeSrc":"2311:79:21","nodeType":"YulBlock","src":"2311:79:21","statements":[{"body":{"nativeSrc":"2368:16:21","nodeType":"YulBlock","src":"2368:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2377:1:21","nodeType":"YulLiteral","src":"2377:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2380:1:21","nodeType":"YulLiteral","src":"2380:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2370:6:21","nodeType":"YulIdentifier","src":"2370:6:21"},"nativeSrc":"2370:12:21","nodeType":"YulFunctionCall","src":"2370:12:21"},"nativeSrc":"2370:12:21","nodeType":"YulExpressionStatement","src":"2370:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2334:5:21","nodeType":"YulIdentifier","src":"2334:5:21"},{"arguments":[{"name":"value","nativeSrc":"2359:5:21","nodeType":"YulIdentifier","src":"2359:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2341:17:21","nodeType":"YulIdentifier","src":"2341:17:21"},"nativeSrc":"2341:24:21","nodeType":"YulFunctionCall","src":"2341:24:21"}],"functionName":{"name":"eq","nativeSrc":"2331:2:21","nodeType":"YulIdentifier","src":"2331:2:21"},"nativeSrc":"2331:35:21","nodeType":"YulFunctionCall","src":"2331:35:21"}],"functionName":{"name":"iszero","nativeSrc":"2324:6:21","nodeType":"YulIdentifier","src":"2324:6:21"},"nativeSrc":"2324:43:21","nodeType":"YulFunctionCall","src":"2324:43:21"},"nativeSrc":"2321:63:21","nodeType":"YulIf","src":"2321:63:21"}]},"name":"validator_revert_t_uint256","nativeSrc":"2268:122:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2304:5:21","nodeType":"YulTypedName","src":"2304:5:21","type":""}],"src":"2268:122:21"},{"body":{"nativeSrc":"2448:87:21","nodeType":"YulBlock","src":"2448:87:21","statements":[{"nativeSrc":"2458:29:21","nodeType":"YulAssignment","src":"2458:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"2480:6:21","nodeType":"YulIdentifier","src":"2480:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"2467:12:21","nodeType":"YulIdentifier","src":"2467:12:21"},"nativeSrc":"2467:20:21","nodeType":"YulFunctionCall","src":"2467:20:21"},"variableNames":[{"name":"value","nativeSrc":"2458:5:21","nodeType":"YulIdentifier","src":"2458:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2523:5:21","nodeType":"YulIdentifier","src":"2523:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2496:26:21","nodeType":"YulIdentifier","src":"2496:26:21"},"nativeSrc":"2496:33:21","nodeType":"YulFunctionCall","src":"2496:33:21"},"nativeSrc":"2496:33:21","nodeType":"YulExpressionStatement","src":"2496:33:21"}]},"name":"abi_decode_t_uint256","nativeSrc":"2396:139:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2426:6:21","nodeType":"YulTypedName","src":"2426:6:21","type":""},{"name":"end","nativeSrc":"2434:3:21","nodeType":"YulTypedName","src":"2434:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2442:5:21","nodeType":"YulTypedName","src":"2442:5:21","type":""}],"src":"2396:139:21"},{"body":{"nativeSrc":"2624:391:21","nodeType":"YulBlock","src":"2624:391:21","statements":[{"body":{"nativeSrc":"2670:83:21","nodeType":"YulBlock","src":"2670:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2672:77:21","nodeType":"YulIdentifier","src":"2672:77:21"},"nativeSrc":"2672:79:21","nodeType":"YulFunctionCall","src":"2672:79:21"},"nativeSrc":"2672:79:21","nodeType":"YulExpressionStatement","src":"2672:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2645:7:21","nodeType":"YulIdentifier","src":"2645:7:21"},{"name":"headStart","nativeSrc":"2654:9:21","nodeType":"YulIdentifier","src":"2654:9:21"}],"functionName":{"name":"sub","nativeSrc":"2641:3:21","nodeType":"YulIdentifier","src":"2641:3:21"},"nativeSrc":"2641:23:21","nodeType":"YulFunctionCall","src":"2641:23:21"},{"kind":"number","nativeSrc":"2666:2:21","nodeType":"YulLiteral","src":"2666:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2637:3:21","nodeType":"YulIdentifier","src":"2637:3:21"},"nativeSrc":"2637:32:21","nodeType":"YulFunctionCall","src":"2637:32:21"},"nativeSrc":"2634:119:21","nodeType":"YulIf","src":"2634:119:21"},{"nativeSrc":"2763:117:21","nodeType":"YulBlock","src":"2763:117:21","statements":[{"nativeSrc":"2778:15:21","nodeType":"YulVariableDeclaration","src":"2778:15:21","value":{"kind":"number","nativeSrc":"2792:1:21","nodeType":"YulLiteral","src":"2792:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2782:6:21","nodeType":"YulTypedName","src":"2782:6:21","type":""}]},{"nativeSrc":"2807:63:21","nodeType":"YulAssignment","src":"2807:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2842:9:21","nodeType":"YulIdentifier","src":"2842:9:21"},{"name":"offset","nativeSrc":"2853:6:21","nodeType":"YulIdentifier","src":"2853:6:21"}],"functionName":{"name":"add","nativeSrc":"2838:3:21","nodeType":"YulIdentifier","src":"2838:3:21"},"nativeSrc":"2838:22:21","nodeType":"YulFunctionCall","src":"2838:22:21"},{"name":"dataEnd","nativeSrc":"2862:7:21","nodeType":"YulIdentifier","src":"2862:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2817:20:21","nodeType":"YulIdentifier","src":"2817:20:21"},"nativeSrc":"2817:53:21","nodeType":"YulFunctionCall","src":"2817:53:21"},"variableNames":[{"name":"value0","nativeSrc":"2807:6:21","nodeType":"YulIdentifier","src":"2807:6:21"}]}]},{"nativeSrc":"2890:118:21","nodeType":"YulBlock","src":"2890:118:21","statements":[{"nativeSrc":"2905:16:21","nodeType":"YulVariableDeclaration","src":"2905:16:21","value":{"kind":"number","nativeSrc":"2919:2:21","nodeType":"YulLiteral","src":"2919:2:21","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2909:6:21","nodeType":"YulTypedName","src":"2909:6:21","type":""}]},{"nativeSrc":"2935:63:21","nodeType":"YulAssignment","src":"2935:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2970:9:21","nodeType":"YulIdentifier","src":"2970:9:21"},{"name":"offset","nativeSrc":"2981:6:21","nodeType":"YulIdentifier","src":"2981:6:21"}],"functionName":{"name":"add","nativeSrc":"2966:3:21","nodeType":"YulIdentifier","src":"2966:3:21"},"nativeSrc":"2966:22:21","nodeType":"YulFunctionCall","src":"2966:22:21"},{"name":"dataEnd","nativeSrc":"2990:7:21","nodeType":"YulIdentifier","src":"2990:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2945:20:21","nodeType":"YulIdentifier","src":"2945:20:21"},"nativeSrc":"2945:53:21","nodeType":"YulFunctionCall","src":"2945:53:21"},"variableNames":[{"name":"value1","nativeSrc":"2935:6:21","nodeType":"YulIdentifier","src":"2935:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2541:474:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2586:9:21","nodeType":"YulTypedName","src":"2586:9:21","type":""},{"name":"dataEnd","nativeSrc":"2597:7:21","nodeType":"YulTypedName","src":"2597:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2609:6:21","nodeType":"YulTypedName","src":"2609:6:21","type":""},{"name":"value1","nativeSrc":"2617:6:21","nodeType":"YulTypedName","src":"2617:6:21","type":""}],"src":"2541:474:21"},{"body":{"nativeSrc":"3063:48:21","nodeType":"YulBlock","src":"3063:48:21","statements":[{"nativeSrc":"3073:32:21","nodeType":"YulAssignment","src":"3073:32:21","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3098:5:21","nodeType":"YulIdentifier","src":"3098:5:21"}],"functionName":{"name":"iszero","nativeSrc":"3091:6:21","nodeType":"YulIdentifier","src":"3091:6:21"},"nativeSrc":"3091:13:21","nodeType":"YulFunctionCall","src":"3091:13:21"}],"functionName":{"name":"iszero","nativeSrc":"3084:6:21","nodeType":"YulIdentifier","src":"3084:6:21"},"nativeSrc":"3084:21:21","nodeType":"YulFunctionCall","src":"3084:21:21"},"variableNames":[{"name":"cleaned","nativeSrc":"3073:7:21","nodeType":"YulIdentifier","src":"3073:7:21"}]}]},"name":"cleanup_t_bool","nativeSrc":"3021:90:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3045:5:21","nodeType":"YulTypedName","src":"3045:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3055:7:21","nodeType":"YulTypedName","src":"3055:7:21","type":""}],"src":"3021:90:21"},{"body":{"nativeSrc":"3176:50:21","nodeType":"YulBlock","src":"3176:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3193:3:21","nodeType":"YulIdentifier","src":"3193:3:21"},{"arguments":[{"name":"value","nativeSrc":"3213:5:21","nodeType":"YulIdentifier","src":"3213:5:21"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3198:14:21","nodeType":"YulIdentifier","src":"3198:14:21"},"nativeSrc":"3198:21:21","nodeType":"YulFunctionCall","src":"3198:21:21"}],"functionName":{"name":"mstore","nativeSrc":"3186:6:21","nodeType":"YulIdentifier","src":"3186:6:21"},"nativeSrc":"3186:34:21","nodeType":"YulFunctionCall","src":"3186:34:21"},"nativeSrc":"3186:34:21","nodeType":"YulExpressionStatement","src":"3186:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3117:109:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3164:5:21","nodeType":"YulTypedName","src":"3164:5:21","type":""},{"name":"pos","nativeSrc":"3171:3:21","nodeType":"YulTypedName","src":"3171:3:21","type":""}],"src":"3117:109:21"},{"body":{"nativeSrc":"3324:118:21","nodeType":"YulBlock","src":"3324:118:21","statements":[{"nativeSrc":"3334:26:21","nodeType":"YulAssignment","src":"3334:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3346:9:21","nodeType":"YulIdentifier","src":"3346:9:21"},{"kind":"number","nativeSrc":"3357:2:21","nodeType":"YulLiteral","src":"3357:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3342:3:21","nodeType":"YulIdentifier","src":"3342:3:21"},"nativeSrc":"3342:18:21","nodeType":"YulFunctionCall","src":"3342:18:21"},"variableNames":[{"name":"tail","nativeSrc":"3334:4:21","nodeType":"YulIdentifier","src":"3334:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3408:6:21","nodeType":"YulIdentifier","src":"3408:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"3421:9:21","nodeType":"YulIdentifier","src":"3421:9:21"},{"kind":"number","nativeSrc":"3432:1:21","nodeType":"YulLiteral","src":"3432:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3417:3:21","nodeType":"YulIdentifier","src":"3417:3:21"},"nativeSrc":"3417:17:21","nodeType":"YulFunctionCall","src":"3417:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3370:37:21","nodeType":"YulIdentifier","src":"3370:37:21"},"nativeSrc":"3370:65:21","nodeType":"YulFunctionCall","src":"3370:65:21"},"nativeSrc":"3370:65:21","nodeType":"YulExpressionStatement","src":"3370:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3232:210:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3296:9:21","nodeType":"YulTypedName","src":"3296:9:21","type":""},{"name":"value0","nativeSrc":"3308:6:21","nodeType":"YulTypedName","src":"3308:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3319:4:21","nodeType":"YulTypedName","src":"3319:4:21","type":""}],"src":"3232:210:21"},{"body":{"nativeSrc":"3513:53:21","nodeType":"YulBlock","src":"3513:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3530:3:21","nodeType":"YulIdentifier","src":"3530:3:21"},{"arguments":[{"name":"value","nativeSrc":"3553:5:21","nodeType":"YulIdentifier","src":"3553:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3535:17:21","nodeType":"YulIdentifier","src":"3535:17:21"},"nativeSrc":"3535:24:21","nodeType":"YulFunctionCall","src":"3535:24:21"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:21","nodeType":"YulIdentifier","src":"3523:6:21"},"nativeSrc":"3523:37:21","nodeType":"YulFunctionCall","src":"3523:37:21"},"nativeSrc":"3523:37:21","nodeType":"YulExpressionStatement","src":"3523:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3448:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3501:5:21","nodeType":"YulTypedName","src":"3501:5:21","type":""},{"name":"pos","nativeSrc":"3508:3:21","nodeType":"YulTypedName","src":"3508:3:21","type":""}],"src":"3448:118:21"},{"body":{"nativeSrc":"3670:124:21","nodeType":"YulBlock","src":"3670:124:21","statements":[{"nativeSrc":"3680:26:21","nodeType":"YulAssignment","src":"3680:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3692:9:21","nodeType":"YulIdentifier","src":"3692:9:21"},{"kind":"number","nativeSrc":"3703:2:21","nodeType":"YulLiteral","src":"3703:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3688:3:21","nodeType":"YulIdentifier","src":"3688:3:21"},"nativeSrc":"3688:18:21","nodeType":"YulFunctionCall","src":"3688:18:21"},"variableNames":[{"name":"tail","nativeSrc":"3680:4:21","nodeType":"YulIdentifier","src":"3680:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3760:6:21","nodeType":"YulIdentifier","src":"3760:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"3773:9:21","nodeType":"YulIdentifier","src":"3773:9:21"},{"kind":"number","nativeSrc":"3784:1:21","nodeType":"YulLiteral","src":"3784:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3769:3:21","nodeType":"YulIdentifier","src":"3769:3:21"},"nativeSrc":"3769:17:21","nodeType":"YulFunctionCall","src":"3769:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3716:43:21","nodeType":"YulIdentifier","src":"3716:43:21"},"nativeSrc":"3716:71:21","nodeType":"YulFunctionCall","src":"3716:71:21"},"nativeSrc":"3716:71:21","nodeType":"YulExpressionStatement","src":"3716:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3572:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3642:9:21","nodeType":"YulTypedName","src":"3642:9:21","type":""},{"name":"value0","nativeSrc":"3654:6:21","nodeType":"YulTypedName","src":"3654:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3665:4:21","nodeType":"YulTypedName","src":"3665:4:21","type":""}],"src":"3572:222:21"},{"body":{"nativeSrc":"3900:519:21","nodeType":"YulBlock","src":"3900:519:21","statements":[{"body":{"nativeSrc":"3946:83:21","nodeType":"YulBlock","src":"3946:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3948:77:21","nodeType":"YulIdentifier","src":"3948:77:21"},"nativeSrc":"3948:79:21","nodeType":"YulFunctionCall","src":"3948:79:21"},"nativeSrc":"3948:79:21","nodeType":"YulExpressionStatement","src":"3948:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3921:7:21","nodeType":"YulIdentifier","src":"3921:7:21"},{"name":"headStart","nativeSrc":"3930:9:21","nodeType":"YulIdentifier","src":"3930:9:21"}],"functionName":{"name":"sub","nativeSrc":"3917:3:21","nodeType":"YulIdentifier","src":"3917:3:21"},"nativeSrc":"3917:23:21","nodeType":"YulFunctionCall","src":"3917:23:21"},{"kind":"number","nativeSrc":"3942:2:21","nodeType":"YulLiteral","src":"3942:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3913:3:21","nodeType":"YulIdentifier","src":"3913:3:21"},"nativeSrc":"3913:32:21","nodeType":"YulFunctionCall","src":"3913:32:21"},"nativeSrc":"3910:119:21","nodeType":"YulIf","src":"3910:119:21"},{"nativeSrc":"4039:117:21","nodeType":"YulBlock","src":"4039:117:21","statements":[{"nativeSrc":"4054:15:21","nodeType":"YulVariableDeclaration","src":"4054:15:21","value":{"kind":"number","nativeSrc":"4068:1:21","nodeType":"YulLiteral","src":"4068:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4058:6:21","nodeType":"YulTypedName","src":"4058:6:21","type":""}]},{"nativeSrc":"4083:63:21","nodeType":"YulAssignment","src":"4083:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4118:9:21","nodeType":"YulIdentifier","src":"4118:9:21"},{"name":"offset","nativeSrc":"4129:6:21","nodeType":"YulIdentifier","src":"4129:6:21"}],"functionName":{"name":"add","nativeSrc":"4114:3:21","nodeType":"YulIdentifier","src":"4114:3:21"},"nativeSrc":"4114:22:21","nodeType":"YulFunctionCall","src":"4114:22:21"},{"name":"dataEnd","nativeSrc":"4138:7:21","nodeType":"YulIdentifier","src":"4138:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4093:20:21","nodeType":"YulIdentifier","src":"4093:20:21"},"nativeSrc":"4093:53:21","nodeType":"YulFunctionCall","src":"4093:53:21"},"variableNames":[{"name":"value0","nativeSrc":"4083:6:21","nodeType":"YulIdentifier","src":"4083:6:21"}]}]},{"nativeSrc":"4166:118:21","nodeType":"YulBlock","src":"4166:118:21","statements":[{"nativeSrc":"4181:16:21","nodeType":"YulVariableDeclaration","src":"4181:16:21","value":{"kind":"number","nativeSrc":"4195:2:21","nodeType":"YulLiteral","src":"4195:2:21","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4185:6:21","nodeType":"YulTypedName","src":"4185:6:21","type":""}]},{"nativeSrc":"4211:63:21","nodeType":"YulAssignment","src":"4211:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4246:9:21","nodeType":"YulIdentifier","src":"4246:9:21"},{"name":"offset","nativeSrc":"4257:6:21","nodeType":"YulIdentifier","src":"4257:6:21"}],"functionName":{"name":"add","nativeSrc":"4242:3:21","nodeType":"YulIdentifier","src":"4242:3:21"},"nativeSrc":"4242:22:21","nodeType":"YulFunctionCall","src":"4242:22:21"},{"name":"dataEnd","nativeSrc":"4266:7:21","nodeType":"YulIdentifier","src":"4266:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4221:20:21","nodeType":"YulIdentifier","src":"4221:20:21"},"nativeSrc":"4221:53:21","nodeType":"YulFunctionCall","src":"4221:53:21"},"variableNames":[{"name":"value1","nativeSrc":"4211:6:21","nodeType":"YulIdentifier","src":"4211:6:21"}]}]},{"nativeSrc":"4294:118:21","nodeType":"YulBlock","src":"4294:118:21","statements":[{"nativeSrc":"4309:16:21","nodeType":"YulVariableDeclaration","src":"4309:16:21","value":{"kind":"number","nativeSrc":"4323:2:21","nodeType":"YulLiteral","src":"4323:2:21","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4313:6:21","nodeType":"YulTypedName","src":"4313:6:21","type":""}]},{"nativeSrc":"4339:63:21","nodeType":"YulAssignment","src":"4339:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4374:9:21","nodeType":"YulIdentifier","src":"4374:9:21"},{"name":"offset","nativeSrc":"4385:6:21","nodeType":"YulIdentifier","src":"4385:6:21"}],"functionName":{"name":"add","nativeSrc":"4370:3:21","nodeType":"YulIdentifier","src":"4370:3:21"},"nativeSrc":"4370:22:21","nodeType":"YulFunctionCall","src":"4370:22:21"},{"name":"dataEnd","nativeSrc":"4394:7:21","nodeType":"YulIdentifier","src":"4394:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4349:20:21","nodeType":"YulIdentifier","src":"4349:20:21"},"nativeSrc":"4349:53:21","nodeType":"YulFunctionCall","src":"4349:53:21"},"variableNames":[{"name":"value2","nativeSrc":"4339:6:21","nodeType":"YulIdentifier","src":"4339:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3800:619:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3854:9:21","nodeType":"YulTypedName","src":"3854:9:21","type":""},{"name":"dataEnd","nativeSrc":"3865:7:21","nodeType":"YulTypedName","src":"3865:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3877:6:21","nodeType":"YulTypedName","src":"3877:6:21","type":""},{"name":"value1","nativeSrc":"3885:6:21","nodeType":"YulTypedName","src":"3885:6:21","type":""},{"name":"value2","nativeSrc":"3893:6:21","nodeType":"YulTypedName","src":"3893:6:21","type":""}],"src":"3800:619:21"},{"body":{"nativeSrc":"4468:43:21","nodeType":"YulBlock","src":"4468:43:21","statements":[{"nativeSrc":"4478:27:21","nodeType":"YulAssignment","src":"4478:27:21","value":{"arguments":[{"name":"value","nativeSrc":"4493:5:21","nodeType":"YulIdentifier","src":"4493:5:21"},{"kind":"number","nativeSrc":"4500:4:21","nodeType":"YulLiteral","src":"4500:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4489:3:21","nodeType":"YulIdentifier","src":"4489:3:21"},"nativeSrc":"4489:16:21","nodeType":"YulFunctionCall","src":"4489:16:21"},"variableNames":[{"name":"cleaned","nativeSrc":"4478:7:21","nodeType":"YulIdentifier","src":"4478:7:21"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4425:86:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4450:5:21","nodeType":"YulTypedName","src":"4450:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4460:7:21","nodeType":"YulTypedName","src":"4460:7:21","type":""}],"src":"4425:86:21"},{"body":{"nativeSrc":"4578:51:21","nodeType":"YulBlock","src":"4578:51:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4595:3:21","nodeType":"YulIdentifier","src":"4595:3:21"},{"arguments":[{"name":"value","nativeSrc":"4616:5:21","nodeType":"YulIdentifier","src":"4616:5:21"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4600:15:21","nodeType":"YulIdentifier","src":"4600:15:21"},"nativeSrc":"4600:22:21","nodeType":"YulFunctionCall","src":"4600:22:21"}],"functionName":{"name":"mstore","nativeSrc":"4588:6:21","nodeType":"YulIdentifier","src":"4588:6:21"},"nativeSrc":"4588:35:21","nodeType":"YulFunctionCall","src":"4588:35:21"},"nativeSrc":"4588:35:21","nodeType":"YulExpressionStatement","src":"4588:35:21"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4517:112:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4566:5:21","nodeType":"YulTypedName","src":"4566:5:21","type":""},{"name":"pos","nativeSrc":"4573:3:21","nodeType":"YulTypedName","src":"4573:3:21","type":""}],"src":"4517:112:21"},{"body":{"nativeSrc":"4729:120:21","nodeType":"YulBlock","src":"4729:120:21","statements":[{"nativeSrc":"4739:26:21","nodeType":"YulAssignment","src":"4739:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4751:9:21","nodeType":"YulIdentifier","src":"4751:9:21"},{"kind":"number","nativeSrc":"4762:2:21","nodeType":"YulLiteral","src":"4762:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4747:3:21","nodeType":"YulIdentifier","src":"4747:3:21"},"nativeSrc":"4747:18:21","nodeType":"YulFunctionCall","src":"4747:18:21"},"variableNames":[{"name":"tail","nativeSrc":"4739:4:21","nodeType":"YulIdentifier","src":"4739:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4815:6:21","nodeType":"YulIdentifier","src":"4815:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"4828:9:21","nodeType":"YulIdentifier","src":"4828:9:21"},{"kind":"number","nativeSrc":"4839:1:21","nodeType":"YulLiteral","src":"4839:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4824:3:21","nodeType":"YulIdentifier","src":"4824:3:21"},"nativeSrc":"4824:17:21","nodeType":"YulFunctionCall","src":"4824:17:21"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4775:39:21","nodeType":"YulIdentifier","src":"4775:39:21"},"nativeSrc":"4775:67:21","nodeType":"YulFunctionCall","src":"4775:67:21"},"nativeSrc":"4775:67:21","nodeType":"YulExpressionStatement","src":"4775:67:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4635:214:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4701:9:21","nodeType":"YulTypedName","src":"4701:9:21","type":""},{"name":"value0","nativeSrc":"4713:6:21","nodeType":"YulTypedName","src":"4713:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4724:4:21","nodeType":"YulTypedName","src":"4724:4:21","type":""}],"src":"4635:214:21"},{"body":{"nativeSrc":"4900:32:21","nodeType":"YulBlock","src":"4900:32:21","statements":[{"nativeSrc":"4910:16:21","nodeType":"YulAssignment","src":"4910:16:21","value":{"name":"value","nativeSrc":"4921:5:21","nodeType":"YulIdentifier","src":"4921:5:21"},"variableNames":[{"name":"cleaned","nativeSrc":"4910:7:21","nodeType":"YulIdentifier","src":"4910:7:21"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4855:77:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4882:5:21","nodeType":"YulTypedName","src":"4882:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4892:7:21","nodeType":"YulTypedName","src":"4892:7:21","type":""}],"src":"4855:77:21"},{"body":{"nativeSrc":"5003:53:21","nodeType":"YulBlock","src":"5003:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5020:3:21","nodeType":"YulIdentifier","src":"5020:3:21"},{"arguments":[{"name":"value","nativeSrc":"5043:5:21","nodeType":"YulIdentifier","src":"5043:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5025:17:21","nodeType":"YulIdentifier","src":"5025:17:21"},"nativeSrc":"5025:24:21","nodeType":"YulFunctionCall","src":"5025:24:21"}],"functionName":{"name":"mstore","nativeSrc":"5013:6:21","nodeType":"YulIdentifier","src":"5013:6:21"},"nativeSrc":"5013:37:21","nodeType":"YulFunctionCall","src":"5013:37:21"},"nativeSrc":"5013:37:21","nodeType":"YulExpressionStatement","src":"5013:37:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4938:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4991:5:21","nodeType":"YulTypedName","src":"4991:5:21","type":""},{"name":"pos","nativeSrc":"4998:3:21","nodeType":"YulTypedName","src":"4998:3:21","type":""}],"src":"4938:118:21"},{"body":{"nativeSrc":"5160:124:21","nodeType":"YulBlock","src":"5160:124:21","statements":[{"nativeSrc":"5170:26:21","nodeType":"YulAssignment","src":"5170:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5182:9:21","nodeType":"YulIdentifier","src":"5182:9:21"},{"kind":"number","nativeSrc":"5193:2:21","nodeType":"YulLiteral","src":"5193:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5178:3:21","nodeType":"YulIdentifier","src":"5178:3:21"},"nativeSrc":"5178:18:21","nodeType":"YulFunctionCall","src":"5178:18:21"},"variableNames":[{"name":"tail","nativeSrc":"5170:4:21","nodeType":"YulIdentifier","src":"5170:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5250:6:21","nodeType":"YulIdentifier","src":"5250:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"5263:9:21","nodeType":"YulIdentifier","src":"5263:9:21"},{"kind":"number","nativeSrc":"5274:1:21","nodeType":"YulLiteral","src":"5274:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5259:3:21","nodeType":"YulIdentifier","src":"5259:3:21"},"nativeSrc":"5259:17:21","nodeType":"YulFunctionCall","src":"5259:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5206:43:21","nodeType":"YulIdentifier","src":"5206:43:21"},"nativeSrc":"5206:71:21","nodeType":"YulFunctionCall","src":"5206:71:21"},"nativeSrc":"5206:71:21","nodeType":"YulExpressionStatement","src":"5206:71:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5062:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5132:9:21","nodeType":"YulTypedName","src":"5132:9:21","type":""},{"name":"value0","nativeSrc":"5144:6:21","nodeType":"YulTypedName","src":"5144:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5155:4:21","nodeType":"YulTypedName","src":"5155:4:21","type":""}],"src":"5062:222:21"},{"body":{"nativeSrc":"5356:263:21","nodeType":"YulBlock","src":"5356:263:21","statements":[{"body":{"nativeSrc":"5402:83:21","nodeType":"YulBlock","src":"5402:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5404:77:21","nodeType":"YulIdentifier","src":"5404:77:21"},"nativeSrc":"5404:79:21","nodeType":"YulFunctionCall","src":"5404:79:21"},"nativeSrc":"5404:79:21","nodeType":"YulExpressionStatement","src":"5404:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5377:7:21","nodeType":"YulIdentifier","src":"5377:7:21"},{"name":"headStart","nativeSrc":"5386:9:21","nodeType":"YulIdentifier","src":"5386:9:21"}],"functionName":{"name":"sub","nativeSrc":"5373:3:21","nodeType":"YulIdentifier","src":"5373:3:21"},"nativeSrc":"5373:23:21","nodeType":"YulFunctionCall","src":"5373:23:21"},{"kind":"number","nativeSrc":"5398:2:21","nodeType":"YulLiteral","src":"5398:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5369:3:21","nodeType":"YulIdentifier","src":"5369:3:21"},"nativeSrc":"5369:32:21","nodeType":"YulFunctionCall","src":"5369:32:21"},"nativeSrc":"5366:119:21","nodeType":"YulIf","src":"5366:119:21"},{"nativeSrc":"5495:117:21","nodeType":"YulBlock","src":"5495:117:21","statements":[{"nativeSrc":"5510:15:21","nodeType":"YulVariableDeclaration","src":"5510:15:21","value":{"kind":"number","nativeSrc":"5524:1:21","nodeType":"YulLiteral","src":"5524:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5514:6:21","nodeType":"YulTypedName","src":"5514:6:21","type":""}]},{"nativeSrc":"5539:63:21","nodeType":"YulAssignment","src":"5539:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5574:9:21","nodeType":"YulIdentifier","src":"5574:9:21"},{"name":"offset","nativeSrc":"5585:6:21","nodeType":"YulIdentifier","src":"5585:6:21"}],"functionName":{"name":"add","nativeSrc":"5570:3:21","nodeType":"YulIdentifier","src":"5570:3:21"},"nativeSrc":"5570:22:21","nodeType":"YulFunctionCall","src":"5570:22:21"},{"name":"dataEnd","nativeSrc":"5594:7:21","nodeType":"YulIdentifier","src":"5594:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5549:20:21","nodeType":"YulIdentifier","src":"5549:20:21"},"nativeSrc":"5549:53:21","nodeType":"YulFunctionCall","src":"5549:53:21"},"variableNames":[{"name":"value0","nativeSrc":"5539:6:21","nodeType":"YulIdentifier","src":"5539:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5290:329:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5326:9:21","nodeType":"YulTypedName","src":"5326:9:21","type":""},{"name":"dataEnd","nativeSrc":"5337:7:21","nodeType":"YulTypedName","src":"5337:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5349:6:21","nodeType":"YulTypedName","src":"5349:6:21","type":""}],"src":"5290:329:21"},{"body":{"nativeSrc":"5669:105:21","nodeType":"YulBlock","src":"5669:105:21","statements":[{"nativeSrc":"5679:89:21","nodeType":"YulAssignment","src":"5679:89:21","value":{"arguments":[{"name":"value","nativeSrc":"5694:5:21","nodeType":"YulIdentifier","src":"5694:5:21"},{"kind":"number","nativeSrc":"5701:66:21","nodeType":"YulLiteral","src":"5701:66:21","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"5690:3:21","nodeType":"YulIdentifier","src":"5690:3:21"},"nativeSrc":"5690:78:21","nodeType":"YulFunctionCall","src":"5690:78:21"},"variableNames":[{"name":"cleaned","nativeSrc":"5679:7:21","nodeType":"YulIdentifier","src":"5679:7:21"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"5625:149:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5651:5:21","nodeType":"YulTypedName","src":"5651:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5661:7:21","nodeType":"YulTypedName","src":"5661:7:21","type":""}],"src":"5625:149:21"},{"body":{"nativeSrc":"5843:52:21","nodeType":"YulBlock","src":"5843:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5860:3:21","nodeType":"YulIdentifier","src":"5860:3:21"},{"arguments":[{"name":"value","nativeSrc":"5882:5:21","nodeType":"YulIdentifier","src":"5882:5:21"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"5865:16:21","nodeType":"YulIdentifier","src":"5865:16:21"},"nativeSrc":"5865:23:21","nodeType":"YulFunctionCall","src":"5865:23:21"}],"functionName":{"name":"mstore","nativeSrc":"5853:6:21","nodeType":"YulIdentifier","src":"5853:6:21"},"nativeSrc":"5853:36:21","nodeType":"YulFunctionCall","src":"5853:36:21"},"nativeSrc":"5853:36:21","nodeType":"YulExpressionStatement","src":"5853:36:21"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"5780:115:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5831:5:21","nodeType":"YulTypedName","src":"5831:5:21","type":""},{"name":"pos","nativeSrc":"5838:3:21","nodeType":"YulTypedName","src":"5838:3:21","type":""}],"src":"5780:115:21"},{"body":{"nativeSrc":"5966:53:21","nodeType":"YulBlock","src":"5966:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5983:3:21","nodeType":"YulIdentifier","src":"5983:3:21"},{"arguments":[{"name":"value","nativeSrc":"6006:5:21","nodeType":"YulIdentifier","src":"6006:5:21"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5988:17:21","nodeType":"YulIdentifier","src":"5988:17:21"},"nativeSrc":"5988:24:21","nodeType":"YulFunctionCall","src":"5988:24:21"}],"functionName":{"name":"mstore","nativeSrc":"5976:6:21","nodeType":"YulIdentifier","src":"5976:6:21"},"nativeSrc":"5976:37:21","nodeType":"YulFunctionCall","src":"5976:37:21"},"nativeSrc":"5976:37:21","nodeType":"YulExpressionStatement","src":"5976:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5901:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5954:5:21","nodeType":"YulTypedName","src":"5954:5:21","type":""},{"name":"pos","nativeSrc":"5961:3:21","nodeType":"YulTypedName","src":"5961:3:21","type":""}],"src":"5901:118:21"},{"body":{"nativeSrc":"6099:40:21","nodeType":"YulBlock","src":"6099:40:21","statements":[{"nativeSrc":"6110:22:21","nodeType":"YulAssignment","src":"6110:22:21","value":{"arguments":[{"name":"value","nativeSrc":"6126:5:21","nodeType":"YulIdentifier","src":"6126:5:21"}],"functionName":{"name":"mload","nativeSrc":"6120:5:21","nodeType":"YulIdentifier","src":"6120:5:21"},"nativeSrc":"6120:12:21","nodeType":"YulFunctionCall","src":"6120:12:21"},"variableNames":[{"name":"length","nativeSrc":"6110:6:21","nodeType":"YulIdentifier","src":"6110:6:21"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6025:114:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6082:5:21","nodeType":"YulTypedName","src":"6082:5:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6092:6:21","nodeType":"YulTypedName","src":"6092:6:21","type":""}],"src":"6025:114:21"},{"body":{"nativeSrc":"6256:73:21","nodeType":"YulBlock","src":"6256:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6273:3:21","nodeType":"YulIdentifier","src":"6273:3:21"},{"name":"length","nativeSrc":"6278:6:21","nodeType":"YulIdentifier","src":"6278:6:21"}],"functionName":{"name":"mstore","nativeSrc":"6266:6:21","nodeType":"YulIdentifier","src":"6266:6:21"},"nativeSrc":"6266:19:21","nodeType":"YulFunctionCall","src":"6266:19:21"},"nativeSrc":"6266:19:21","nodeType":"YulExpressionStatement","src":"6266:19:21"},{"nativeSrc":"6294:29:21","nodeType":"YulAssignment","src":"6294:29:21","value":{"arguments":[{"name":"pos","nativeSrc":"6313:3:21","nodeType":"YulIdentifier","src":"6313:3:21"},{"kind":"number","nativeSrc":"6318:4:21","nodeType":"YulLiteral","src":"6318:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6309:3:21","nodeType":"YulIdentifier","src":"6309:3:21"},"nativeSrc":"6309:14:21","nodeType":"YulFunctionCall","src":"6309:14:21"},"variableNames":[{"name":"updated_pos","nativeSrc":"6294:11:21","nodeType":"YulIdentifier","src":"6294:11:21"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"6145:184:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6228:3:21","nodeType":"YulTypedName","src":"6228:3:21","type":""},{"name":"length","nativeSrc":"6233:6:21","nodeType":"YulTypedName","src":"6233:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6244:11:21","nodeType":"YulTypedName","src":"6244:11:21","type":""}],"src":"6145:184:21"},{"body":{"nativeSrc":"6407:60:21","nodeType":"YulBlock","src":"6407:60:21","statements":[{"nativeSrc":"6417:11:21","nodeType":"YulAssignment","src":"6417:11:21","value":{"name":"ptr","nativeSrc":"6425:3:21","nodeType":"YulIdentifier","src":"6425:3:21"},"variableNames":[{"name":"data","nativeSrc":"6417:4:21","nodeType":"YulIdentifier","src":"6417:4:21"}]},{"nativeSrc":"6438:22:21","nodeType":"YulAssignment","src":"6438:22:21","value":{"arguments":[{"name":"ptr","nativeSrc":"6450:3:21","nodeType":"YulIdentifier","src":"6450:3:21"},{"kind":"number","nativeSrc":"6455:4:21","nodeType":"YulLiteral","src":"6455:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6446:3:21","nodeType":"YulIdentifier","src":"6446:3:21"},"nativeSrc":"6446:14:21","nodeType":"YulFunctionCall","src":"6446:14:21"},"variableNames":[{"name":"data","nativeSrc":"6438:4:21","nodeType":"YulIdentifier","src":"6438:4:21"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6335:132:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6394:3:21","nodeType":"YulTypedName","src":"6394:3:21","type":""}],"returnVariables":[{"name":"data","nativeSrc":"6402:4:21","nodeType":"YulTypedName","src":"6402:4:21","type":""}],"src":"6335:132:21"},{"body":{"nativeSrc":"6528:53:21","nodeType":"YulBlock","src":"6528:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6545:3:21","nodeType":"YulIdentifier","src":"6545:3:21"},{"arguments":[{"name":"value","nativeSrc":"6568:5:21","nodeType":"YulIdentifier","src":"6568:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6550:17:21","nodeType":"YulIdentifier","src":"6550:17:21"},"nativeSrc":"6550:24:21","nodeType":"YulFunctionCall","src":"6550:24:21"}],"functionName":{"name":"mstore","nativeSrc":"6538:6:21","nodeType":"YulIdentifier","src":"6538:6:21"},"nativeSrc":"6538:37:21","nodeType":"YulFunctionCall","src":"6538:37:21"},"nativeSrc":"6538:37:21","nodeType":"YulExpressionStatement","src":"6538:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6473:108:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6516:5:21","nodeType":"YulTypedName","src":"6516:5:21","type":""},{"name":"pos","nativeSrc":"6523:3:21","nodeType":"YulTypedName","src":"6523:3:21","type":""}],"src":"6473:108:21"},{"body":{"nativeSrc":"6667:99:21","nodeType":"YulBlock","src":"6667:99:21","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"6711:6:21","nodeType":"YulIdentifier","src":"6711:6:21"},{"name":"pos","nativeSrc":"6719:3:21","nodeType":"YulIdentifier","src":"6719:3:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6677:33:21","nodeType":"YulIdentifier","src":"6677:33:21"},"nativeSrc":"6677:46:21","nodeType":"YulFunctionCall","src":"6677:46:21"},"nativeSrc":"6677:46:21","nodeType":"YulExpressionStatement","src":"6677:46:21"},{"nativeSrc":"6732:28:21","nodeType":"YulAssignment","src":"6732:28:21","value":{"arguments":[{"name":"pos","nativeSrc":"6750:3:21","nodeType":"YulIdentifier","src":"6750:3:21"},{"kind":"number","nativeSrc":"6755:4:21","nodeType":"YulLiteral","src":"6755:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6746:3:21","nodeType":"YulIdentifier","src":"6746:3:21"},"nativeSrc":"6746:14:21","nodeType":"YulFunctionCall","src":"6746:14:21"},"variableNames":[{"name":"updatedPos","nativeSrc":"6732:10:21","nodeType":"YulIdentifier","src":"6732:10:21"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"6587:179:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"6640:6:21","nodeType":"YulTypedName","src":"6640:6:21","type":""},{"name":"pos","nativeSrc":"6648:3:21","nodeType":"YulTypedName","src":"6648:3:21","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"6656:10:21","nodeType":"YulTypedName","src":"6656:10:21","type":""}],"src":"6587:179:21"},{"body":{"nativeSrc":"6847:38:21","nodeType":"YulBlock","src":"6847:38:21","statements":[{"nativeSrc":"6857:22:21","nodeType":"YulAssignment","src":"6857:22:21","value":{"arguments":[{"name":"ptr","nativeSrc":"6869:3:21","nodeType":"YulIdentifier","src":"6869:3:21"},{"kind":"number","nativeSrc":"6874:4:21","nodeType":"YulLiteral","src":"6874:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6865:3:21","nodeType":"YulIdentifier","src":"6865:3:21"},"nativeSrc":"6865:14:21","nodeType":"YulFunctionCall","src":"6865:14:21"},"variableNames":[{"name":"next","nativeSrc":"6857:4:21","nodeType":"YulIdentifier","src":"6857:4:21"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6772:113:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6834:3:21","nodeType":"YulTypedName","src":"6834:3:21","type":""}],"returnVariables":[{"name":"next","nativeSrc":"6842:4:21","nodeType":"YulTypedName","src":"6842:4:21","type":""}],"src":"6772:113:21"},{"body":{"nativeSrc":"7045:608:21","nodeType":"YulBlock","src":"7045:608:21","statements":[{"nativeSrc":"7055:68:21","nodeType":"YulVariableDeclaration","src":"7055:68:21","value":{"arguments":[{"name":"value","nativeSrc":"7117:5:21","nodeType":"YulIdentifier","src":"7117:5:21"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7069:47:21","nodeType":"YulIdentifier","src":"7069:47:21"},"nativeSrc":"7069:54:21","nodeType":"YulFunctionCall","src":"7069:54:21"},"variables":[{"name":"length","nativeSrc":"7059:6:21","nodeType":"YulTypedName","src":"7059:6:21","type":""}]},{"nativeSrc":"7132:93:21","nodeType":"YulAssignment","src":"7132:93:21","value":{"arguments":[{"name":"pos","nativeSrc":"7213:3:21","nodeType":"YulIdentifier","src":"7213:3:21"},{"name":"length","nativeSrc":"7218:6:21","nodeType":"YulIdentifier","src":"7218:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"7139:73:21","nodeType":"YulIdentifier","src":"7139:73:21"},"nativeSrc":"7139:86:21","nodeType":"YulFunctionCall","src":"7139:86:21"},"variableNames":[{"name":"pos","nativeSrc":"7132:3:21","nodeType":"YulIdentifier","src":"7132:3:21"}]},{"nativeSrc":"7234:71:21","nodeType":"YulVariableDeclaration","src":"7234:71:21","value":{"arguments":[{"name":"value","nativeSrc":"7299:5:21","nodeType":"YulIdentifier","src":"7299:5:21"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7249:49:21","nodeType":"YulIdentifier","src":"7249:49:21"},"nativeSrc":"7249:56:21","nodeType":"YulFunctionCall","src":"7249:56:21"},"variables":[{"name":"baseRef","nativeSrc":"7238:7:21","nodeType":"YulTypedName","src":"7238:7:21","type":""}]},{"nativeSrc":"7314:21:21","nodeType":"YulVariableDeclaration","src":"7314:21:21","value":{"name":"baseRef","nativeSrc":"7328:7:21","nodeType":"YulIdentifier","src":"7328:7:21"},"variables":[{"name":"srcPtr","nativeSrc":"7318:6:21","nodeType":"YulTypedName","src":"7318:6:21","type":""}]},{"body":{"nativeSrc":"7404:224:21","nodeType":"YulBlock","src":"7404:224:21","statements":[{"nativeSrc":"7418:34:21","nodeType":"YulVariableDeclaration","src":"7418:34:21","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7445:6:21","nodeType":"YulIdentifier","src":"7445:6:21"}],"functionName":{"name":"mload","nativeSrc":"7439:5:21","nodeType":"YulIdentifier","src":"7439:5:21"},"nativeSrc":"7439:13:21","nodeType":"YulFunctionCall","src":"7439:13:21"},"variables":[{"name":"elementValue0","nativeSrc":"7422:13:21","nodeType":"YulTypedName","src":"7422:13:21","type":""}]},{"nativeSrc":"7465:70:21","nodeType":"YulAssignment","src":"7465:70:21","value":{"arguments":[{"name":"elementValue0","nativeSrc":"7516:13:21","nodeType":"YulIdentifier","src":"7516:13:21"},{"name":"pos","nativeSrc":"7531:3:21","nodeType":"YulIdentifier","src":"7531:3:21"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"7472:43:21","nodeType":"YulIdentifier","src":"7472:43:21"},"nativeSrc":"7472:63:21","nodeType":"YulFunctionCall","src":"7472:63:21"},"variableNames":[{"name":"pos","nativeSrc":"7465:3:21","nodeType":"YulIdentifier","src":"7465:3:21"}]},{"nativeSrc":"7548:70:21","nodeType":"YulAssignment","src":"7548:70:21","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7611:6:21","nodeType":"YulIdentifier","src":"7611:6:21"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7558:52:21","nodeType":"YulIdentifier","src":"7558:52:21"},"nativeSrc":"7558:60:21","nodeType":"YulFunctionCall","src":"7558:60:21"},"variableNames":[{"name":"srcPtr","nativeSrc":"7548:6:21","nodeType":"YulIdentifier","src":"7548:6:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7366:1:21","nodeType":"YulIdentifier","src":"7366:1:21"},{"name":"length","nativeSrc":"7369:6:21","nodeType":"YulIdentifier","src":"7369:6:21"}],"functionName":{"name":"lt","nativeSrc":"7363:2:21","nodeType":"YulIdentifier","src":"7363:2:21"},"nativeSrc":"7363:13:21","nodeType":"YulFunctionCall","src":"7363:13:21"},"nativeSrc":"7344:284:21","nodeType":"YulForLoop","post":{"nativeSrc":"7377:18:21","nodeType":"YulBlock","src":"7377:18:21","statements":[{"nativeSrc":"7379:14:21","nodeType":"YulAssignment","src":"7379:14:21","value":{"arguments":[{"name":"i","nativeSrc":"7388:1:21","nodeType":"YulIdentifier","src":"7388:1:21"},{"kind":"number","nativeSrc":"7391:1:21","nodeType":"YulLiteral","src":"7391:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7384:3:21","nodeType":"YulIdentifier","src":"7384:3:21"},"nativeSrc":"7384:9:21","nodeType":"YulFunctionCall","src":"7384:9:21"},"variableNames":[{"name":"i","nativeSrc":"7379:1:21","nodeType":"YulIdentifier","src":"7379:1:21"}]}]},"pre":{"nativeSrc":"7348:14:21","nodeType":"YulBlock","src":"7348:14:21","statements":[{"nativeSrc":"7350:10:21","nodeType":"YulVariableDeclaration","src":"7350:10:21","value":{"kind":"number","nativeSrc":"7359:1:21","nodeType":"YulLiteral","src":"7359:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7354:1:21","nodeType":"YulTypedName","src":"7354:1:21","type":""}]}]},"src":"7344:284:21"},{"nativeSrc":"7637:10:21","nodeType":"YulAssignment","src":"7637:10:21","value":{"name":"pos","nativeSrc":"7644:3:21","nodeType":"YulIdentifier","src":"7644:3:21"},"variableNames":[{"name":"end","nativeSrc":"7637:3:21","nodeType":"YulIdentifier","src":"7637:3:21"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"6921:732:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7024:5:21","nodeType":"YulTypedName","src":"7024:5:21","type":""},{"name":"pos","nativeSrc":"7031:3:21","nodeType":"YulTypedName","src":"7031:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7040:3:21","nodeType":"YulTypedName","src":"7040:3:21","type":""}],"src":"6921:732:21"},{"body":{"nativeSrc":"8013:861:21","nodeType":"YulBlock","src":"8013:861:21","statements":[{"nativeSrc":"8023:27:21","nodeType":"YulAssignment","src":"8023:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8035:9:21","nodeType":"YulIdentifier","src":"8035:9:21"},{"kind":"number","nativeSrc":"8046:3:21","nodeType":"YulLiteral","src":"8046:3:21","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"8031:3:21","nodeType":"YulIdentifier","src":"8031:3:21"},"nativeSrc":"8031:19:21","nodeType":"YulFunctionCall","src":"8031:19:21"},"variableNames":[{"name":"tail","nativeSrc":"8023:4:21","nodeType":"YulIdentifier","src":"8023:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8102:6:21","nodeType":"YulIdentifier","src":"8102:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"8115:9:21","nodeType":"YulIdentifier","src":"8115:9:21"},{"kind":"number","nativeSrc":"8126:1:21","nodeType":"YulLiteral","src":"8126:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8111:3:21","nodeType":"YulIdentifier","src":"8111:3:21"},"nativeSrc":"8111:17:21","nodeType":"YulFunctionCall","src":"8111:17:21"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"8060:41:21","nodeType":"YulIdentifier","src":"8060:41:21"},"nativeSrc":"8060:69:21","nodeType":"YulFunctionCall","src":"8060:69:21"},"nativeSrc":"8060:69:21","nodeType":"YulExpressionStatement","src":"8060:69:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8150:9:21","nodeType":"YulIdentifier","src":"8150:9:21"},{"kind":"number","nativeSrc":"8161:2:21","nodeType":"YulLiteral","src":"8161:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8146:3:21","nodeType":"YulIdentifier","src":"8146:3:21"},"nativeSrc":"8146:18:21","nodeType":"YulFunctionCall","src":"8146:18:21"},{"arguments":[{"name":"tail","nativeSrc":"8170:4:21","nodeType":"YulIdentifier","src":"8170:4:21"},{"name":"headStart","nativeSrc":"8176:9:21","nodeType":"YulIdentifier","src":"8176:9:21"}],"functionName":{"name":"sub","nativeSrc":"8166:3:21","nodeType":"YulIdentifier","src":"8166:3:21"},"nativeSrc":"8166:20:21","nodeType":"YulFunctionCall","src":"8166:20:21"}],"functionName":{"name":"mstore","nativeSrc":"8139:6:21","nodeType":"YulIdentifier","src":"8139:6:21"},"nativeSrc":"8139:48:21","nodeType":"YulFunctionCall","src":"8139:48:21"},"nativeSrc":"8139:48:21","nodeType":"YulExpressionStatement","src":"8139:48:21"},{"nativeSrc":"8196:86:21","nodeType":"YulAssignment","src":"8196:86:21","value":{"arguments":[{"name":"value1","nativeSrc":"8268:6:21","nodeType":"YulIdentifier","src":"8268:6:21"},{"name":"tail","nativeSrc":"8277:4:21","nodeType":"YulIdentifier","src":"8277:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8204:63:21","nodeType":"YulIdentifier","src":"8204:63:21"},"nativeSrc":"8204:78:21","nodeType":"YulFunctionCall","src":"8204:78:21"},"variableNames":[{"name":"tail","nativeSrc":"8196:4:21","nodeType":"YulIdentifier","src":"8196:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8303:9:21","nodeType":"YulIdentifier","src":"8303:9:21"},{"kind":"number","nativeSrc":"8314:2:21","nodeType":"YulLiteral","src":"8314:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8299:3:21","nodeType":"YulIdentifier","src":"8299:3:21"},"nativeSrc":"8299:18:21","nodeType":"YulFunctionCall","src":"8299:18:21"},{"arguments":[{"name":"tail","nativeSrc":"8323:4:21","nodeType":"YulIdentifier","src":"8323:4:21"},{"name":"headStart","nativeSrc":"8329:9:21","nodeType":"YulIdentifier","src":"8329:9:21"}],"functionName":{"name":"sub","nativeSrc":"8319:3:21","nodeType":"YulIdentifier","src":"8319:3:21"},"nativeSrc":"8319:20:21","nodeType":"YulFunctionCall","src":"8319:20:21"}],"functionName":{"name":"mstore","nativeSrc":"8292:6:21","nodeType":"YulIdentifier","src":"8292:6:21"},"nativeSrc":"8292:48:21","nodeType":"YulFunctionCall","src":"8292:48:21"},"nativeSrc":"8292:48:21","nodeType":"YulExpressionStatement","src":"8292:48:21"},{"nativeSrc":"8349:86:21","nodeType":"YulAssignment","src":"8349:86:21","value":{"arguments":[{"name":"value2","nativeSrc":"8421:6:21","nodeType":"YulIdentifier","src":"8421:6:21"},{"name":"tail","nativeSrc":"8430:4:21","nodeType":"YulIdentifier","src":"8430:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8357:63:21","nodeType":"YulIdentifier","src":"8357:63:21"},"nativeSrc":"8357:78:21","nodeType":"YulFunctionCall","src":"8357:78:21"},"variableNames":[{"name":"tail","nativeSrc":"8349:4:21","nodeType":"YulIdentifier","src":"8349:4:21"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"8489:6:21","nodeType":"YulIdentifier","src":"8489:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"8502:9:21","nodeType":"YulIdentifier","src":"8502:9:21"},{"kind":"number","nativeSrc":"8513:2:21","nodeType":"YulLiteral","src":"8513:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8498:3:21","nodeType":"YulIdentifier","src":"8498:3:21"},"nativeSrc":"8498:18:21","nodeType":"YulFunctionCall","src":"8498:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8445:43:21","nodeType":"YulIdentifier","src":"8445:43:21"},"nativeSrc":"8445:72:21","nodeType":"YulFunctionCall","src":"8445:72:21"},"nativeSrc":"8445:72:21","nodeType":"YulExpressionStatement","src":"8445:72:21"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"8571:6:21","nodeType":"YulIdentifier","src":"8571:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"8584:9:21","nodeType":"YulIdentifier","src":"8584:9:21"},{"kind":"number","nativeSrc":"8595:3:21","nodeType":"YulLiteral","src":"8595:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8580:3:21","nodeType":"YulIdentifier","src":"8580:3:21"},"nativeSrc":"8580:19:21","nodeType":"YulFunctionCall","src":"8580:19:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8527:43:21","nodeType":"YulIdentifier","src":"8527:43:21"},"nativeSrc":"8527:73:21","nodeType":"YulFunctionCall","src":"8527:73:21"},"nativeSrc":"8527:73:21","nodeType":"YulExpressionStatement","src":"8527:73:21"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"8654:6:21","nodeType":"YulIdentifier","src":"8654:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"8667:9:21","nodeType":"YulIdentifier","src":"8667:9:21"},{"kind":"number","nativeSrc":"8678:3:21","nodeType":"YulLiteral","src":"8678:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8663:3:21","nodeType":"YulIdentifier","src":"8663:3:21"},"nativeSrc":"8663:19:21","nodeType":"YulFunctionCall","src":"8663:19:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8610:43:21","nodeType":"YulIdentifier","src":"8610:43:21"},"nativeSrc":"8610:73:21","nodeType":"YulFunctionCall","src":"8610:73:21"},"nativeSrc":"8610:73:21","nodeType":"YulExpressionStatement","src":"8610:73:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8704:9:21","nodeType":"YulIdentifier","src":"8704:9:21"},{"kind":"number","nativeSrc":"8715:3:21","nodeType":"YulLiteral","src":"8715:3:21","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"8700:3:21","nodeType":"YulIdentifier","src":"8700:3:21"},"nativeSrc":"8700:19:21","nodeType":"YulFunctionCall","src":"8700:19:21"},{"arguments":[{"name":"tail","nativeSrc":"8725:4:21","nodeType":"YulIdentifier","src":"8725:4:21"},{"name":"headStart","nativeSrc":"8731:9:21","nodeType":"YulIdentifier","src":"8731:9:21"}],"functionName":{"name":"sub","nativeSrc":"8721:3:21","nodeType":"YulIdentifier","src":"8721:3:21"},"nativeSrc":"8721:20:21","nodeType":"YulFunctionCall","src":"8721:20:21"}],"functionName":{"name":"mstore","nativeSrc":"8693:6:21","nodeType":"YulIdentifier","src":"8693:6:21"},"nativeSrc":"8693:49:21","nodeType":"YulFunctionCall","src":"8693:49:21"},"nativeSrc":"8693:49:21","nodeType":"YulExpressionStatement","src":"8693:49:21"},{"nativeSrc":"8751:116:21","nodeType":"YulAssignment","src":"8751:116:21","value":{"arguments":[{"name":"value6","nativeSrc":"8853:6:21","nodeType":"YulIdentifier","src":"8853:6:21"},{"name":"tail","nativeSrc":"8862:4:21","nodeType":"YulIdentifier","src":"8862:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"8759:93:21","nodeType":"YulIdentifier","src":"8759:93:21"},"nativeSrc":"8759:108:21","nodeType":"YulFunctionCall","src":"8759:108:21"},"variableNames":[{"name":"tail","nativeSrc":"8751:4:21","nodeType":"YulIdentifier","src":"8751:4:21"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"7659:1215:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7937:9:21","nodeType":"YulTypedName","src":"7937:9:21","type":""},{"name":"value6","nativeSrc":"7949:6:21","nodeType":"YulTypedName","src":"7949:6:21","type":""},{"name":"value5","nativeSrc":"7957:6:21","nodeType":"YulTypedName","src":"7957:6:21","type":""},{"name":"value4","nativeSrc":"7965:6:21","nodeType":"YulTypedName","src":"7965:6:21","type":""},{"name":"value3","nativeSrc":"7973:6:21","nodeType":"YulTypedName","src":"7973:6:21","type":""},{"name":"value2","nativeSrc":"7981:6:21","nodeType":"YulTypedName","src":"7981:6:21","type":""},{"name":"value1","nativeSrc":"7989:6:21","nodeType":"YulTypedName","src":"7989:6:21","type":""},{"name":"value0","nativeSrc":"7997:6:21","nodeType":"YulTypedName","src":"7997:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8008:4:21","nodeType":"YulTypedName","src":"8008:4:21","type":""}],"src":"7659:1215:21"},{"body":{"nativeSrc":"8921:77:21","nodeType":"YulBlock","src":"8921:77:21","statements":[{"body":{"nativeSrc":"8976:16:21","nodeType":"YulBlock","src":"8976:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8985:1:21","nodeType":"YulLiteral","src":"8985:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"8988:1:21","nodeType":"YulLiteral","src":"8988:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8978:6:21","nodeType":"YulIdentifier","src":"8978:6:21"},"nativeSrc":"8978:12:21","nodeType":"YulFunctionCall","src":"8978:12:21"},"nativeSrc":"8978:12:21","nodeType":"YulExpressionStatement","src":"8978:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8944:5:21","nodeType":"YulIdentifier","src":"8944:5:21"},{"arguments":[{"name":"value","nativeSrc":"8967:5:21","nodeType":"YulIdentifier","src":"8967:5:21"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"8951:15:21","nodeType":"YulIdentifier","src":"8951:15:21"},"nativeSrc":"8951:22:21","nodeType":"YulFunctionCall","src":"8951:22:21"}],"functionName":{"name":"eq","nativeSrc":"8941:2:21","nodeType":"YulIdentifier","src":"8941:2:21"},"nativeSrc":"8941:33:21","nodeType":"YulFunctionCall","src":"8941:33:21"}],"functionName":{"name":"iszero","nativeSrc":"8934:6:21","nodeType":"YulIdentifier","src":"8934:6:21"},"nativeSrc":"8934:41:21","nodeType":"YulFunctionCall","src":"8934:41:21"},"nativeSrc":"8931:61:21","nodeType":"YulIf","src":"8931:61:21"}]},"name":"validator_revert_t_uint8","nativeSrc":"8880:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8914:5:21","nodeType":"YulTypedName","src":"8914:5:21","type":""}],"src":"8880:118:21"},{"body":{"nativeSrc":"9054:85:21","nodeType":"YulBlock","src":"9054:85:21","statements":[{"nativeSrc":"9064:29:21","nodeType":"YulAssignment","src":"9064:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"9086:6:21","nodeType":"YulIdentifier","src":"9086:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"9073:12:21","nodeType":"YulIdentifier","src":"9073:12:21"},"nativeSrc":"9073:20:21","nodeType":"YulFunctionCall","src":"9073:20:21"},"variableNames":[{"name":"value","nativeSrc":"9064:5:21","nodeType":"YulIdentifier","src":"9064:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9127:5:21","nodeType":"YulIdentifier","src":"9127:5:21"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"9102:24:21","nodeType":"YulIdentifier","src":"9102:24:21"},"nativeSrc":"9102:31:21","nodeType":"YulFunctionCall","src":"9102:31:21"},"nativeSrc":"9102:31:21","nodeType":"YulExpressionStatement","src":"9102:31:21"}]},"name":"abi_decode_t_uint8","nativeSrc":"9004:135:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9032:6:21","nodeType":"YulTypedName","src":"9032:6:21","type":""},{"name":"end","nativeSrc":"9040:3:21","nodeType":"YulTypedName","src":"9040:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9048:5:21","nodeType":"YulTypedName","src":"9048:5:21","type":""}],"src":"9004:135:21"},{"body":{"nativeSrc":"9188:79:21","nodeType":"YulBlock","src":"9188:79:21","statements":[{"body":{"nativeSrc":"9245:16:21","nodeType":"YulBlock","src":"9245:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9254:1:21","nodeType":"YulLiteral","src":"9254:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9257:1:21","nodeType":"YulLiteral","src":"9257:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9247:6:21","nodeType":"YulIdentifier","src":"9247:6:21"},"nativeSrc":"9247:12:21","nodeType":"YulFunctionCall","src":"9247:12:21"},"nativeSrc":"9247:12:21","nodeType":"YulExpressionStatement","src":"9247:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9211:5:21","nodeType":"YulIdentifier","src":"9211:5:21"},{"arguments":[{"name":"value","nativeSrc":"9236:5:21","nodeType":"YulIdentifier","src":"9236:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"9218:17:21","nodeType":"YulIdentifier","src":"9218:17:21"},"nativeSrc":"9218:24:21","nodeType":"YulFunctionCall","src":"9218:24:21"}],"functionName":{"name":"eq","nativeSrc":"9208:2:21","nodeType":"YulIdentifier","src":"9208:2:21"},"nativeSrc":"9208:35:21","nodeType":"YulFunctionCall","src":"9208:35:21"}],"functionName":{"name":"iszero","nativeSrc":"9201:6:21","nodeType":"YulIdentifier","src":"9201:6:21"},"nativeSrc":"9201:43:21","nodeType":"YulFunctionCall","src":"9201:43:21"},"nativeSrc":"9198:63:21","nodeType":"YulIf","src":"9198:63:21"}]},"name":"validator_revert_t_bytes32","nativeSrc":"9145:122:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9181:5:21","nodeType":"YulTypedName","src":"9181:5:21","type":""}],"src":"9145:122:21"},{"body":{"nativeSrc":"9325:87:21","nodeType":"YulBlock","src":"9325:87:21","statements":[{"nativeSrc":"9335:29:21","nodeType":"YulAssignment","src":"9335:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"9357:6:21","nodeType":"YulIdentifier","src":"9357:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"9344:12:21","nodeType":"YulIdentifier","src":"9344:12:21"},"nativeSrc":"9344:20:21","nodeType":"YulFunctionCall","src":"9344:20:21"},"variableNames":[{"name":"value","nativeSrc":"9335:5:21","nodeType":"YulIdentifier","src":"9335:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9400:5:21","nodeType":"YulIdentifier","src":"9400:5:21"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"9373:26:21","nodeType":"YulIdentifier","src":"9373:26:21"},"nativeSrc":"9373:33:21","nodeType":"YulFunctionCall","src":"9373:33:21"},"nativeSrc":"9373:33:21","nodeType":"YulExpressionStatement","src":"9373:33:21"}]},"name":"abi_decode_t_bytes32","nativeSrc":"9273:139:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9303:6:21","nodeType":"YulTypedName","src":"9303:6:21","type":""},{"name":"end","nativeSrc":"9311:3:21","nodeType":"YulTypedName","src":"9311:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9319:5:21","nodeType":"YulTypedName","src":"9319:5:21","type":""}],"src":"9273:139:21"},{"body":{"nativeSrc":"9584:1033:21","nodeType":"YulBlock","src":"9584:1033:21","statements":[{"body":{"nativeSrc":"9631:83:21","nodeType":"YulBlock","src":"9631:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9633:77:21","nodeType":"YulIdentifier","src":"9633:77:21"},"nativeSrc":"9633:79:21","nodeType":"YulFunctionCall","src":"9633:79:21"},"nativeSrc":"9633:79:21","nodeType":"YulExpressionStatement","src":"9633:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9605:7:21","nodeType":"YulIdentifier","src":"9605:7:21"},{"name":"headStart","nativeSrc":"9614:9:21","nodeType":"YulIdentifier","src":"9614:9:21"}],"functionName":{"name":"sub","nativeSrc":"9601:3:21","nodeType":"YulIdentifier","src":"9601:3:21"},"nativeSrc":"9601:23:21","nodeType":"YulFunctionCall","src":"9601:23:21"},{"kind":"number","nativeSrc":"9626:3:21","nodeType":"YulLiteral","src":"9626:3:21","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"9597:3:21","nodeType":"YulIdentifier","src":"9597:3:21"},"nativeSrc":"9597:33:21","nodeType":"YulFunctionCall","src":"9597:33:21"},"nativeSrc":"9594:120:21","nodeType":"YulIf","src":"9594:120:21"},{"nativeSrc":"9724:117:21","nodeType":"YulBlock","src":"9724:117:21","statements":[{"nativeSrc":"9739:15:21","nodeType":"YulVariableDeclaration","src":"9739:15:21","value":{"kind":"number","nativeSrc":"9753:1:21","nodeType":"YulLiteral","src":"9753:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9743:6:21","nodeType":"YulTypedName","src":"9743:6:21","type":""}]},{"nativeSrc":"9768:63:21","nodeType":"YulAssignment","src":"9768:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9803:9:21","nodeType":"YulIdentifier","src":"9803:9:21"},{"name":"offset","nativeSrc":"9814:6:21","nodeType":"YulIdentifier","src":"9814:6:21"}],"functionName":{"name":"add","nativeSrc":"9799:3:21","nodeType":"YulIdentifier","src":"9799:3:21"},"nativeSrc":"9799:22:21","nodeType":"YulFunctionCall","src":"9799:22:21"},{"name":"dataEnd","nativeSrc":"9823:7:21","nodeType":"YulIdentifier","src":"9823:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9778:20:21","nodeType":"YulIdentifier","src":"9778:20:21"},"nativeSrc":"9778:53:21","nodeType":"YulFunctionCall","src":"9778:53:21"},"variableNames":[{"name":"value0","nativeSrc":"9768:6:21","nodeType":"YulIdentifier","src":"9768:6:21"}]}]},{"nativeSrc":"9851:118:21","nodeType":"YulBlock","src":"9851:118:21","statements":[{"nativeSrc":"9866:16:21","nodeType":"YulVariableDeclaration","src":"9866:16:21","value":{"kind":"number","nativeSrc":"9880:2:21","nodeType":"YulLiteral","src":"9880:2:21","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9870:6:21","nodeType":"YulTypedName","src":"9870:6:21","type":""}]},{"nativeSrc":"9896:63:21","nodeType":"YulAssignment","src":"9896:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9931:9:21","nodeType":"YulIdentifier","src":"9931:9:21"},{"name":"offset","nativeSrc":"9942:6:21","nodeType":"YulIdentifier","src":"9942:6:21"}],"functionName":{"name":"add","nativeSrc":"9927:3:21","nodeType":"YulIdentifier","src":"9927:3:21"},"nativeSrc":"9927:22:21","nodeType":"YulFunctionCall","src":"9927:22:21"},{"name":"dataEnd","nativeSrc":"9951:7:21","nodeType":"YulIdentifier","src":"9951:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9906:20:21","nodeType":"YulIdentifier","src":"9906:20:21"},"nativeSrc":"9906:53:21","nodeType":"YulFunctionCall","src":"9906:53:21"},"variableNames":[{"name":"value1","nativeSrc":"9896:6:21","nodeType":"YulIdentifier","src":"9896:6:21"}]}]},{"nativeSrc":"9979:118:21","nodeType":"YulBlock","src":"9979:118:21","statements":[{"nativeSrc":"9994:16:21","nodeType":"YulVariableDeclaration","src":"9994:16:21","value":{"kind":"number","nativeSrc":"10008:2:21","nodeType":"YulLiteral","src":"10008:2:21","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"9998:6:21","nodeType":"YulTypedName","src":"9998:6:21","type":""}]},{"nativeSrc":"10024:63:21","nodeType":"YulAssignment","src":"10024:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10059:9:21","nodeType":"YulIdentifier","src":"10059:9:21"},{"name":"offset","nativeSrc":"10070:6:21","nodeType":"YulIdentifier","src":"10070:6:21"}],"functionName":{"name":"add","nativeSrc":"10055:3:21","nodeType":"YulIdentifier","src":"10055:3:21"},"nativeSrc":"10055:22:21","nodeType":"YulFunctionCall","src":"10055:22:21"},{"name":"dataEnd","nativeSrc":"10079:7:21","nodeType":"YulIdentifier","src":"10079:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10034:20:21","nodeType":"YulIdentifier","src":"10034:20:21"},"nativeSrc":"10034:53:21","nodeType":"YulFunctionCall","src":"10034:53:21"},"variableNames":[{"name":"value2","nativeSrc":"10024:6:21","nodeType":"YulIdentifier","src":"10024:6:21"}]}]},{"nativeSrc":"10107:118:21","nodeType":"YulBlock","src":"10107:118:21","statements":[{"nativeSrc":"10122:16:21","nodeType":"YulVariableDeclaration","src":"10122:16:21","value":{"kind":"number","nativeSrc":"10136:2:21","nodeType":"YulLiteral","src":"10136:2:21","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"10126:6:21","nodeType":"YulTypedName","src":"10126:6:21","type":""}]},{"nativeSrc":"10152:63:21","nodeType":"YulAssignment","src":"10152:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10187:9:21","nodeType":"YulIdentifier","src":"10187:9:21"},{"name":"offset","nativeSrc":"10198:6:21","nodeType":"YulIdentifier","src":"10198:6:21"}],"functionName":{"name":"add","nativeSrc":"10183:3:21","nodeType":"YulIdentifier","src":"10183:3:21"},"nativeSrc":"10183:22:21","nodeType":"YulFunctionCall","src":"10183:22:21"},{"name":"dataEnd","nativeSrc":"10207:7:21","nodeType":"YulIdentifier","src":"10207:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10162:20:21","nodeType":"YulIdentifier","src":"10162:20:21"},"nativeSrc":"10162:53:21","nodeType":"YulFunctionCall","src":"10162:53:21"},"variableNames":[{"name":"value3","nativeSrc":"10152:6:21","nodeType":"YulIdentifier","src":"10152:6:21"}]}]},{"nativeSrc":"10235:117:21","nodeType":"YulBlock","src":"10235:117:21","statements":[{"nativeSrc":"10250:17:21","nodeType":"YulVariableDeclaration","src":"10250:17:21","value":{"kind":"number","nativeSrc":"10264:3:21","nodeType":"YulLiteral","src":"10264:3:21","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"10254:6:21","nodeType":"YulTypedName","src":"10254:6:21","type":""}]},{"nativeSrc":"10281:61:21","nodeType":"YulAssignment","src":"10281:61:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10314:9:21","nodeType":"YulIdentifier","src":"10314:9:21"},{"name":"offset","nativeSrc":"10325:6:21","nodeType":"YulIdentifier","src":"10325:6:21"}],"functionName":{"name":"add","nativeSrc":"10310:3:21","nodeType":"YulIdentifier","src":"10310:3:21"},"nativeSrc":"10310:22:21","nodeType":"YulFunctionCall","src":"10310:22:21"},{"name":"dataEnd","nativeSrc":"10334:7:21","nodeType":"YulIdentifier","src":"10334:7:21"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"10291:18:21","nodeType":"YulIdentifier","src":"10291:18:21"},"nativeSrc":"10291:51:21","nodeType":"YulFunctionCall","src":"10291:51:21"},"variableNames":[{"name":"value4","nativeSrc":"10281:6:21","nodeType":"YulIdentifier","src":"10281:6:21"}]}]},{"nativeSrc":"10362:119:21","nodeType":"YulBlock","src":"10362:119:21","statements":[{"nativeSrc":"10377:17:21","nodeType":"YulVariableDeclaration","src":"10377:17:21","value":{"kind":"number","nativeSrc":"10391:3:21","nodeType":"YulLiteral","src":"10391:3:21","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"10381:6:21","nodeType":"YulTypedName","src":"10381:6:21","type":""}]},{"nativeSrc":"10408:63:21","nodeType":"YulAssignment","src":"10408:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10443:9:21","nodeType":"YulIdentifier","src":"10443:9:21"},{"name":"offset","nativeSrc":"10454:6:21","nodeType":"YulIdentifier","src":"10454:6:21"}],"functionName":{"name":"add","nativeSrc":"10439:3:21","nodeType":"YulIdentifier","src":"10439:3:21"},"nativeSrc":"10439:22:21","nodeType":"YulFunctionCall","src":"10439:22:21"},{"name":"dataEnd","nativeSrc":"10463:7:21","nodeType":"YulIdentifier","src":"10463:7:21"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"10418:20:21","nodeType":"YulIdentifier","src":"10418:20:21"},"nativeSrc":"10418:53:21","nodeType":"YulFunctionCall","src":"10418:53:21"},"variableNames":[{"name":"value5","nativeSrc":"10408:6:21","nodeType":"YulIdentifier","src":"10408:6:21"}]}]},{"nativeSrc":"10491:119:21","nodeType":"YulBlock","src":"10491:119:21","statements":[{"nativeSrc":"10506:17:21","nodeType":"YulVariableDeclaration","src":"10506:17:21","value":{"kind":"number","nativeSrc":"10520:3:21","nodeType":"YulLiteral","src":"10520:3:21","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"10510:6:21","nodeType":"YulTypedName","src":"10510:6:21","type":""}]},{"nativeSrc":"10537:63:21","nodeType":"YulAssignment","src":"10537:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10572:9:21","nodeType":"YulIdentifier","src":"10572:9:21"},{"name":"offset","nativeSrc":"10583:6:21","nodeType":"YulIdentifier","src":"10583:6:21"}],"functionName":{"name":"add","nativeSrc":"10568:3:21","nodeType":"YulIdentifier","src":"10568:3:21"},"nativeSrc":"10568:22:21","nodeType":"YulFunctionCall","src":"10568:22:21"},{"name":"dataEnd","nativeSrc":"10592:7:21","nodeType":"YulIdentifier","src":"10592:7:21"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"10547:20:21","nodeType":"YulIdentifier","src":"10547:20:21"},"nativeSrc":"10547:53:21","nodeType":"YulFunctionCall","src":"10547:53:21"},"variableNames":[{"name":"value6","nativeSrc":"10537:6:21","nodeType":"YulIdentifier","src":"10537:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"9418:1199:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9506:9:21","nodeType":"YulTypedName","src":"9506:9:21","type":""},{"name":"dataEnd","nativeSrc":"9517:7:21","nodeType":"YulTypedName","src":"9517:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9529:6:21","nodeType":"YulTypedName","src":"9529:6:21","type":""},{"name":"value1","nativeSrc":"9537:6:21","nodeType":"YulTypedName","src":"9537:6:21","type":""},{"name":"value2","nativeSrc":"9545:6:21","nodeType":"YulTypedName","src":"9545:6:21","type":""},{"name":"value3","nativeSrc":"9553:6:21","nodeType":"YulTypedName","src":"9553:6:21","type":""},{"name":"value4","nativeSrc":"9561:6:21","nodeType":"YulTypedName","src":"9561:6:21","type":""},{"name":"value5","nativeSrc":"9569:6:21","nodeType":"YulTypedName","src":"9569:6:21","type":""},{"name":"value6","nativeSrc":"9577:6:21","nodeType":"YulTypedName","src":"9577:6:21","type":""}],"src":"9418:1199:21"},{"body":{"nativeSrc":"10706:391:21","nodeType":"YulBlock","src":"10706:391:21","statements":[{"body":{"nativeSrc":"10752:83:21","nodeType":"YulBlock","src":"10752:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10754:77:21","nodeType":"YulIdentifier","src":"10754:77:21"},"nativeSrc":"10754:79:21","nodeType":"YulFunctionCall","src":"10754:79:21"},"nativeSrc":"10754:79:21","nodeType":"YulExpressionStatement","src":"10754:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10727:7:21","nodeType":"YulIdentifier","src":"10727:7:21"},{"name":"headStart","nativeSrc":"10736:9:21","nodeType":"YulIdentifier","src":"10736:9:21"}],"functionName":{"name":"sub","nativeSrc":"10723:3:21","nodeType":"YulIdentifier","src":"10723:3:21"},"nativeSrc":"10723:23:21","nodeType":"YulFunctionCall","src":"10723:23:21"},{"kind":"number","nativeSrc":"10748:2:21","nodeType":"YulLiteral","src":"10748:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10719:3:21","nodeType":"YulIdentifier","src":"10719:3:21"},"nativeSrc":"10719:32:21","nodeType":"YulFunctionCall","src":"10719:32:21"},"nativeSrc":"10716:119:21","nodeType":"YulIf","src":"10716:119:21"},{"nativeSrc":"10845:117:21","nodeType":"YulBlock","src":"10845:117:21","statements":[{"nativeSrc":"10860:15:21","nodeType":"YulVariableDeclaration","src":"10860:15:21","value":{"kind":"number","nativeSrc":"10874:1:21","nodeType":"YulLiteral","src":"10874:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10864:6:21","nodeType":"YulTypedName","src":"10864:6:21","type":""}]},{"nativeSrc":"10889:63:21","nodeType":"YulAssignment","src":"10889:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10924:9:21","nodeType":"YulIdentifier","src":"10924:9:21"},{"name":"offset","nativeSrc":"10935:6:21","nodeType":"YulIdentifier","src":"10935:6:21"}],"functionName":{"name":"add","nativeSrc":"10920:3:21","nodeType":"YulIdentifier","src":"10920:3:21"},"nativeSrc":"10920:22:21","nodeType":"YulFunctionCall","src":"10920:22:21"},{"name":"dataEnd","nativeSrc":"10944:7:21","nodeType":"YulIdentifier","src":"10944:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10899:20:21","nodeType":"YulIdentifier","src":"10899:20:21"},"nativeSrc":"10899:53:21","nodeType":"YulFunctionCall","src":"10899:53:21"},"variableNames":[{"name":"value0","nativeSrc":"10889:6:21","nodeType":"YulIdentifier","src":"10889:6:21"}]}]},{"nativeSrc":"10972:118:21","nodeType":"YulBlock","src":"10972:118:21","statements":[{"nativeSrc":"10987:16:21","nodeType":"YulVariableDeclaration","src":"10987:16:21","value":{"kind":"number","nativeSrc":"11001:2:21","nodeType":"YulLiteral","src":"11001:2:21","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10991:6:21","nodeType":"YulTypedName","src":"10991:6:21","type":""}]},{"nativeSrc":"11017:63:21","nodeType":"YulAssignment","src":"11017:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11052:9:21","nodeType":"YulIdentifier","src":"11052:9:21"},{"name":"offset","nativeSrc":"11063:6:21","nodeType":"YulIdentifier","src":"11063:6:21"}],"functionName":{"name":"add","nativeSrc":"11048:3:21","nodeType":"YulIdentifier","src":"11048:3:21"},"nativeSrc":"11048:22:21","nodeType":"YulFunctionCall","src":"11048:22:21"},{"name":"dataEnd","nativeSrc":"11072:7:21","nodeType":"YulIdentifier","src":"11072:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11027:20:21","nodeType":"YulIdentifier","src":"11027:20:21"},"nativeSrc":"11027:53:21","nodeType":"YulFunctionCall","src":"11027:53:21"},"variableNames":[{"name":"value1","nativeSrc":"11017:6:21","nodeType":"YulIdentifier","src":"11017:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"10623:474:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10668:9:21","nodeType":"YulTypedName","src":"10668:9:21","type":""},{"name":"dataEnd","nativeSrc":"10679:7:21","nodeType":"YulTypedName","src":"10679:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10691:6:21","nodeType":"YulTypedName","src":"10691:6:21","type":""},{"name":"value1","nativeSrc":"10699:6:21","nodeType":"YulTypedName","src":"10699:6:21","type":""}],"src":"10623:474:21"},{"body":{"nativeSrc":"11131:152:21","nodeType":"YulBlock","src":"11131:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11148:1:21","nodeType":"YulLiteral","src":"11148:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11151:77:21","nodeType":"YulLiteral","src":"11151:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11141:6:21","nodeType":"YulIdentifier","src":"11141:6:21"},"nativeSrc":"11141:88:21","nodeType":"YulFunctionCall","src":"11141:88:21"},"nativeSrc":"11141:88:21","nodeType":"YulExpressionStatement","src":"11141:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11245:1:21","nodeType":"YulLiteral","src":"11245:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"11248:4:21","nodeType":"YulLiteral","src":"11248:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"11238:6:21","nodeType":"YulIdentifier","src":"11238:6:21"},"nativeSrc":"11238:15:21","nodeType":"YulFunctionCall","src":"11238:15:21"},"nativeSrc":"11238:15:21","nodeType":"YulExpressionStatement","src":"11238:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11269:1:21","nodeType":"YulLiteral","src":"11269:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11272:4:21","nodeType":"YulLiteral","src":"11272:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11262:6:21","nodeType":"YulIdentifier","src":"11262:6:21"},"nativeSrc":"11262:15:21","nodeType":"YulFunctionCall","src":"11262:15:21"},"nativeSrc":"11262:15:21","nodeType":"YulExpressionStatement","src":"11262:15:21"}]},"name":"panic_error_0x22","nativeSrc":"11103:180:21","nodeType":"YulFunctionDefinition","src":"11103:180:21"},{"body":{"nativeSrc":"11340:269:21","nodeType":"YulBlock","src":"11340:269:21","statements":[{"nativeSrc":"11350:22:21","nodeType":"YulAssignment","src":"11350:22:21","value":{"arguments":[{"name":"data","nativeSrc":"11364:4:21","nodeType":"YulIdentifier","src":"11364:4:21"},{"kind":"number","nativeSrc":"11370:1:21","nodeType":"YulLiteral","src":"11370:1:21","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"11360:3:21","nodeType":"YulIdentifier","src":"11360:3:21"},"nativeSrc":"11360:12:21","nodeType":"YulFunctionCall","src":"11360:12:21"},"variableNames":[{"name":"length","nativeSrc":"11350:6:21","nodeType":"YulIdentifier","src":"11350:6:21"}]},{"nativeSrc":"11381:38:21","nodeType":"YulVariableDeclaration","src":"11381:38:21","value":{"arguments":[{"name":"data","nativeSrc":"11411:4:21","nodeType":"YulIdentifier","src":"11411:4:21"},{"kind":"number","nativeSrc":"11417:1:21","nodeType":"YulLiteral","src":"11417:1:21","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"11407:3:21","nodeType":"YulIdentifier","src":"11407:3:21"},"nativeSrc":"11407:12:21","nodeType":"YulFunctionCall","src":"11407:12:21"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"11385:18:21","nodeType":"YulTypedName","src":"11385:18:21","type":""}]},{"body":{"nativeSrc":"11458:51:21","nodeType":"YulBlock","src":"11458:51:21","statements":[{"nativeSrc":"11472:27:21","nodeType":"YulAssignment","src":"11472:27:21","value":{"arguments":[{"name":"length","nativeSrc":"11486:6:21","nodeType":"YulIdentifier","src":"11486:6:21"},{"kind":"number","nativeSrc":"11494:4:21","nodeType":"YulLiteral","src":"11494:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"11482:3:21","nodeType":"YulIdentifier","src":"11482:3:21"},"nativeSrc":"11482:17:21","nodeType":"YulFunctionCall","src":"11482:17:21"},"variableNames":[{"name":"length","nativeSrc":"11472:6:21","nodeType":"YulIdentifier","src":"11472:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11438:18:21","nodeType":"YulIdentifier","src":"11438:18:21"}],"functionName":{"name":"iszero","nativeSrc":"11431:6:21","nodeType":"YulIdentifier","src":"11431:6:21"},"nativeSrc":"11431:26:21","nodeType":"YulFunctionCall","src":"11431:26:21"},"nativeSrc":"11428:81:21","nodeType":"YulIf","src":"11428:81:21"},{"body":{"nativeSrc":"11561:42:21","nodeType":"YulBlock","src":"11561:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"11575:16:21","nodeType":"YulIdentifier","src":"11575:16:21"},"nativeSrc":"11575:18:21","nodeType":"YulFunctionCall","src":"11575:18:21"},"nativeSrc":"11575:18:21","nodeType":"YulExpressionStatement","src":"11575:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11525:18:21","nodeType":"YulIdentifier","src":"11525:18:21"},{"arguments":[{"name":"length","nativeSrc":"11548:6:21","nodeType":"YulIdentifier","src":"11548:6:21"},{"kind":"number","nativeSrc":"11556:2:21","nodeType":"YulLiteral","src":"11556:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"11545:2:21","nodeType":"YulIdentifier","src":"11545:2:21"},"nativeSrc":"11545:14:21","nodeType":"YulFunctionCall","src":"11545:14:21"}],"functionName":{"name":"eq","nativeSrc":"11522:2:21","nodeType":"YulIdentifier","src":"11522:2:21"},"nativeSrc":"11522:38:21","nodeType":"YulFunctionCall","src":"11522:38:21"},"nativeSrc":"11519:84:21","nodeType":"YulIf","src":"11519:84:21"}]},"name":"extract_byte_array_length","nativeSrc":"11289:320:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"11324:4:21","nodeType":"YulTypedName","src":"11324:4:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11333:6:21","nodeType":"YulTypedName","src":"11333:6:21","type":""}],"src":"11289:320:21"},{"body":{"nativeSrc":"11643:152:21","nodeType":"YulBlock","src":"11643:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11660:1:21","nodeType":"YulLiteral","src":"11660:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11663:77:21","nodeType":"YulLiteral","src":"11663:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11653:6:21","nodeType":"YulIdentifier","src":"11653:6:21"},"nativeSrc":"11653:88:21","nodeType":"YulFunctionCall","src":"11653:88:21"},"nativeSrc":"11653:88:21","nodeType":"YulExpressionStatement","src":"11653:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11757:1:21","nodeType":"YulLiteral","src":"11757:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"11760:4:21","nodeType":"YulLiteral","src":"11760:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"11750:6:21","nodeType":"YulIdentifier","src":"11750:6:21"},"nativeSrc":"11750:15:21","nodeType":"YulFunctionCall","src":"11750:15:21"},"nativeSrc":"11750:15:21","nodeType":"YulExpressionStatement","src":"11750:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11781:1:21","nodeType":"YulLiteral","src":"11781:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11784:4:21","nodeType":"YulLiteral","src":"11784:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11774:6:21","nodeType":"YulIdentifier","src":"11774:6:21"},"nativeSrc":"11774:15:21","nodeType":"YulFunctionCall","src":"11774:15:21"},"nativeSrc":"11774:15:21","nodeType":"YulExpressionStatement","src":"11774:15:21"}]},"name":"panic_error_0x41","nativeSrc":"11615:180:21","nodeType":"YulFunctionDefinition","src":"11615:180:21"},{"body":{"nativeSrc":"12039:537:21","nodeType":"YulBlock","src":"12039:537:21","statements":[{"nativeSrc":"12049:27:21","nodeType":"YulAssignment","src":"12049:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"12061:9:21","nodeType":"YulIdentifier","src":"12061:9:21"},{"kind":"number","nativeSrc":"12072:3:21","nodeType":"YulLiteral","src":"12072:3:21","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"12057:3:21","nodeType":"YulIdentifier","src":"12057:3:21"},"nativeSrc":"12057:19:21","nodeType":"YulFunctionCall","src":"12057:19:21"},"variableNames":[{"name":"tail","nativeSrc":"12049:4:21","nodeType":"YulIdentifier","src":"12049:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12130:6:21","nodeType":"YulIdentifier","src":"12130:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"12143:9:21","nodeType":"YulIdentifier","src":"12143:9:21"},{"kind":"number","nativeSrc":"12154:1:21","nodeType":"YulLiteral","src":"12154:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12139:3:21","nodeType":"YulIdentifier","src":"12139:3:21"},"nativeSrc":"12139:17:21","nodeType":"YulFunctionCall","src":"12139:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12086:43:21","nodeType":"YulIdentifier","src":"12086:43:21"},"nativeSrc":"12086:71:21","nodeType":"YulFunctionCall","src":"12086:71:21"},"nativeSrc":"12086:71:21","nodeType":"YulExpressionStatement","src":"12086:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12211:6:21","nodeType":"YulIdentifier","src":"12211:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"12224:9:21","nodeType":"YulIdentifier","src":"12224:9:21"},{"kind":"number","nativeSrc":"12235:2:21","nodeType":"YulLiteral","src":"12235:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12220:3:21","nodeType":"YulIdentifier","src":"12220:3:21"},"nativeSrc":"12220:18:21","nodeType":"YulFunctionCall","src":"12220:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12167:43:21","nodeType":"YulIdentifier","src":"12167:43:21"},"nativeSrc":"12167:72:21","nodeType":"YulFunctionCall","src":"12167:72:21"},"nativeSrc":"12167:72:21","nodeType":"YulExpressionStatement","src":"12167:72:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12293:6:21","nodeType":"YulIdentifier","src":"12293:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"12306:9:21","nodeType":"YulIdentifier","src":"12306:9:21"},{"kind":"number","nativeSrc":"12317:2:21","nodeType":"YulLiteral","src":"12317:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12302:3:21","nodeType":"YulIdentifier","src":"12302:3:21"},"nativeSrc":"12302:18:21","nodeType":"YulFunctionCall","src":"12302:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12249:43:21","nodeType":"YulIdentifier","src":"12249:43:21"},"nativeSrc":"12249:72:21","nodeType":"YulFunctionCall","src":"12249:72:21"},"nativeSrc":"12249:72:21","nodeType":"YulExpressionStatement","src":"12249:72:21"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"12375:6:21","nodeType":"YulIdentifier","src":"12375:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"12388:9:21","nodeType":"YulIdentifier","src":"12388:9:21"},{"kind":"number","nativeSrc":"12399:2:21","nodeType":"YulLiteral","src":"12399:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12384:3:21","nodeType":"YulIdentifier","src":"12384:3:21"},"nativeSrc":"12384:18:21","nodeType":"YulFunctionCall","src":"12384:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12331:43:21","nodeType":"YulIdentifier","src":"12331:43:21"},"nativeSrc":"12331:72:21","nodeType":"YulFunctionCall","src":"12331:72:21"},"nativeSrc":"12331:72:21","nodeType":"YulExpressionStatement","src":"12331:72:21"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"12457:6:21","nodeType":"YulIdentifier","src":"12457:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"12470:9:21","nodeType":"YulIdentifier","src":"12470:9:21"},{"kind":"number","nativeSrc":"12481:3:21","nodeType":"YulLiteral","src":"12481:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12466:3:21","nodeType":"YulIdentifier","src":"12466:3:21"},"nativeSrc":"12466:19:21","nodeType":"YulFunctionCall","src":"12466:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12413:43:21","nodeType":"YulIdentifier","src":"12413:43:21"},"nativeSrc":"12413:73:21","nodeType":"YulFunctionCall","src":"12413:73:21"},"nativeSrc":"12413:73:21","nodeType":"YulExpressionStatement","src":"12413:73:21"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"12540:6:21","nodeType":"YulIdentifier","src":"12540:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"12553:9:21","nodeType":"YulIdentifier","src":"12553:9:21"},{"kind":"number","nativeSrc":"12564:3:21","nodeType":"YulLiteral","src":"12564:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12549:3:21","nodeType":"YulIdentifier","src":"12549:3:21"},"nativeSrc":"12549:19:21","nodeType":"YulFunctionCall","src":"12549:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12496:43:21","nodeType":"YulIdentifier","src":"12496:43:21"},"nativeSrc":"12496:73:21","nodeType":"YulFunctionCall","src":"12496:73:21"},"nativeSrc":"12496:73:21","nodeType":"YulExpressionStatement","src":"12496:73:21"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11801:775:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11971:9:21","nodeType":"YulTypedName","src":"11971:9:21","type":""},{"name":"value5","nativeSrc":"11983:6:21","nodeType":"YulTypedName","src":"11983:6:21","type":""},{"name":"value4","nativeSrc":"11991:6:21","nodeType":"YulTypedName","src":"11991:6:21","type":""},{"name":"value3","nativeSrc":"11999:6:21","nodeType":"YulTypedName","src":"11999:6:21","type":""},{"name":"value2","nativeSrc":"12007:6:21","nodeType":"YulTypedName","src":"12007:6:21","type":""},{"name":"value1","nativeSrc":"12015:6:21","nodeType":"YulTypedName","src":"12015:6:21","type":""},{"name":"value0","nativeSrc":"12023:6:21","nodeType":"YulTypedName","src":"12023:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12034:4:21","nodeType":"YulTypedName","src":"12034:4:21","type":""}],"src":"11801:775:21"},{"body":{"nativeSrc":"12708:206:21","nodeType":"YulBlock","src":"12708:206:21","statements":[{"nativeSrc":"12718:26:21","nodeType":"YulAssignment","src":"12718:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"12730:9:21","nodeType":"YulIdentifier","src":"12730:9:21"},{"kind":"number","nativeSrc":"12741:2:21","nodeType":"YulLiteral","src":"12741:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12726:3:21","nodeType":"YulIdentifier","src":"12726:3:21"},"nativeSrc":"12726:18:21","nodeType":"YulFunctionCall","src":"12726:18:21"},"variableNames":[{"name":"tail","nativeSrc":"12718:4:21","nodeType":"YulIdentifier","src":"12718:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12798:6:21","nodeType":"YulIdentifier","src":"12798:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"12811:9:21","nodeType":"YulIdentifier","src":"12811:9:21"},{"kind":"number","nativeSrc":"12822:1:21","nodeType":"YulLiteral","src":"12822:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12807:3:21","nodeType":"YulIdentifier","src":"12807:3:21"},"nativeSrc":"12807:17:21","nodeType":"YulFunctionCall","src":"12807:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12754:43:21","nodeType":"YulIdentifier","src":"12754:43:21"},"nativeSrc":"12754:71:21","nodeType":"YulFunctionCall","src":"12754:71:21"},"nativeSrc":"12754:71:21","nodeType":"YulExpressionStatement","src":"12754:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12879:6:21","nodeType":"YulIdentifier","src":"12879:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"12892:9:21","nodeType":"YulIdentifier","src":"12892:9:21"},{"kind":"number","nativeSrc":"12903:2:21","nodeType":"YulLiteral","src":"12903:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12888:3:21","nodeType":"YulIdentifier","src":"12888:3:21"},"nativeSrc":"12888:18:21","nodeType":"YulFunctionCall","src":"12888:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12835:43:21","nodeType":"YulIdentifier","src":"12835:43:21"},"nativeSrc":"12835:72:21","nodeType":"YulFunctionCall","src":"12835:72:21"},"nativeSrc":"12835:72:21","nodeType":"YulExpressionStatement","src":"12835:72:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"12582:332:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12672:9:21","nodeType":"YulTypedName","src":"12672:9:21","type":""},{"name":"value1","nativeSrc":"12684:6:21","nodeType":"YulTypedName","src":"12684:6:21","type":""},{"name":"value0","nativeSrc":"12692:6:21","nodeType":"YulTypedName","src":"12692:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12703:4:21","nodeType":"YulTypedName","src":"12703:4:21","type":""}],"src":"12582:332:21"},{"body":{"nativeSrc":"13074:288:21","nodeType":"YulBlock","src":"13074:288:21","statements":[{"nativeSrc":"13084:26:21","nodeType":"YulAssignment","src":"13084:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"13096:9:21","nodeType":"YulIdentifier","src":"13096:9:21"},{"kind":"number","nativeSrc":"13107:2:21","nodeType":"YulLiteral","src":"13107:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13092:3:21","nodeType":"YulIdentifier","src":"13092:3:21"},"nativeSrc":"13092:18:21","nodeType":"YulFunctionCall","src":"13092:18:21"},"variableNames":[{"name":"tail","nativeSrc":"13084:4:21","nodeType":"YulIdentifier","src":"13084:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13164:6:21","nodeType":"YulIdentifier","src":"13164:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"13177:9:21","nodeType":"YulIdentifier","src":"13177:9:21"},{"kind":"number","nativeSrc":"13188:1:21","nodeType":"YulLiteral","src":"13188:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13173:3:21","nodeType":"YulIdentifier","src":"13173:3:21"},"nativeSrc":"13173:17:21","nodeType":"YulFunctionCall","src":"13173:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13120:43:21","nodeType":"YulIdentifier","src":"13120:43:21"},"nativeSrc":"13120:71:21","nodeType":"YulFunctionCall","src":"13120:71:21"},"nativeSrc":"13120:71:21","nodeType":"YulExpressionStatement","src":"13120:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13245:6:21","nodeType":"YulIdentifier","src":"13245:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"13258:9:21","nodeType":"YulIdentifier","src":"13258:9:21"},{"kind":"number","nativeSrc":"13269:2:21","nodeType":"YulLiteral","src":"13269:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13254:3:21","nodeType":"YulIdentifier","src":"13254:3:21"},"nativeSrc":"13254:18:21","nodeType":"YulFunctionCall","src":"13254:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13201:43:21","nodeType":"YulIdentifier","src":"13201:43:21"},"nativeSrc":"13201:72:21","nodeType":"YulFunctionCall","src":"13201:72:21"},"nativeSrc":"13201:72:21","nodeType":"YulExpressionStatement","src":"13201:72:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"13327:6:21","nodeType":"YulIdentifier","src":"13327:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"13340:9:21","nodeType":"YulIdentifier","src":"13340:9:21"},{"kind":"number","nativeSrc":"13351:2:21","nodeType":"YulLiteral","src":"13351:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13336:3:21","nodeType":"YulIdentifier","src":"13336:3:21"},"nativeSrc":"13336:18:21","nodeType":"YulFunctionCall","src":"13336:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13283:43:21","nodeType":"YulIdentifier","src":"13283:43:21"},"nativeSrc":"13283:72:21","nodeType":"YulFunctionCall","src":"13283:72:21"},"nativeSrc":"13283:72:21","nodeType":"YulExpressionStatement","src":"13283:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12920:442:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13030:9:21","nodeType":"YulTypedName","src":"13030:9:21","type":""},{"name":"value2","nativeSrc":"13042:6:21","nodeType":"YulTypedName","src":"13042:6:21","type":""},{"name":"value1","nativeSrc":"13050:6:21","nodeType":"YulTypedName","src":"13050:6:21","type":""},{"name":"value0","nativeSrc":"13058:6:21","nodeType":"YulTypedName","src":"13058:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13069:4:21","nodeType":"YulTypedName","src":"13069:4:21","type":""}],"src":"12920:442:21"},{"body":{"nativeSrc":"13466:124:21","nodeType":"YulBlock","src":"13466:124:21","statements":[{"nativeSrc":"13476:26:21","nodeType":"YulAssignment","src":"13476:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"13488:9:21","nodeType":"YulIdentifier","src":"13488:9:21"},{"kind":"number","nativeSrc":"13499:2:21","nodeType":"YulLiteral","src":"13499:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13484:3:21","nodeType":"YulIdentifier","src":"13484:3:21"},"nativeSrc":"13484:18:21","nodeType":"YulFunctionCall","src":"13484:18:21"},"variableNames":[{"name":"tail","nativeSrc":"13476:4:21","nodeType":"YulIdentifier","src":"13476:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13556:6:21","nodeType":"YulIdentifier","src":"13556:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"13569:9:21","nodeType":"YulIdentifier","src":"13569:9:21"},{"kind":"number","nativeSrc":"13580:1:21","nodeType":"YulLiteral","src":"13580:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13565:3:21","nodeType":"YulIdentifier","src":"13565:3:21"},"nativeSrc":"13565:17:21","nodeType":"YulFunctionCall","src":"13565:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13512:43:21","nodeType":"YulIdentifier","src":"13512:43:21"},"nativeSrc":"13512:71:21","nodeType":"YulFunctionCall","src":"13512:71:21"},"nativeSrc":"13512:71:21","nodeType":"YulExpressionStatement","src":"13512:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"13368:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13438:9:21","nodeType":"YulTypedName","src":"13438:9:21","type":""},{"name":"value0","nativeSrc":"13450:6:21","nodeType":"YulTypedName","src":"13450:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13461:4:21","nodeType":"YulTypedName","src":"13461:4:21","type":""}],"src":"13368:222:21"},{"body":{"nativeSrc":"13624:152:21","nodeType":"YulBlock","src":"13624:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13641:1:21","nodeType":"YulLiteral","src":"13641:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"13644:77:21","nodeType":"YulLiteral","src":"13644:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13634:6:21","nodeType":"YulIdentifier","src":"13634:6:21"},"nativeSrc":"13634:88:21","nodeType":"YulFunctionCall","src":"13634:88:21"},"nativeSrc":"13634:88:21","nodeType":"YulExpressionStatement","src":"13634:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13738:1:21","nodeType":"YulLiteral","src":"13738:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"13741:4:21","nodeType":"YulLiteral","src":"13741:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"13731:6:21","nodeType":"YulIdentifier","src":"13731:6:21"},"nativeSrc":"13731:15:21","nodeType":"YulFunctionCall","src":"13731:15:21"},"nativeSrc":"13731:15:21","nodeType":"YulExpressionStatement","src":"13731:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13762:1:21","nodeType":"YulLiteral","src":"13762:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"13765:4:21","nodeType":"YulLiteral","src":"13765:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13755:6:21","nodeType":"YulIdentifier","src":"13755:6:21"},"nativeSrc":"13755:15:21","nodeType":"YulFunctionCall","src":"13755:15:21"},"nativeSrc":"13755:15:21","nodeType":"YulExpressionStatement","src":"13755:15:21"}]},"name":"panic_error_0x11","nativeSrc":"13596:180:21","nodeType":"YulFunctionDefinition","src":"13596:180:21"},{"body":{"nativeSrc":"13826:147:21","nodeType":"YulBlock","src":"13826:147:21","statements":[{"nativeSrc":"13836:25:21","nodeType":"YulAssignment","src":"13836:25:21","value":{"arguments":[{"name":"x","nativeSrc":"13859:1:21","nodeType":"YulIdentifier","src":"13859:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13841:17:21","nodeType":"YulIdentifier","src":"13841:17:21"},"nativeSrc":"13841:20:21","nodeType":"YulFunctionCall","src":"13841:20:21"},"variableNames":[{"name":"x","nativeSrc":"13836:1:21","nodeType":"YulIdentifier","src":"13836:1:21"}]},{"nativeSrc":"13870:25:21","nodeType":"YulAssignment","src":"13870:25:21","value":{"arguments":[{"name":"y","nativeSrc":"13893:1:21","nodeType":"YulIdentifier","src":"13893:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13875:17:21","nodeType":"YulIdentifier","src":"13875:17:21"},"nativeSrc":"13875:20:21","nodeType":"YulFunctionCall","src":"13875:20:21"},"variableNames":[{"name":"y","nativeSrc":"13870:1:21","nodeType":"YulIdentifier","src":"13870:1:21"}]},{"nativeSrc":"13904:16:21","nodeType":"YulAssignment","src":"13904:16:21","value":{"arguments":[{"name":"x","nativeSrc":"13915:1:21","nodeType":"YulIdentifier","src":"13915:1:21"},{"name":"y","nativeSrc":"13918:1:21","nodeType":"YulIdentifier","src":"13918:1:21"}],"functionName":{"name":"add","nativeSrc":"13911:3:21","nodeType":"YulIdentifier","src":"13911:3:21"},"nativeSrc":"13911:9:21","nodeType":"YulFunctionCall","src":"13911:9:21"},"variableNames":[{"name":"sum","nativeSrc":"13904:3:21","nodeType":"YulIdentifier","src":"13904:3:21"}]},{"body":{"nativeSrc":"13944:22:21","nodeType":"YulBlock","src":"13944:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13946:16:21","nodeType":"YulIdentifier","src":"13946:16:21"},"nativeSrc":"13946:18:21","nodeType":"YulFunctionCall","src":"13946:18:21"},"nativeSrc":"13946:18:21","nodeType":"YulExpressionStatement","src":"13946:18:21"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"13936:1:21","nodeType":"YulIdentifier","src":"13936:1:21"},{"name":"sum","nativeSrc":"13939:3:21","nodeType":"YulIdentifier","src":"13939:3:21"}],"functionName":{"name":"gt","nativeSrc":"13933:2:21","nodeType":"YulIdentifier","src":"13933:2:21"},"nativeSrc":"13933:10:21","nodeType":"YulFunctionCall","src":"13933:10:21"},"nativeSrc":"13930:36:21","nodeType":"YulIf","src":"13930:36:21"}]},"name":"checked_add_t_uint256","nativeSrc":"13782:191:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13813:1:21","nodeType":"YulTypedName","src":"13813:1:21","type":""},{"name":"y","nativeSrc":"13816:1:21","nodeType":"YulTypedName","src":"13816:1:21","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"13822:3:21","nodeType":"YulTypedName","src":"13822:3:21","type":""}],"src":"13782:191:21"},{"body":{"nativeSrc":"14189:454:21","nodeType":"YulBlock","src":"14189:454:21","statements":[{"nativeSrc":"14199:27:21","nodeType":"YulAssignment","src":"14199:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"14211:9:21","nodeType":"YulIdentifier","src":"14211:9:21"},{"kind":"number","nativeSrc":"14222:3:21","nodeType":"YulLiteral","src":"14222:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"14207:3:21","nodeType":"YulIdentifier","src":"14207:3:21"},"nativeSrc":"14207:19:21","nodeType":"YulFunctionCall","src":"14207:19:21"},"variableNames":[{"name":"tail","nativeSrc":"14199:4:21","nodeType":"YulIdentifier","src":"14199:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14280:6:21","nodeType":"YulIdentifier","src":"14280:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"14293:9:21","nodeType":"YulIdentifier","src":"14293:9:21"},{"kind":"number","nativeSrc":"14304:1:21","nodeType":"YulLiteral","src":"14304:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14289:3:21","nodeType":"YulIdentifier","src":"14289:3:21"},"nativeSrc":"14289:17:21","nodeType":"YulFunctionCall","src":"14289:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14236:43:21","nodeType":"YulIdentifier","src":"14236:43:21"},"nativeSrc":"14236:71:21","nodeType":"YulFunctionCall","src":"14236:71:21"},"nativeSrc":"14236:71:21","nodeType":"YulExpressionStatement","src":"14236:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14361:6:21","nodeType":"YulIdentifier","src":"14361:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"14374:9:21","nodeType":"YulIdentifier","src":"14374:9:21"},{"kind":"number","nativeSrc":"14385:2:21","nodeType":"YulLiteral","src":"14385:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14370:3:21","nodeType":"YulIdentifier","src":"14370:3:21"},"nativeSrc":"14370:18:21","nodeType":"YulFunctionCall","src":"14370:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14317:43:21","nodeType":"YulIdentifier","src":"14317:43:21"},"nativeSrc":"14317:72:21","nodeType":"YulFunctionCall","src":"14317:72:21"},"nativeSrc":"14317:72:21","nodeType":"YulExpressionStatement","src":"14317:72:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"14443:6:21","nodeType":"YulIdentifier","src":"14443:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"14456:9:21","nodeType":"YulIdentifier","src":"14456:9:21"},{"kind":"number","nativeSrc":"14467:2:21","nodeType":"YulLiteral","src":"14467:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14452:3:21","nodeType":"YulIdentifier","src":"14452:3:21"},"nativeSrc":"14452:18:21","nodeType":"YulFunctionCall","src":"14452:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14399:43:21","nodeType":"YulIdentifier","src":"14399:43:21"},"nativeSrc":"14399:72:21","nodeType":"YulFunctionCall","src":"14399:72:21"},"nativeSrc":"14399:72:21","nodeType":"YulExpressionStatement","src":"14399:72:21"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"14525:6:21","nodeType":"YulIdentifier","src":"14525:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"14538:9:21","nodeType":"YulIdentifier","src":"14538:9:21"},{"kind":"number","nativeSrc":"14549:2:21","nodeType":"YulLiteral","src":"14549:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14534:3:21","nodeType":"YulIdentifier","src":"14534:3:21"},"nativeSrc":"14534:18:21","nodeType":"YulFunctionCall","src":"14534:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14481:43:21","nodeType":"YulIdentifier","src":"14481:43:21"},"nativeSrc":"14481:72:21","nodeType":"YulFunctionCall","src":"14481:72:21"},"nativeSrc":"14481:72:21","nodeType":"YulExpressionStatement","src":"14481:72:21"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"14607:6:21","nodeType":"YulIdentifier","src":"14607:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"14620:9:21","nodeType":"YulIdentifier","src":"14620:9:21"},{"kind":"number","nativeSrc":"14631:3:21","nodeType":"YulLiteral","src":"14631:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14616:3:21","nodeType":"YulIdentifier","src":"14616:3:21"},"nativeSrc":"14616:19:21","nodeType":"YulFunctionCall","src":"14616:19:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14563:43:21","nodeType":"YulIdentifier","src":"14563:43:21"},"nativeSrc":"14563:73:21","nodeType":"YulFunctionCall","src":"14563:73:21"},"nativeSrc":"14563:73:21","nodeType":"YulExpressionStatement","src":"14563:73:21"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"13979:664:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14129:9:21","nodeType":"YulTypedName","src":"14129:9:21","type":""},{"name":"value4","nativeSrc":"14141:6:21","nodeType":"YulTypedName","src":"14141:6:21","type":""},{"name":"value3","nativeSrc":"14149:6:21","nodeType":"YulTypedName","src":"14149:6:21","type":""},{"name":"value2","nativeSrc":"14157:6:21","nodeType":"YulTypedName","src":"14157:6:21","type":""},{"name":"value1","nativeSrc":"14165:6:21","nodeType":"YulTypedName","src":"14165:6:21","type":""},{"name":"value0","nativeSrc":"14173:6:21","nodeType":"YulTypedName","src":"14173:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14184:4:21","nodeType":"YulTypedName","src":"14184:4:21","type":""}],"src":"13979:664:21"},{"body":{"nativeSrc":"14827:367:21","nodeType":"YulBlock","src":"14827:367:21","statements":[{"nativeSrc":"14837:27:21","nodeType":"YulAssignment","src":"14837:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"14849:9:21","nodeType":"YulIdentifier","src":"14849:9:21"},{"kind":"number","nativeSrc":"14860:3:21","nodeType":"YulLiteral","src":"14860:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14845:3:21","nodeType":"YulIdentifier","src":"14845:3:21"},"nativeSrc":"14845:19:21","nodeType":"YulFunctionCall","src":"14845:19:21"},"variableNames":[{"name":"tail","nativeSrc":"14837:4:21","nodeType":"YulIdentifier","src":"14837:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14918:6:21","nodeType":"YulIdentifier","src":"14918:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"14931:9:21","nodeType":"YulIdentifier","src":"14931:9:21"},{"kind":"number","nativeSrc":"14942:1:21","nodeType":"YulLiteral","src":"14942:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14927:3:21","nodeType":"YulIdentifier","src":"14927:3:21"},"nativeSrc":"14927:17:21","nodeType":"YulFunctionCall","src":"14927:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14874:43:21","nodeType":"YulIdentifier","src":"14874:43:21"},"nativeSrc":"14874:71:21","nodeType":"YulFunctionCall","src":"14874:71:21"},"nativeSrc":"14874:71:21","nodeType":"YulExpressionStatement","src":"14874:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14995:6:21","nodeType":"YulIdentifier","src":"14995:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"15008:9:21","nodeType":"YulIdentifier","src":"15008:9:21"},{"kind":"number","nativeSrc":"15019:2:21","nodeType":"YulLiteral","src":"15019:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15004:3:21","nodeType":"YulIdentifier","src":"15004:3:21"},"nativeSrc":"15004:18:21","nodeType":"YulFunctionCall","src":"15004:18:21"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"14955:39:21","nodeType":"YulIdentifier","src":"14955:39:21"},"nativeSrc":"14955:68:21","nodeType":"YulFunctionCall","src":"14955:68:21"},"nativeSrc":"14955:68:21","nodeType":"YulExpressionStatement","src":"14955:68:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15077:6:21","nodeType":"YulIdentifier","src":"15077:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"15090:9:21","nodeType":"YulIdentifier","src":"15090:9:21"},{"kind":"number","nativeSrc":"15101:2:21","nodeType":"YulLiteral","src":"15101:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15086:3:21","nodeType":"YulIdentifier","src":"15086:3:21"},"nativeSrc":"15086:18:21","nodeType":"YulFunctionCall","src":"15086:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15033:43:21","nodeType":"YulIdentifier","src":"15033:43:21"},"nativeSrc":"15033:72:21","nodeType":"YulFunctionCall","src":"15033:72:21"},"nativeSrc":"15033:72:21","nodeType":"YulExpressionStatement","src":"15033:72:21"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"15159:6:21","nodeType":"YulIdentifier","src":"15159:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"15172:9:21","nodeType":"YulIdentifier","src":"15172:9:21"},{"kind":"number","nativeSrc":"15183:2:21","nodeType":"YulLiteral","src":"15183:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15168:3:21","nodeType":"YulIdentifier","src":"15168:3:21"},"nativeSrc":"15168:18:21","nodeType":"YulFunctionCall","src":"15168:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15115:43:21","nodeType":"YulIdentifier","src":"15115:43:21"},"nativeSrc":"15115:72:21","nodeType":"YulFunctionCall","src":"15115:72:21"},"nativeSrc":"15115:72:21","nodeType":"YulExpressionStatement","src":"15115:72:21"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"14649:545:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14775:9:21","nodeType":"YulTypedName","src":"14775:9:21","type":""},{"name":"value3","nativeSrc":"14787:6:21","nodeType":"YulTypedName","src":"14787:6:21","type":""},{"name":"value2","nativeSrc":"14795:6:21","nodeType":"YulTypedName","src":"14795:6:21","type":""},{"name":"value1","nativeSrc":"14803:6:21","nodeType":"YulTypedName","src":"14803:6:21","type":""},{"name":"value0","nativeSrc":"14811:6:21","nodeType":"YulTypedName","src":"14811:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14822:4:21","nodeType":"YulTypedName","src":"14822:4:21","type":""}],"src":"14649:545:21"},{"body":{"nativeSrc":"15228:152:21","nodeType":"YulBlock","src":"15228:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15245:1:21","nodeType":"YulLiteral","src":"15245:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"15248:77:21","nodeType":"YulLiteral","src":"15248:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15238:6:21","nodeType":"YulIdentifier","src":"15238:6:21"},"nativeSrc":"15238:88:21","nodeType":"YulFunctionCall","src":"15238:88:21"},"nativeSrc":"15238:88:21","nodeType":"YulExpressionStatement","src":"15238:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15342:1:21","nodeType":"YulLiteral","src":"15342:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"15345:4:21","nodeType":"YulLiteral","src":"15345:4:21","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"15335:6:21","nodeType":"YulIdentifier","src":"15335:6:21"},"nativeSrc":"15335:15:21","nodeType":"YulFunctionCall","src":"15335:15:21"},"nativeSrc":"15335:15:21","nodeType":"YulExpressionStatement","src":"15335:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15366:1:21","nodeType":"YulLiteral","src":"15366:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"15369:4:21","nodeType":"YulLiteral","src":"15369:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15359:6:21","nodeType":"YulIdentifier","src":"15359:6:21"},"nativeSrc":"15359:15:21","nodeType":"YulFunctionCall","src":"15359:15:21"},"nativeSrc":"15359:15:21","nodeType":"YulExpressionStatement","src":"15359:15:21"}]},"name":"panic_error_0x21","nativeSrc":"15200:180:21","nodeType":"YulFunctionDefinition","src":"15200:180:21"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3232":[{"length":32,"start":2633}],"3234":[{"length":32,"start":2592}],"3236":[{"length":32,"start":2506}],"3238":[{"length":32,"start":4094}],"3240":[{"length":32,"start":4127}],"3243":[{"length":32,"start":2767}],"3246":[{"length":32,"start":2826}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610269578063a9059cbb14610287578063d505accf146102b7578063dd62ed3e146102d3576100ea565b806370a08231146101e55780637ecebe001461021557806384b0196e14610245576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b5780633644e515146101a957806354fd4d50146101c7576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f7610303565b604051610104919061150c565b60405180910390f35b610127600480360381019061012291906115c7565b610395565b6040516101349190611622565b60405180910390f35b6101456103b8565b604051610152919061164c565b60405180910390f35b61017560048036038101906101709190611667565b6103c2565b6040516101829190611622565b60405180910390f35b6101936103f1565b6040516101a091906116d6565b60405180910390f35b6101b16103fa565b6040516101be919061170a565b60405180910390f35b6101cf610409565b6040516101dc919061150c565b60405180910390f35b6101ff60048036038101906101fa9190611725565b61049b565b60405161020c919061164c565b60405180910390f35b61022f600480360381019061022a9190611725565b6104e3565b60405161023c919061164c565b60405180910390f35b61024d6104f5565b604051610260979695949392919061185a565b60405180910390f35b61027161059f565b60405161027e919061150c565b60405180910390f35b6102a1600480360381019061029c91906115c7565b610631565b6040516102ae9190611622565b60405180910390f35b6102d160048036038101906102cc9190611936565b610654565b005b6102ed60048036038101906102e891906119d8565b61079c565b6040516102fa919061164c565b60405180910390f35b60606003805461031290611a47565b80601f016020809104026020016040519081016040528092919081815260200182805461033e90611a47565b801561038b5780601f106103605761010080835404028352916020019161038b565b820191906000526020600020905b81548152906001019060200180831161036e57829003601f168201915b5050505050905090565b6000806103a0610823565b90506103ad81858561082b565b600191505092915050565b6000600254905090565b6000806103cd610823565b90506103da85828561083d565b6103e58585856108d2565b60019150509392505050565b60006012905090565b60006104046109c6565b905090565b60606008805461041890611a47565b80601f016020809104026020016040519081016040528092919081815260200182805461044490611a47565b80156104915780601f1061046657610100808354040283529160200191610491565b820191906000526020600020905b81548152906001019060200180831161047457829003601f168201915b5050505050905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006104ee82610a7d565b9050919050565b600060608060008060006060610509610ac6565b610511610b01565b46306000801b600067ffffffffffffffff81111561053257610531611a78565b5b6040519080825280602002602001820160405280156105605781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6060600480546105ae90611a47565b80601f01602080910402602001604051908101604052809291908181526020018280546105da90611a47565b80156106275780601f106105fc57610100808354040283529160200191610627565b820191906000526020600020905b81548152906001019060200180831161060a57829003601f168201915b5050505050905090565b60008061063c610823565b90506106498185856108d2565b600191505092915050565b8342111561069957836040517f62791302000000000000000000000000000000000000000000000000000000008152600401610690919061164c565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106c88c610b3c565b896040516020016106de96959493929190611aa7565b604051602081830303815290604052805190602001209050600061070182610b93565b9050600061071182878787610bad565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461078557808a6040517f4b800e4600000000000000000000000000000000000000000000000000000000815260040161077c929190611b08565b60405180910390fd5b6107908a8a8a61082b565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6108388383836001610bdd565b505050565b6000610849848461079c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108cc57818110156108bc578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108b393929190611b31565b60405180910390fd5b6108cb84848484036000610bdd565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109445760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161093b9190611b68565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109b65760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109ad9190611b68565b60405180910390fd5b6109c1838383610db4565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610a4257507f000000000000000000000000000000000000000000000000000000000000000046145b15610a6f577f00000000000000000000000000000000000000000000000000000000000000009050610a7a565b610a77610fd9565b90505b90565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060610afc60057f000000000000000000000000000000000000000000000000000000000000000061106f90919063ffffffff16565b905090565b6060610b3760067f000000000000000000000000000000000000000000000000000000000000000061106f90919063ffffffff16565b905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b6000610ba6610ba06109c6565b8361111f565b9050919050565b600080600080610bbf88888888611160565b925092509250610bcf8282611254565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c4f5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c469190611b68565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cc15760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cb89190611b68565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610dae578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610da5919061164c565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e06578060026000828254610dfa9190611bb2565b92505081905550610ed9565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e92578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e8993929190611b31565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f225780600260008282540392505081905550610f6f565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fcc919061164c565b60405180910390a3505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611054959493929190611be6565b60405160208183030381529060405280519060200120905090565b606060ff60001b831461108c57611085836113b8565b9050611119565b81805461109890611a47565b80601f01602080910402602001604051908101604052809291908181526020018280546110c490611a47565b80156111115780601f106110e657610100808354040283529160200191611111565b820191906000526020600020905b8154815290600101906020018083116110f457829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156111a057600060038592509250925061124a565b6000600188888888604051600081526020016040526040516111c59493929190611c39565b6020604051602081039080840390855afa1580156111e7573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361123b57600060016000801b9350935093505061124a565b8060008060001b935093509350505b9450945094915050565b6000600381111561126857611267611c7e565b5b82600381111561127b5761127a611c7e565b5b03156113b4576001600381111561129557611294611c7e565b5b8260038111156112a8576112a7611c7e565b5b036112df576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156112f3576112f2611c7e565b5b82600381111561130657611305611c7e565b5b0361134b578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611342919061164c565b60405180910390fd5b60038081111561135e5761135d611c7e565b5b82600381111561137157611370611c7e565b5b036113b357806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016113aa919061170a565b60405180910390fd5b5b5050565b606060006113c58361142c565b90506000602067ffffffffffffffff8111156113e4576113e3611a78565b5b6040519080825280601f01601f1916602001820160405280156114165781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f811115611473576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114b657808201518184015260208101905061149b565b60008484015250505050565b6000601f19601f8301169050919050565b60006114de8261147c565b6114e88185611487565b93506114f8818560208601611498565b611501816114c2565b840191505092915050565b6000602082019050818103600083015261152681846114d3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061155e82611533565b9050919050565b61156e81611553565b811461157957600080fd5b50565b60008135905061158b81611565565b92915050565b6000819050919050565b6115a481611591565b81146115af57600080fd5b50565b6000813590506115c18161159b565b92915050565b600080604083850312156115de576115dd61152e565b5b60006115ec8582860161157c565b92505060206115fd858286016115b2565b9150509250929050565b60008115159050919050565b61161c81611607565b82525050565b60006020820190506116376000830184611613565b92915050565b61164681611591565b82525050565b6000602082019050611661600083018461163d565b92915050565b6000806000606084860312156116805761167f61152e565b5b600061168e8682870161157c565b935050602061169f8682870161157c565b92505060406116b0868287016115b2565b9150509250925092565b600060ff82169050919050565b6116d0816116ba565b82525050565b60006020820190506116eb60008301846116c7565b92915050565b6000819050919050565b611704816116f1565b82525050565b600060208201905061171f60008301846116fb565b92915050565b60006020828403121561173b5761173a61152e565b5b60006117498482850161157c565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61178781611752565b82525050565b61179681611553565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6117d181611591565b82525050565b60006117e383836117c8565b60208301905092915050565b6000602082019050919050565b60006118078261179c565b61181181856117a7565b935061181c836117b8565b8060005b8381101561184d57815161183488826117d7565b975061183f836117ef565b925050600181019050611820565b5085935050505092915050565b600060e08201905061186f600083018a61177e565b818103602083015261188181896114d3565b9050818103604083015261189581886114d3565b90506118a4606083018761163d565b6118b1608083018661178d565b6118be60a08301856116fb565b81810360c08301526118d081846117fc565b905098975050505050505050565b6118e7816116ba565b81146118f257600080fd5b50565b600081359050611904816118de565b92915050565b611913816116f1565b811461191e57600080fd5b50565b6000813590506119308161190a565b92915050565b600080600080600080600060e0888a0312156119555761195461152e565b5b60006119638a828b0161157c565b97505060206119748a828b0161157c565b96505060406119858a828b016115b2565b95505060606119968a828b016115b2565b94505060806119a78a828b016118f5565b93505060a06119b88a828b01611921565b92505060c06119c98a828b01611921565b91505092959891949750929550565b600080604083850312156119ef576119ee61152e565b5b60006119fd8582860161157c565b9250506020611a0e8582860161157c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a5f57607f821691505b602082108103611a7257611a71611a18565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060c082019050611abc60008301896116fb565b611ac9602083018861178d565b611ad6604083018761178d565b611ae3606083018661163d565b611af0608083018561163d565b611afd60a083018461163d565b979650505050505050565b6000604082019050611b1d600083018561178d565b611b2a602083018461178d565b9392505050565b6000606082019050611b46600083018661178d565b611b53602083018561163d565b611b60604083018461163d565b949350505050565b6000602082019050611b7d600083018461178d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bbd82611591565b9150611bc883611591565b9250828201905080821115611be057611bdf611b83565b5b92915050565b600060a082019050611bfb60008301886116fb565b611c0860208301876116fb565b611c1560408301866116fb565b611c22606083018561163d565b611c2f608083018461178d565b9695505050505050565b6000608082019050611c4e60008301876116fb565b611c5b60208301866116c7565b611c6860408301856116fb565b611c7560608301846116fb565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220521ac1b9e636887c377f9268e22c862c80329411bb0905f38a3b78447aaeb31264736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x245 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x1C7 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x409 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x185A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x19D8 JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x312 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33E SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x38B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x360 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x38B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3A0 PUSH2 0x823 JUMP JUMPDEST SWAP1 POP PUSH2 0x3AD DUP2 DUP6 DUP6 PUSH2 0x82B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3CD PUSH2 0x823 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DA DUP6 DUP3 DUP6 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x3E5 DUP6 DUP6 DUP6 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 PUSH2 0x9C6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x418 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x444 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x491 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x466 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x491 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x474 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EE DUP3 PUSH2 0xA7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x509 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x511 PUSH2 0xB01 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x532 JUMPI PUSH2 0x531 PUSH2 0x1A78 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x560 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5AE SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DA SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x627 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x627 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x60A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x63C PUSH2 0x823 JUMP JUMPDEST SWAP1 POP PUSH2 0x649 DUP2 DUP6 DUP6 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x699 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x690 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6C8 DUP13 PUSH2 0xB3C JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6DE SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x701 DUP3 PUSH2 0xB93 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x711 DUP3 DUP8 DUP8 DUP8 PUSH2 0xBAD JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x785 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77C SWAP3 SWAP2 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x790 DUP11 DUP11 DUP11 PUSH2 0x82B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x838 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBDD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x849 DUP5 DUP5 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x8CC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8BC JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CB DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xBDD JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x944 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93B SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9B6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AD SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C1 DUP4 DUP4 DUP4 PUSH2 0xDB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xA42 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xA6F JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xA7A JUMP JUMPDEST PUSH2 0xA77 PUSH2 0xFD9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAFC PUSH1 0x5 PUSH32 0x0 PUSH2 0x106F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB37 PUSH1 0x6 PUSH32 0x0 PUSH2 0x106F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA6 PUSH2 0xBA0 PUSH2 0x9C6 JUMP JUMPDEST DUP4 PUSH2 0x111F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xBBF DUP9 DUP9 DUP9 DUP9 PUSH2 0x1160 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xBCF DUP3 DUP3 PUSH2 0x1254 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC4F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC46 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCC1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDAE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDA5 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE06 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDFA SWAP2 SWAP1 PUSH2 0x1BB2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xED9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE92 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE89 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF22 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF6F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFCC SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1054 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x108C JUMPI PUSH2 0x1085 DUP4 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1119 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1098 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10C4 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1111 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1111 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x11A0 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x124A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x11C5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x123B JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x124A JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1268 JUMPI PUSH2 0x1267 PUSH2 0x1C7E JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x127B JUMPI PUSH2 0x127A PUSH2 0x1C7E JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x13B4 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1295 JUMPI PUSH2 0x1294 PUSH2 0x1C7E JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12A8 JUMPI PUSH2 0x12A7 PUSH2 0x1C7E JUMP JUMPDEST JUMPDEST SUB PUSH2 0x12DF JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12F3 JUMPI PUSH2 0x12F2 PUSH2 0x1C7E JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1306 JUMPI PUSH2 0x1305 PUSH2 0x1C7E JUMP JUMPDEST JUMPDEST SUB PUSH2 0x134B JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1342 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x135E JUMPI PUSH2 0x135D PUSH2 0x1C7E JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1371 JUMPI PUSH2 0x1370 PUSH2 0x1C7E JUMP JUMPDEST JUMPDEST SUB PUSH2 0x13B3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AA SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x13C5 DUP4 PUSH2 0x142C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E4 JUMPI PUSH2 0x13E3 PUSH2 0x1A78 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1416 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1473 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14B6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x149B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DE DUP3 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x14E8 DUP2 DUP6 PUSH2 0x1487 JUMP JUMPDEST SWAP4 POP PUSH2 0x14F8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1498 JUMP JUMPDEST PUSH2 0x1501 DUP2 PUSH2 0x14C2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1526 DUP2 DUP5 PUSH2 0x14D3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155E DUP3 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x156E DUP2 PUSH2 0x1553 JUMP JUMPDEST DUP2 EQ PUSH2 0x1579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x158B DUP2 PUSH2 0x1565 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A4 DUP2 PUSH2 0x1591 JUMP JUMPDEST DUP2 EQ PUSH2 0x15AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15C1 DUP2 PUSH2 0x159B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15DE JUMPI PUSH2 0x15DD PUSH2 0x152E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15EC DUP6 DUP3 DUP7 ADD PUSH2 0x157C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15FD DUP6 DUP3 DUP7 ADD PUSH2 0x15B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x1607 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1637 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1646 DUP2 PUSH2 0x1591 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1661 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x163D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1680 JUMPI PUSH2 0x167F PUSH2 0x152E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x168E DUP7 DUP3 DUP8 ADD PUSH2 0x157C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x169F DUP7 DUP3 DUP8 ADD PUSH2 0x157C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16B0 DUP7 DUP3 DUP8 ADD PUSH2 0x15B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D0 DUP2 PUSH2 0x16BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1704 DUP2 PUSH2 0x16F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x171F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173B JUMPI PUSH2 0x173A PUSH2 0x152E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1749 DUP5 DUP3 DUP6 ADD PUSH2 0x157C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1787 DUP2 PUSH2 0x1752 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1796 DUP2 PUSH2 0x1553 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17D1 DUP2 PUSH2 0x1591 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E3 DUP4 DUP4 PUSH2 0x17C8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1807 DUP3 PUSH2 0x179C JUMP JUMPDEST PUSH2 0x1811 DUP2 DUP6 PUSH2 0x17A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x181C DUP4 PUSH2 0x17B8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x184D JUMPI DUP2 MLOAD PUSH2 0x1834 DUP9 DUP3 PUSH2 0x17D7 JUMP JUMPDEST SWAP8 POP PUSH2 0x183F DUP4 PUSH2 0x17EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1820 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x186F PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x177E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1881 DUP2 DUP10 PUSH2 0x14D3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1895 DUP2 DUP9 PUSH2 0x14D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x18A4 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x18B1 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x18BE PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x16FB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x18D0 DUP2 DUP5 PUSH2 0x17FC JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18E7 DUP2 PUSH2 0x16BA JUMP JUMPDEST DUP2 EQ PUSH2 0x18F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1904 DUP2 PUSH2 0x18DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1913 DUP2 PUSH2 0x16F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x191E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1930 DUP2 PUSH2 0x190A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1955 JUMPI PUSH2 0x1954 PUSH2 0x152E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1963 DUP11 DUP3 DUP12 ADD PUSH2 0x157C JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1974 DUP11 DUP3 DUP12 ADD PUSH2 0x157C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1985 DUP11 DUP3 DUP12 ADD PUSH2 0x15B2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1996 DUP11 DUP3 DUP12 ADD PUSH2 0x15B2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x19A7 DUP11 DUP3 DUP12 ADD PUSH2 0x18F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x19B8 DUP11 DUP3 DUP12 ADD PUSH2 0x1921 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x19C9 DUP11 DUP3 DUP12 ADD PUSH2 0x1921 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19EF JUMPI PUSH2 0x19EE PUSH2 0x152E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19FD DUP6 DUP3 DUP7 ADD PUSH2 0x157C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A0E DUP6 DUP3 DUP7 ADD PUSH2 0x157C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A5F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A72 JUMPI PUSH2 0x1A71 PUSH2 0x1A18 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1ABC PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x1AC9 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x1AD6 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x1AE3 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x1AF0 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x1AFD PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x163D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B1D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x1B2A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x178D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B46 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x1B53 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x1B60 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x163D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B7D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x178D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BBD DUP3 PUSH2 0x1591 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC8 DUP4 PUSH2 0x1591 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BE0 JUMPI PUSH2 0x1BDF PUSH2 0x1B83 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1BFB PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x1C08 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x1C15 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x1C22 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x1C2F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x178D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1C4E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x1C5B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x1C68 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x1C75 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x16FB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE BYTE 0xC1 0xB9 0xE6 CALLDATASIZE DUP9 PUSH29 0x377F9268E22C862C80329411BB0905F38A3B78447AAEB31264736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"132:371:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2614:112:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;414:87:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2379:143:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5228:557:14;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:672:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3455:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;2614:112:4:-;2673:7;2699:20;:18;:20::i;:::-;2692:27;;2614:112;:::o;414:87:19:-;454:13;486:8;479:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;414:87;:::o;2933:116:2:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2379:143:4:-;2470:7;2496:19;2509:5;2496:12;:19::i;:::-;2489:26;;2379:143;;;:::o;5228:557:14:-;5326:13;5353:18;5385:21;5420:15;5449:25;5488:12;5514:27;5617:13;:11;:13::i;:::-;5644:16;:14;:16::i;:::-;5674:13;5709:4;5736:1;5728:10;;5766:1;5752:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5566:212;;;;;;;;;;;;;;;;;;;;;5228:557;;;;;;;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3244:178::-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;1668:672:4:-;1889:8;1871:15;:26;1867:97;;;1944:8;1920:33;;;;;;;;;;;:::i;:::-;;;;;;;;1867:97;1974:18;1024:95;2033:5;2040:7;2049:5;2056:16;2066:5;2056:9;:16::i;:::-;2074:8;2005:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1995:89;;;;;;1974:110;;2095:12;2110:28;2127:10;2110:16;:28::i;:::-;2095:43;;2149:14;2166:28;2180:4;2186:1;2189;2192;2166:13;:28::i;:::-;2149:45;;2218:5;2208:15;;:6;:15;;;2204:88;;2267:6;2275:5;2246:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2204:88;2302:31;2311:5;2318:7;2327:5;2302:8;:31::i;:::-;1857:483;;;1668:672;;;;;;;:::o;3455:140:2:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8630:128:2:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;3945:262:14:-;3998:7;4038:11;4021:28;;4029:4;4021:28;;;:63;;;;;4070:14;4053:13;:31;4021:63;4017:184;;;4107:22;4100:29;;;;4017:184;4167:23;:21;:23::i;:::-;4160:30;;3945:262;;:::o;538:107:8:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6105:126:14:-;6151:13;6183:41;6210:13;6183:5;:26;;:41;;;;:::i;:::-;6176:48;;6105:126;:::o;6557:135::-;6606:13;6638:47;6668:16;6638:8;:29;;:47;;;;:::i;:::-;6631:54;;6557:135;:::o;759:395:8:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;5017:176:14:-;5094:7;5120:66;5153:20;:18;:20::i;:::-;5175:10;5120:32;:66::i;:::-;5113:73;;5017:176;;;:::o;6887:260:13:-;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;7131:9;7124:16;;;;;6887:260;;;;;;:::o;9605:432:2:-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;4213:179:14:-;4268:7;2079:95;4326:11;4339:14;4355:13;4378:4;4304:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;:::o;3368:267:10:-;3462:13;1390:66;3520:17;;3510:5;3491:46;3487:142;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3487:142;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3368:267;;;;;:::o;3874:374:15:-;3967:14;4049:4;4043:11;4079:10;4074:3;4067:23;4126:15;4119:4;4114:3;4110:14;4103:39;4178:10;4171:4;4166:3;4162:14;4155:34;4227:4;4222:3;4212:20;4202:30;;4018:224;3874:374;;;;:::o;5203:1551:13:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;2078:378:10:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2375:3;2370;2363:16;2415:4;2408;2403:3;2399:14;2392:28;2446:3;2439:10;;;;2078:378;;;:::o;2528:245::-;2589:7;2608:14;2661:4;2652;2625:33;;:40;2608:57;;2688:2;2679:6;:11;2675:69;;;2713:20;;;;;;;;;;;;;;2675:69;2760:6;2753:13;;;2528:245;;;:::o;7:99:21:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:77::-;4892:7;4921:5;4910:16;;4855:77;;;:::o;4938:118::-;5025:24;5043:5;5025:24;:::i;:::-;5020:3;5013:37;4938:118;;:::o;5062:222::-;5155:4;5193:2;5182:9;5178:18;5170:26;;5206:71;5274:1;5263:9;5259:17;5250:6;5206:71;:::i;:::-;5062:222;;;;:::o;5290:329::-;5349:6;5398:2;5386:9;5377:7;5373:23;5369:32;5366:119;;;5404:79;;:::i;:::-;5366:119;5524:1;5549:53;5594:7;5585:6;5574:9;5570:22;5549:53;:::i;:::-;5539:63;;5495:117;5290:329;;;;:::o;5625:149::-;5661:7;5701:66;5694:5;5690:78;5679:89;;5625:149;;;:::o;5780:115::-;5865:23;5882:5;5865:23;:::i;:::-;5860:3;5853:36;5780:115;;:::o;5901:118::-;5988:24;6006:5;5988:24;:::i;:::-;5983:3;5976:37;5901:118;;:::o;6025:114::-;6092:6;6126:5;6120:12;6110:22;;6025:114;;;:::o;6145:184::-;6244:11;6278:6;6273:3;6266:19;6318:4;6313:3;6309:14;6294:29;;6145:184;;;;:::o;6335:132::-;6402:4;6425:3;6417:11;;6455:4;6450:3;6446:14;6438:22;;6335:132;;;:::o;6473:108::-;6550:24;6568:5;6550:24;:::i;:::-;6545:3;6538:37;6473:108;;:::o;6587:179::-;6656:10;6677:46;6719:3;6711:6;6677:46;:::i;:::-;6755:4;6750:3;6746:14;6732:28;;6587:179;;;;:::o;6772:113::-;6842:4;6874;6869:3;6865:14;6857:22;;6772:113;;;:::o;6921:732::-;7040:3;7069:54;7117:5;7069:54;:::i;:::-;7139:86;7218:6;7213:3;7139:86;:::i;:::-;7132:93;;7249:56;7299:5;7249:56;:::i;:::-;7328:7;7359:1;7344:284;7369:6;7366:1;7363:13;7344:284;;;7445:6;7439:13;7472:63;7531:3;7516:13;7472:63;:::i;:::-;7465:70;;7558:60;7611:6;7558:60;:::i;:::-;7548:70;;7404:224;7391:1;7388;7384:9;7379:14;;7344:284;;;7348:14;7644:3;7637:10;;7045:608;;;6921:732;;;;:::o;7659:1215::-;8008:4;8046:3;8035:9;8031:19;8023:27;;8060:69;8126:1;8115:9;8111:17;8102:6;8060:69;:::i;:::-;8176:9;8170:4;8166:20;8161:2;8150:9;8146:18;8139:48;8204:78;8277:4;8268:6;8204:78;:::i;:::-;8196:86;;8329:9;8323:4;8319:20;8314:2;8303:9;8299:18;8292:48;8357:78;8430:4;8421:6;8357:78;:::i;:::-;8349:86;;8445:72;8513:2;8502:9;8498:18;8489:6;8445:72;:::i;:::-;8527:73;8595:3;8584:9;8580:19;8571:6;8527:73;:::i;:::-;8610;8678:3;8667:9;8663:19;8654:6;8610:73;:::i;:::-;8731:9;8725:4;8721:20;8715:3;8704:9;8700:19;8693:49;8759:108;8862:4;8853:6;8759:108;:::i;:::-;8751:116;;7659:1215;;;;;;;;;;:::o;8880:118::-;8951:22;8967:5;8951:22;:::i;:::-;8944:5;8941:33;8931:61;;8988:1;8985;8978:12;8931:61;8880:118;:::o;9004:135::-;9048:5;9086:6;9073:20;9064:29;;9102:31;9127:5;9102:31;:::i;:::-;9004:135;;;;:::o;9145:122::-;9218:24;9236:5;9218:24;:::i;:::-;9211:5;9208:35;9198:63;;9257:1;9254;9247:12;9198:63;9145:122;:::o;9273:139::-;9319:5;9357:6;9344:20;9335:29;;9373:33;9400:5;9373:33;:::i;:::-;9273:139;;;;:::o;9418:1199::-;9529:6;9537;9545;9553;9561;9569;9577;9626:3;9614:9;9605:7;9601:23;9597:33;9594:120;;;9633:79;;:::i;:::-;9594:120;9753:1;9778:53;9823:7;9814:6;9803:9;9799:22;9778:53;:::i;:::-;9768:63;;9724:117;9880:2;9906:53;9951:7;9942:6;9931:9;9927:22;9906:53;:::i;:::-;9896:63;;9851:118;10008:2;10034:53;10079:7;10070:6;10059:9;10055:22;10034:53;:::i;:::-;10024:63;;9979:118;10136:2;10162:53;10207:7;10198:6;10187:9;10183:22;10162:53;:::i;:::-;10152:63;;10107:118;10264:3;10291:51;10334:7;10325:6;10314:9;10310:22;10291:51;:::i;:::-;10281:61;;10235:117;10391:3;10418:53;10463:7;10454:6;10443:9;10439:22;10418:53;:::i;:::-;10408:63;;10362:119;10520:3;10547:53;10592:7;10583:6;10572:9;10568:22;10547:53;:::i;:::-;10537:63;;10491:119;9418:1199;;;;;;;;;;:::o;10623:474::-;10691:6;10699;10748:2;10736:9;10727:7;10723:23;10719:32;10716:119;;;10754:79;;:::i;:::-;10716:119;10874:1;10899:53;10944:7;10935:6;10924:9;10920:22;10899:53;:::i;:::-;10889:63;;10845:117;11001:2;11027:53;11072:7;11063:6;11052:9;11048:22;11027:53;:::i;:::-;11017:63;;10972:118;10623:474;;;;;:::o;11103:180::-;11151:77;11148:1;11141:88;11248:4;11245:1;11238:15;11272:4;11269:1;11262:15;11289:320;11333:6;11370:1;11364:4;11360:12;11350:22;;11417:1;11411:4;11407:12;11438:18;11428:81;;11494:4;11486:6;11482:17;11472:27;;11428:81;11556:2;11548:6;11545:14;11525:18;11522:38;11519:84;;11575:18;;:::i;:::-;11519:84;11340:269;11289:320;;;:::o;11615:180::-;11663:77;11660:1;11653:88;11760:4;11757:1;11750:15;11784:4;11781:1;11774:15;11801:775;12034:4;12072:3;12061:9;12057:19;12049:27;;12086:71;12154:1;12143:9;12139:17;12130:6;12086:71;:::i;:::-;12167:72;12235:2;12224:9;12220:18;12211:6;12167:72;:::i;:::-;12249;12317:2;12306:9;12302:18;12293:6;12249:72;:::i;:::-;12331;12399:2;12388:9;12384:18;12375:6;12331:72;:::i;:::-;12413:73;12481:3;12470:9;12466:19;12457:6;12413:73;:::i;:::-;12496;12564:3;12553:9;12549:19;12540:6;12496:73;:::i;:::-;11801:775;;;;;;;;;:::o;12582:332::-;12703:4;12741:2;12730:9;12726:18;12718:26;;12754:71;12822:1;12811:9;12807:17;12798:6;12754:71;:::i;:::-;12835:72;12903:2;12892:9;12888:18;12879:6;12835:72;:::i;:::-;12582:332;;;;;:::o;12920:442::-;13069:4;13107:2;13096:9;13092:18;13084:26;;13120:71;13188:1;13177:9;13173:17;13164:6;13120:71;:::i;:::-;13201:72;13269:2;13258:9;13254:18;13245:6;13201:72;:::i;:::-;13283;13351:2;13340:9;13336:18;13327:6;13283:72;:::i;:::-;12920:442;;;;;;:::o;13368:222::-;13461:4;13499:2;13488:9;13484:18;13476:26;;13512:71;13580:1;13569:9;13565:17;13556:6;13512:71;:::i;:::-;13368:222;;;;:::o;13596:180::-;13644:77;13641:1;13634:88;13741:4;13738:1;13731:15;13765:4;13762:1;13755:15;13782:191;13822:3;13841:20;13859:1;13841:20;:::i;:::-;13836:25;;13875:20;13893:1;13875:20;:::i;:::-;13870:25;;13918:1;13915;13911:9;13904:16;;13939:3;13936:1;13933:10;13930:36;;;13946:18;;:::i;:::-;13930:36;13782:191;;;;:::o;13979:664::-;14184:4;14222:3;14211:9;14207:19;14199:27;;14236:71;14304:1;14293:9;14289:17;14280:6;14236:71;:::i;:::-;14317:72;14385:2;14374:9;14370:18;14361:6;14317:72;:::i;:::-;14399;14467:2;14456:9;14452:18;14443:6;14399:72;:::i;:::-;14481;14549:2;14538:9;14534:18;14525:6;14481:72;:::i;:::-;14563:73;14631:3;14620:9;14616:19;14607:6;14563:73;:::i;:::-;13979:664;;;;;;;;:::o;14649:545::-;14822:4;14860:3;14849:9;14845:19;14837:27;;14874:71;14942:1;14931:9;14927:17;14918:6;14874:71;:::i;:::-;14955:68;15019:2;15008:9;15004:18;14995:6;14955:68;:::i;:::-;15033:72;15101:2;15090:9;15086:18;15077:6;15033:72;:::i;:::-;15115;15183:2;15172:9;15168:18;15159:6;15115:72;:::i;:::-;14649:545;;;;;;;:::o;15200:180::-;15248:77;15245:1;15238:88;15345:4;15342:1;15335:15;15369:4;15366:1;15359:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"version_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AIDEFIToken.sol\":\"AIDEFIToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/AIDEFIToken.sol\":{\"keccak256\":\"0x428364376267f01e4e6011d98e8158a826b7128cd16e2557066671600ca689b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec6ab16e4f8c5df2b8a8ea7a0a4d3438ac89aeef54ffca4e115c8bac46a40901\",\"dweb:/ipfs/QmVmGGqHyytBrM6LQkCQs9u6uEsP1v2H6qHw6U9QbSemer\"]}},\"version\":1}"}},"contracts/Lock.sol":{"Lock":{"abi":[{"inputs":[{"internalType":"uint256","name":"_unlockTime","type":"uint256"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"when","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_7138":{"entryPoint":null,"id":7138,"parameterSlots":1,"returnSlots":0},"abi_decode_t_uint256_fromMemory":{"entryPoint":219,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":240,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413_to_t_string_memory_ptr_fromStack":{"entryPoint":381,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":416,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":285,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":186,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":181,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413":{"entryPoint":302,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":196,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:2248:21","nodeType":"YulBlock","src":"0:2248:21","statements":[{"body":{"nativeSrc":"47:35:21","nodeType":"YulBlock","src":"47:35:21","statements":[{"nativeSrc":"57:19:21","nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:21","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:21","nodeType":"YulIdentifier","src":"67:5:21"},"nativeSrc":"67:9:21","nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:21","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:21","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:21","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nativeSrc":"177:28:21","nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:21","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:21","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:21","nodeType":"YulIdentifier","src":"187:6:21"},"nativeSrc":"187:12:21","nodeType":"YulFunctionCall","src":"187:12:21"},"nativeSrc":"187:12:21","nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:21","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nativeSrc":"300:28:21","nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:21","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:21","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:21","nodeType":"YulIdentifier","src":"310:6:21"},"nativeSrc":"310:12:21","nodeType":"YulFunctionCall","src":"310:12:21"},"nativeSrc":"310:12:21","nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:21","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nativeSrc":"379:32:21","nodeType":"YulBlock","src":"379:32:21","statements":[{"nativeSrc":"389:16:21","nodeType":"YulAssignment","src":"389:16:21","value":{"name":"value","nativeSrc":"400:5:21","nodeType":"YulIdentifier","src":"400:5:21"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:21","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:21","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:21","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:77:21"},{"body":{"nativeSrc":"460:79:21","nodeType":"YulBlock","src":"460:79:21","statements":[{"body":{"nativeSrc":"517:16:21","nodeType":"YulBlock","src":"517:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:21","nodeType":"YulLiteral","src":"526:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:21","nodeType":"YulLiteral","src":"529:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:21","nodeType":"YulIdentifier","src":"519:6:21"},"nativeSrc":"519:12:21","nodeType":"YulFunctionCall","src":"519:12:21"},"nativeSrc":"519:12:21","nodeType":"YulExpressionStatement","src":"519:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:21","nodeType":"YulIdentifier","src":"483:5:21"},{"arguments":[{"name":"value","nativeSrc":"508:5:21","nodeType":"YulIdentifier","src":"508:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:21","nodeType":"YulIdentifier","src":"490:17:21"},"nativeSrc":"490:24:21","nodeType":"YulFunctionCall","src":"490:24:21"}],"functionName":{"name":"eq","nativeSrc":"480:2:21","nodeType":"YulIdentifier","src":"480:2:21"},"nativeSrc":"480:35:21","nodeType":"YulFunctionCall","src":"480:35:21"}],"functionName":{"name":"iszero","nativeSrc":"473:6:21","nodeType":"YulIdentifier","src":"473:6:21"},"nativeSrc":"473:43:21","nodeType":"YulFunctionCall","src":"473:43:21"},"nativeSrc":"470:63:21","nodeType":"YulIf","src":"470:63:21"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:21","nodeType":"YulTypedName","src":"453:5:21","type":""}],"src":"417:122:21"},{"body":{"nativeSrc":"608:80:21","nodeType":"YulBlock","src":"608:80:21","statements":[{"nativeSrc":"618:22:21","nodeType":"YulAssignment","src":"618:22:21","value":{"arguments":[{"name":"offset","nativeSrc":"633:6:21","nodeType":"YulIdentifier","src":"633:6:21"}],"functionName":{"name":"mload","nativeSrc":"627:5:21","nodeType":"YulIdentifier","src":"627:5:21"},"nativeSrc":"627:13:21","nodeType":"YulFunctionCall","src":"627:13:21"},"variableNames":[{"name":"value","nativeSrc":"618:5:21","nodeType":"YulIdentifier","src":"618:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"676:5:21","nodeType":"YulIdentifier","src":"676:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"649:26:21","nodeType":"YulIdentifier","src":"649:26:21"},"nativeSrc":"649:33:21","nodeType":"YulFunctionCall","src":"649:33:21"},"nativeSrc":"649:33:21","nodeType":"YulExpressionStatement","src":"649:33:21"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"545:143:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"586:6:21","nodeType":"YulTypedName","src":"586:6:21","type":""},{"name":"end","nativeSrc":"594:3:21","nodeType":"YulTypedName","src":"594:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"602:5:21","nodeType":"YulTypedName","src":"602:5:21","type":""}],"src":"545:143:21"},{"body":{"nativeSrc":"771:274:21","nodeType":"YulBlock","src":"771:274:21","statements":[{"body":{"nativeSrc":"817:83:21","nodeType":"YulBlock","src":"817:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"819:77:21","nodeType":"YulIdentifier","src":"819:77:21"},"nativeSrc":"819:79:21","nodeType":"YulFunctionCall","src":"819:79:21"},"nativeSrc":"819:79:21","nodeType":"YulExpressionStatement","src":"819:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"792:7:21","nodeType":"YulIdentifier","src":"792:7:21"},{"name":"headStart","nativeSrc":"801:9:21","nodeType":"YulIdentifier","src":"801:9:21"}],"functionName":{"name":"sub","nativeSrc":"788:3:21","nodeType":"YulIdentifier","src":"788:3:21"},"nativeSrc":"788:23:21","nodeType":"YulFunctionCall","src":"788:23:21"},{"kind":"number","nativeSrc":"813:2:21","nodeType":"YulLiteral","src":"813:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"784:3:21","nodeType":"YulIdentifier","src":"784:3:21"},"nativeSrc":"784:32:21","nodeType":"YulFunctionCall","src":"784:32:21"},"nativeSrc":"781:119:21","nodeType":"YulIf","src":"781:119:21"},{"nativeSrc":"910:128:21","nodeType":"YulBlock","src":"910:128:21","statements":[{"nativeSrc":"925:15:21","nodeType":"YulVariableDeclaration","src":"925:15:21","value":{"kind":"number","nativeSrc":"939:1:21","nodeType":"YulLiteral","src":"939:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"929:6:21","nodeType":"YulTypedName","src":"929:6:21","type":""}]},{"nativeSrc":"954:74:21","nodeType":"YulAssignment","src":"954:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1000:9:21","nodeType":"YulIdentifier","src":"1000:9:21"},{"name":"offset","nativeSrc":"1011:6:21","nodeType":"YulIdentifier","src":"1011:6:21"}],"functionName":{"name":"add","nativeSrc":"996:3:21","nodeType":"YulIdentifier","src":"996:3:21"},"nativeSrc":"996:22:21","nodeType":"YulFunctionCall","src":"996:22:21"},{"name":"dataEnd","nativeSrc":"1020:7:21","nodeType":"YulIdentifier","src":"1020:7:21"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"964:31:21","nodeType":"YulIdentifier","src":"964:31:21"},"nativeSrc":"964:64:21","nodeType":"YulFunctionCall","src":"964:64:21"},"variableNames":[{"name":"value0","nativeSrc":"954:6:21","nodeType":"YulIdentifier","src":"954:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"694:351:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"741:9:21","nodeType":"YulTypedName","src":"741:9:21","type":""},{"name":"dataEnd","nativeSrc":"752:7:21","nodeType":"YulTypedName","src":"752:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"764:6:21","nodeType":"YulTypedName","src":"764:6:21","type":""}],"src":"694:351:21"},{"body":{"nativeSrc":"1147:73:21","nodeType":"YulBlock","src":"1147:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1164:3:21","nodeType":"YulIdentifier","src":"1164:3:21"},{"name":"length","nativeSrc":"1169:6:21","nodeType":"YulIdentifier","src":"1169:6:21"}],"functionName":{"name":"mstore","nativeSrc":"1157:6:21","nodeType":"YulIdentifier","src":"1157:6:21"},"nativeSrc":"1157:19:21","nodeType":"YulFunctionCall","src":"1157:19:21"},"nativeSrc":"1157:19:21","nodeType":"YulExpressionStatement","src":"1157:19:21"},{"nativeSrc":"1185:29:21","nodeType":"YulAssignment","src":"1185:29:21","value":{"arguments":[{"name":"pos","nativeSrc":"1204:3:21","nodeType":"YulIdentifier","src":"1204:3:21"},{"kind":"number","nativeSrc":"1209:4:21","nodeType":"YulLiteral","src":"1209:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1200:3:21","nodeType":"YulIdentifier","src":"1200:3:21"},"nativeSrc":"1200:14:21","nodeType":"YulFunctionCall","src":"1200:14:21"},"variableNames":[{"name":"updated_pos","nativeSrc":"1185:11:21","nodeType":"YulIdentifier","src":"1185:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1051:169:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1119:3:21","nodeType":"YulTypedName","src":"1119:3:21","type":""},{"name":"length","nativeSrc":"1124:6:21","nodeType":"YulTypedName","src":"1124:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1135:11:21","nodeType":"YulTypedName","src":"1135:11:21","type":""}],"src":"1051:169:21"},{"body":{"nativeSrc":"1332:116:21","nodeType":"YulBlock","src":"1332:116:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"1354:6:21","nodeType":"YulIdentifier","src":"1354:6:21"},{"kind":"number","nativeSrc":"1362:1:21","nodeType":"YulLiteral","src":"1362:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1350:3:21","nodeType":"YulIdentifier","src":"1350:3:21"},"nativeSrc":"1350:14:21","nodeType":"YulFunctionCall","src":"1350:14:21"},{"hexValue":"556e6c6f636b2074696d652073686f756c6420626520696e2074686520667574","kind":"string","nativeSrc":"1366:34:21","nodeType":"YulLiteral","src":"1366:34:21","type":"","value":"Unlock time should be in the fut"}],"functionName":{"name":"mstore","nativeSrc":"1343:6:21","nodeType":"YulIdentifier","src":"1343:6:21"},"nativeSrc":"1343:58:21","nodeType":"YulFunctionCall","src":"1343:58:21"},"nativeSrc":"1343:58:21","nodeType":"YulExpressionStatement","src":"1343:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"1422:6:21","nodeType":"YulIdentifier","src":"1422:6:21"},{"kind":"number","nativeSrc":"1430:2:21","nodeType":"YulLiteral","src":"1430:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1418:3:21","nodeType":"YulIdentifier","src":"1418:3:21"},"nativeSrc":"1418:15:21","nodeType":"YulFunctionCall","src":"1418:15:21"},{"hexValue":"757265","kind":"string","nativeSrc":"1435:5:21","nodeType":"YulLiteral","src":"1435:5:21","type":"","value":"ure"}],"functionName":{"name":"mstore","nativeSrc":"1411:6:21","nodeType":"YulIdentifier","src":"1411:6:21"},"nativeSrc":"1411:30:21","nodeType":"YulFunctionCall","src":"1411:30:21"},"nativeSrc":"1411:30:21","nodeType":"YulExpressionStatement","src":"1411:30:21"}]},"name":"store_literal_in_memory_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413","nativeSrc":"1226:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1324:6:21","nodeType":"YulTypedName","src":"1324:6:21","type":""}],"src":"1226:222:21"},{"body":{"nativeSrc":"1600:220:21","nodeType":"YulBlock","src":"1600:220:21","statements":[{"nativeSrc":"1610:74:21","nodeType":"YulAssignment","src":"1610:74:21","value":{"arguments":[{"name":"pos","nativeSrc":"1676:3:21","nodeType":"YulIdentifier","src":"1676:3:21"},{"kind":"number","nativeSrc":"1681:2:21","nodeType":"YulLiteral","src":"1681:2:21","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1617:58:21","nodeType":"YulIdentifier","src":"1617:58:21"},"nativeSrc":"1617:67:21","nodeType":"YulFunctionCall","src":"1617:67:21"},"variableNames":[{"name":"pos","nativeSrc":"1610:3:21","nodeType":"YulIdentifier","src":"1610:3:21"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"1782:3:21","nodeType":"YulIdentifier","src":"1782:3:21"}],"functionName":{"name":"store_literal_in_memory_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413","nativeSrc":"1693:88:21","nodeType":"YulIdentifier","src":"1693:88:21"},"nativeSrc":"1693:93:21","nodeType":"YulFunctionCall","src":"1693:93:21"},"nativeSrc":"1693:93:21","nodeType":"YulExpressionStatement","src":"1693:93:21"},{"nativeSrc":"1795:19:21","nodeType":"YulAssignment","src":"1795:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"1806:3:21","nodeType":"YulIdentifier","src":"1806:3:21"},{"kind":"number","nativeSrc":"1811:2:21","nodeType":"YulLiteral","src":"1811:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1802:3:21","nodeType":"YulIdentifier","src":"1802:3:21"},"nativeSrc":"1802:12:21","nodeType":"YulFunctionCall","src":"1802:12:21"},"variableNames":[{"name":"end","nativeSrc":"1795:3:21","nodeType":"YulIdentifier","src":"1795:3:21"}]}]},"name":"abi_encode_t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413_to_t_string_memory_ptr_fromStack","nativeSrc":"1454:366:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1588:3:21","nodeType":"YulTypedName","src":"1588:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1596:3:21","nodeType":"YulTypedName","src":"1596:3:21","type":""}],"src":"1454:366:21"},{"body":{"nativeSrc":"1997:248:21","nodeType":"YulBlock","src":"1997:248:21","statements":[{"nativeSrc":"2007:26:21","nodeType":"YulAssignment","src":"2007:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2019:9:21","nodeType":"YulIdentifier","src":"2019:9:21"},{"kind":"number","nativeSrc":"2030:2:21","nodeType":"YulLiteral","src":"2030:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2015:3:21","nodeType":"YulIdentifier","src":"2015:3:21"},"nativeSrc":"2015:18:21","nodeType":"YulFunctionCall","src":"2015:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2007:4:21","nodeType":"YulIdentifier","src":"2007:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2054:9:21","nodeType":"YulIdentifier","src":"2054:9:21"},{"kind":"number","nativeSrc":"2065:1:21","nodeType":"YulLiteral","src":"2065:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2050:3:21","nodeType":"YulIdentifier","src":"2050:3:21"},"nativeSrc":"2050:17:21","nodeType":"YulFunctionCall","src":"2050:17:21"},{"arguments":[{"name":"tail","nativeSrc":"2073:4:21","nodeType":"YulIdentifier","src":"2073:4:21"},{"name":"headStart","nativeSrc":"2079:9:21","nodeType":"YulIdentifier","src":"2079:9:21"}],"functionName":{"name":"sub","nativeSrc":"2069:3:21","nodeType":"YulIdentifier","src":"2069:3:21"},"nativeSrc":"2069:20:21","nodeType":"YulFunctionCall","src":"2069:20:21"}],"functionName":{"name":"mstore","nativeSrc":"2043:6:21","nodeType":"YulIdentifier","src":"2043:6:21"},"nativeSrc":"2043:47:21","nodeType":"YulFunctionCall","src":"2043:47:21"},"nativeSrc":"2043:47:21","nodeType":"YulExpressionStatement","src":"2043:47:21"},{"nativeSrc":"2099:139:21","nodeType":"YulAssignment","src":"2099:139:21","value":{"arguments":[{"name":"tail","nativeSrc":"2233:4:21","nodeType":"YulIdentifier","src":"2233:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413_to_t_string_memory_ptr_fromStack","nativeSrc":"2107:124:21","nodeType":"YulIdentifier","src":"2107:124:21"},"nativeSrc":"2107:131:21","nodeType":"YulFunctionCall","src":"2107:131:21"},"variableNames":[{"name":"tail","nativeSrc":"2099:4:21","nodeType":"YulIdentifier","src":"2099:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1826:419:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1977:9:21","nodeType":"YulTypedName","src":"1977:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1992:4:21","nodeType":"YulTypedName","src":"1992:4:21","type":""}],"src":"1826:419:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unlock time should be in the fut\")\n\n        mstore(add(memPtr, 32), \"ure\")\n\n    }\n\n    function abi_encode_t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526040516105d83803806105d8833981810160405281019061002591906100f0565b804210610067576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161005e906101a0565b60405180910390fd5b8060008190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101c0565b600080fd5b6000819050919050565b6100cd816100ba565b81146100d857600080fd5b50565b6000815190506100ea816100c4565b92915050565b600060208284031215610106576101056100b5565b5b6000610114848285016100db565b91505092915050565b600082825260208201905092915050565b7f556e6c6f636b2074696d652073686f756c6420626520696e207468652066757460008201527f7572650000000000000000000000000000000000000000000000000000000000602082015250565b600061018a60238361011d565b91506101958261012e565b604082019050919050565b600060208201905081810360008301526101b98161017d565b9050919050565b610409806101cf6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063251c1aa3146100465780633ccfd60b146100645780638da5cb5b1461006e575b600080fd5b61004e61008c565b60405161005b919061024a565b60405180910390f35b61006c610092565b005b61007661020b565b60405161008391906102a6565b60405180910390f35b60005481565b6000544210156100d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ce9061031e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610167576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015e9061038a565b60405180910390fd5b7fbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b9347426040516101989291906103aa565b60405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610208573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b61024481610231565b82525050565b600060208201905061025f600083018461023b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061029082610265565b9050919050565b6102a081610285565b82525050565b60006020820190506102bb6000830184610297565b92915050565b600082825260208201905092915050565b7f596f752063616e27742077697468647261772079657400000000000000000000600082015250565b60006103086016836102c1565b9150610313826102d2565b602082019050919050565b60006020820190508181036000830152610337816102fb565b9050919050565b7f596f75206172656e277420746865206f776e6572000000000000000000000000600082015250565b60006103746014836102c1565b915061037f8261033e565b602082019050919050565b600060208201905081810360008301526103a381610367565b9050919050565b60006040820190506103bf600083018561023b565b6103cc602083018461023b565b939250505056fea26469706673582212202d2006ef26cbefcc4deab66c32f5ff5efb638f080c7490b6633879942caf232764736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x5D8 CODESIZE SUB DUP1 PUSH2 0x5D8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0xF0 JUMP JUMPDEST DUP1 TIMESTAMP LT PUSH2 0x67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD DUP2 PUSH2 0xBA JUMP JUMPDEST DUP2 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEA DUP2 PUSH2 0xC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x106 JUMPI PUSH2 0x105 PUSH2 0xB5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x114 DUP5 DUP3 DUP6 ADD PUSH2 0xDB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x556E6C6F636B2074696D652073686F756C6420626520696E2074686520667574 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7572650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A PUSH1 0x23 DUP4 PUSH2 0x11D JUMP JUMPDEST SWAP2 POP PUSH2 0x195 DUP3 PUSH2 0x12E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B9 DUP2 PUSH2 0x17D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x409 DUP1 PUSH2 0x1CF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x251C1AA3 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x92 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP LT ISZERO PUSH2 0xD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE SWAP1 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x167 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E SWAP1 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xBF2ED60BD5B5965D685680C01195C9514E4382E28E3A5A2D2D5244BF59411B93 SELFBALANCE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x198 SWAP3 SWAP2 SWAP1 PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x208 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x244 DUP2 PUSH2 0x231 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x290 DUP3 PUSH2 0x265 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A0 DUP2 PUSH2 0x285 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x297 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E27742077697468647261772079657400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH1 0x16 DUP4 PUSH2 0x2C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x313 DUP3 PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x337 DUP2 PUSH2 0x2FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F75206172656E277420746865206F776E6572000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x374 PUSH1 0x14 DUP4 PUSH2 0x2C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x37F DUP3 PUSH2 0x33E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A3 DUP2 PUSH2 0x367 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3BF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x23B JUMP JUMPDEST PUSH2 0x3CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D KECCAK256 MOD 0xEF 0x26 0xCB 0xEF 0xCC 0x4D 0xEA 0xB6 PUSH13 0x32F5FF5EFB638F080C7490B663 CODESIZE PUSH26 0x942CAF232764736F6C634300081C003300000000000000000000 ","sourceMap":"141:866:20:-:0;;;271:238;;;;;;;;;;;;;;;;;;;;;:::i;:::-;358:11;340:15;:29;319:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;454:11;441:10;:24;;;;491:10;475:5;;:27;;;;;;;;;;;;;;;;;;271:238;141:866;;88:117:21;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:169::-;1135:11;1169:6;1164:3;1157:19;1209:4;1204:3;1200:14;1185:29;;1051:169;;;;:::o;1226:222::-;1366:34;1362:1;1354:6;1350:14;1343:58;1435:5;1430:2;1422:6;1418:15;1411:30;1226:222;:::o;1454:366::-;1596:3;1617:67;1681:2;1676:3;1617:67;:::i;:::-;1610:74;;1693:93;1782:3;1693:93;:::i;:::-;1811:2;1806:3;1802:12;1795:19;;1454:366;;;:::o;1826:419::-;1992:4;2030:2;2019:9;2015:18;2007:26;;2079:9;2073:4;2069:20;2065:1;2054:9;2050:17;2043:47;2107:131;2233:4;2107:131;:::i;:::-;2099:139;;1826:419;;;:::o;141:866:20:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@owner_7106":{"entryPoint":523,"id":7106,"parameterSlots":0,"returnSlots":0},"@unlockTime_7104":{"entryPoint":140,"id":7104,"parameterSlots":0,"returnSlots":0},"@withdraw_7178":{"entryPoint":146,"id":7178,"parameterSlots":0,"returnSlots":0},"abi_encode_t_address_payable_to_t_address_payable_fromStack":{"entryPoint":663,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8_to_t_string_memory_ptr_fromStack":{"entryPoint":763,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a_to_t_string_memory_ptr_fromStack":{"entryPoint":871,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":571,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":798,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":906,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":586,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":938,"id":null,"parameterSlots":3,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":705,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":645,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":613,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":561,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8":{"entryPoint":722,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a":{"entryPoint":830,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:3550:21","nodeType":"YulBlock","src":"0:3550:21","statements":[{"body":{"nativeSrc":"52:32:21","nodeType":"YulBlock","src":"52:32:21","statements":[{"nativeSrc":"62:16:21","nodeType":"YulAssignment","src":"62:16:21","value":{"name":"value","nativeSrc":"73:5:21","nodeType":"YulIdentifier","src":"73:5:21"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:21","nodeType":"YulIdentifier","src":"62:7:21"}]}]},"name":"cleanup_t_uint256","nativeSrc":"7:77:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:21","nodeType":"YulTypedName","src":"34:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:21","nodeType":"YulTypedName","src":"44:7:21","type":""}],"src":"7:77:21"},{"body":{"nativeSrc":"155:53:21","nodeType":"YulBlock","src":"155:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"172:3:21","nodeType":"YulIdentifier","src":"172:3:21"},{"arguments":[{"name":"value","nativeSrc":"195:5:21","nodeType":"YulIdentifier","src":"195:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"177:17:21","nodeType":"YulIdentifier","src":"177:17:21"},"nativeSrc":"177:24:21","nodeType":"YulFunctionCall","src":"177:24:21"}],"functionName":{"name":"mstore","nativeSrc":"165:6:21","nodeType":"YulIdentifier","src":"165:6:21"},"nativeSrc":"165:37:21","nodeType":"YulFunctionCall","src":"165:37:21"},"nativeSrc":"165:37:21","nodeType":"YulExpressionStatement","src":"165:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"90:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"143:5:21","nodeType":"YulTypedName","src":"143:5:21","type":""},{"name":"pos","nativeSrc":"150:3:21","nodeType":"YulTypedName","src":"150:3:21","type":""}],"src":"90:118:21"},{"body":{"nativeSrc":"312:124:21","nodeType":"YulBlock","src":"312:124:21","statements":[{"nativeSrc":"322:26:21","nodeType":"YulAssignment","src":"322:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"334:9:21","nodeType":"YulIdentifier","src":"334:9:21"},{"kind":"number","nativeSrc":"345:2:21","nodeType":"YulLiteral","src":"345:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"330:3:21","nodeType":"YulIdentifier","src":"330:3:21"},"nativeSrc":"330:18:21","nodeType":"YulFunctionCall","src":"330:18:21"},"variableNames":[{"name":"tail","nativeSrc":"322:4:21","nodeType":"YulIdentifier","src":"322:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"402:6:21","nodeType":"YulIdentifier","src":"402:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"415:9:21","nodeType":"YulIdentifier","src":"415:9:21"},{"kind":"number","nativeSrc":"426:1:21","nodeType":"YulLiteral","src":"426:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"411:3:21","nodeType":"YulIdentifier","src":"411:3:21"},"nativeSrc":"411:17:21","nodeType":"YulFunctionCall","src":"411:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"358:43:21","nodeType":"YulIdentifier","src":"358:43:21"},"nativeSrc":"358:71:21","nodeType":"YulFunctionCall","src":"358:71:21"},"nativeSrc":"358:71:21","nodeType":"YulExpressionStatement","src":"358:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"214:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"284:9:21","nodeType":"YulTypedName","src":"284:9:21","type":""},{"name":"value0","nativeSrc":"296:6:21","nodeType":"YulTypedName","src":"296:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"307:4:21","nodeType":"YulTypedName","src":"307:4:21","type":""}],"src":"214:222:21"},{"body":{"nativeSrc":"487:81:21","nodeType":"YulBlock","src":"487:81:21","statements":[{"nativeSrc":"497:65:21","nodeType":"YulAssignment","src":"497:65:21","value":{"arguments":[{"name":"value","nativeSrc":"512:5:21","nodeType":"YulIdentifier","src":"512:5:21"},{"kind":"number","nativeSrc":"519:42:21","nodeType":"YulLiteral","src":"519:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"508:3:21","nodeType":"YulIdentifier","src":"508:3:21"},"nativeSrc":"508:54:21","nodeType":"YulFunctionCall","src":"508:54:21"},"variableNames":[{"name":"cleaned","nativeSrc":"497:7:21","nodeType":"YulIdentifier","src":"497:7:21"}]}]},"name":"cleanup_t_uint160","nativeSrc":"442:126:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"469:5:21","nodeType":"YulTypedName","src":"469:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"479:7:21","nodeType":"YulTypedName","src":"479:7:21","type":""}],"src":"442:126:21"},{"body":{"nativeSrc":"627:51:21","nodeType":"YulBlock","src":"627:51:21","statements":[{"nativeSrc":"637:35:21","nodeType":"YulAssignment","src":"637:35:21","value":{"arguments":[{"name":"value","nativeSrc":"666:5:21","nodeType":"YulIdentifier","src":"666:5:21"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"648:17:21","nodeType":"YulIdentifier","src":"648:17:21"},"nativeSrc":"648:24:21","nodeType":"YulFunctionCall","src":"648:24:21"},"variableNames":[{"name":"cleaned","nativeSrc":"637:7:21","nodeType":"YulIdentifier","src":"637:7:21"}]}]},"name":"cleanup_t_address_payable","nativeSrc":"574:104:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"609:5:21","nodeType":"YulTypedName","src":"609:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"619:7:21","nodeType":"YulTypedName","src":"619:7:21","type":""}],"src":"574:104:21"},{"body":{"nativeSrc":"765:61:21","nodeType":"YulBlock","src":"765:61:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"782:3:21","nodeType":"YulIdentifier","src":"782:3:21"},{"arguments":[{"name":"value","nativeSrc":"813:5:21","nodeType":"YulIdentifier","src":"813:5:21"}],"functionName":{"name":"cleanup_t_address_payable","nativeSrc":"787:25:21","nodeType":"YulIdentifier","src":"787:25:21"},"nativeSrc":"787:32:21","nodeType":"YulFunctionCall","src":"787:32:21"}],"functionName":{"name":"mstore","nativeSrc":"775:6:21","nodeType":"YulIdentifier","src":"775:6:21"},"nativeSrc":"775:45:21","nodeType":"YulFunctionCall","src":"775:45:21"},"nativeSrc":"775:45:21","nodeType":"YulExpressionStatement","src":"775:45:21"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nativeSrc":"684:142:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"753:5:21","nodeType":"YulTypedName","src":"753:5:21","type":""},{"name":"pos","nativeSrc":"760:3:21","nodeType":"YulTypedName","src":"760:3:21","type":""}],"src":"684:142:21"},{"body":{"nativeSrc":"946:140:21","nodeType":"YulBlock","src":"946:140:21","statements":[{"nativeSrc":"956:26:21","nodeType":"YulAssignment","src":"956:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"968:9:21","nodeType":"YulIdentifier","src":"968:9:21"},{"kind":"number","nativeSrc":"979:2:21","nodeType":"YulLiteral","src":"979:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"964:3:21","nodeType":"YulIdentifier","src":"964:3:21"},"nativeSrc":"964:18:21","nodeType":"YulFunctionCall","src":"964:18:21"},"variableNames":[{"name":"tail","nativeSrc":"956:4:21","nodeType":"YulIdentifier","src":"956:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1052:6:21","nodeType":"YulIdentifier","src":"1052:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"1065:9:21","nodeType":"YulIdentifier","src":"1065:9:21"},{"kind":"number","nativeSrc":"1076:1:21","nodeType":"YulLiteral","src":"1076:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1061:3:21","nodeType":"YulIdentifier","src":"1061:3:21"},"nativeSrc":"1061:17:21","nodeType":"YulFunctionCall","src":"1061:17:21"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nativeSrc":"992:59:21","nodeType":"YulIdentifier","src":"992:59:21"},"nativeSrc":"992:87:21","nodeType":"YulFunctionCall","src":"992:87:21"},"nativeSrc":"992:87:21","nodeType":"YulExpressionStatement","src":"992:87:21"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nativeSrc":"832:254:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"918:9:21","nodeType":"YulTypedName","src":"918:9:21","type":""},{"name":"value0","nativeSrc":"930:6:21","nodeType":"YulTypedName","src":"930:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"941:4:21","nodeType":"YulTypedName","src":"941:4:21","type":""}],"src":"832:254:21"},{"body":{"nativeSrc":"1188:73:21","nodeType":"YulBlock","src":"1188:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1205:3:21","nodeType":"YulIdentifier","src":"1205:3:21"},{"name":"length","nativeSrc":"1210:6:21","nodeType":"YulIdentifier","src":"1210:6:21"}],"functionName":{"name":"mstore","nativeSrc":"1198:6:21","nodeType":"YulIdentifier","src":"1198:6:21"},"nativeSrc":"1198:19:21","nodeType":"YulFunctionCall","src":"1198:19:21"},"nativeSrc":"1198:19:21","nodeType":"YulExpressionStatement","src":"1198:19:21"},{"nativeSrc":"1226:29:21","nodeType":"YulAssignment","src":"1226:29:21","value":{"arguments":[{"name":"pos","nativeSrc":"1245:3:21","nodeType":"YulIdentifier","src":"1245:3:21"},{"kind":"number","nativeSrc":"1250:4:21","nodeType":"YulLiteral","src":"1250:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1241:3:21","nodeType":"YulIdentifier","src":"1241:3:21"},"nativeSrc":"1241:14:21","nodeType":"YulFunctionCall","src":"1241:14:21"},"variableNames":[{"name":"updated_pos","nativeSrc":"1226:11:21","nodeType":"YulIdentifier","src":"1226:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1092:169:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1160:3:21","nodeType":"YulTypedName","src":"1160:3:21","type":""},{"name":"length","nativeSrc":"1165:6:21","nodeType":"YulTypedName","src":"1165:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1176:11:21","nodeType":"YulTypedName","src":"1176:11:21","type":""}],"src":"1092:169:21"},{"body":{"nativeSrc":"1373:66:21","nodeType":"YulBlock","src":"1373:66:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"1395:6:21","nodeType":"YulIdentifier","src":"1395:6:21"},{"kind":"number","nativeSrc":"1403:1:21","nodeType":"YulLiteral","src":"1403:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1391:3:21","nodeType":"YulIdentifier","src":"1391:3:21"},"nativeSrc":"1391:14:21","nodeType":"YulFunctionCall","src":"1391:14:21"},{"hexValue":"596f752063616e277420776974686472617720796574","kind":"string","nativeSrc":"1407:24:21","nodeType":"YulLiteral","src":"1407:24:21","type":"","value":"You can't withdraw yet"}],"functionName":{"name":"mstore","nativeSrc":"1384:6:21","nodeType":"YulIdentifier","src":"1384:6:21"},"nativeSrc":"1384:48:21","nodeType":"YulFunctionCall","src":"1384:48:21"},"nativeSrc":"1384:48:21","nodeType":"YulExpressionStatement","src":"1384:48:21"}]},"name":"store_literal_in_memory_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8","nativeSrc":"1267:172:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1365:6:21","nodeType":"YulTypedName","src":"1365:6:21","type":""}],"src":"1267:172:21"},{"body":{"nativeSrc":"1591:220:21","nodeType":"YulBlock","src":"1591:220:21","statements":[{"nativeSrc":"1601:74:21","nodeType":"YulAssignment","src":"1601:74:21","value":{"arguments":[{"name":"pos","nativeSrc":"1667:3:21","nodeType":"YulIdentifier","src":"1667:3:21"},{"kind":"number","nativeSrc":"1672:2:21","nodeType":"YulLiteral","src":"1672:2:21","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1608:58:21","nodeType":"YulIdentifier","src":"1608:58:21"},"nativeSrc":"1608:67:21","nodeType":"YulFunctionCall","src":"1608:67:21"},"variableNames":[{"name":"pos","nativeSrc":"1601:3:21","nodeType":"YulIdentifier","src":"1601:3:21"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"1773:3:21","nodeType":"YulIdentifier","src":"1773:3:21"}],"functionName":{"name":"store_literal_in_memory_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8","nativeSrc":"1684:88:21","nodeType":"YulIdentifier","src":"1684:88:21"},"nativeSrc":"1684:93:21","nodeType":"YulFunctionCall","src":"1684:93:21"},"nativeSrc":"1684:93:21","nodeType":"YulExpressionStatement","src":"1684:93:21"},{"nativeSrc":"1786:19:21","nodeType":"YulAssignment","src":"1786:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"1797:3:21","nodeType":"YulIdentifier","src":"1797:3:21"},{"kind":"number","nativeSrc":"1802:2:21","nodeType":"YulLiteral","src":"1802:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1793:3:21","nodeType":"YulIdentifier","src":"1793:3:21"},"nativeSrc":"1793:12:21","nodeType":"YulFunctionCall","src":"1793:12:21"},"variableNames":[{"name":"end","nativeSrc":"1786:3:21","nodeType":"YulIdentifier","src":"1786:3:21"}]}]},"name":"abi_encode_t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8_to_t_string_memory_ptr_fromStack","nativeSrc":"1445:366:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1579:3:21","nodeType":"YulTypedName","src":"1579:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1587:3:21","nodeType":"YulTypedName","src":"1587:3:21","type":""}],"src":"1445:366:21"},{"body":{"nativeSrc":"1988:248:21","nodeType":"YulBlock","src":"1988:248:21","statements":[{"nativeSrc":"1998:26:21","nodeType":"YulAssignment","src":"1998:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2010:9:21","nodeType":"YulIdentifier","src":"2010:9:21"},{"kind":"number","nativeSrc":"2021:2:21","nodeType":"YulLiteral","src":"2021:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2006:3:21","nodeType":"YulIdentifier","src":"2006:3:21"},"nativeSrc":"2006:18:21","nodeType":"YulFunctionCall","src":"2006:18:21"},"variableNames":[{"name":"tail","nativeSrc":"1998:4:21","nodeType":"YulIdentifier","src":"1998:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2045:9:21","nodeType":"YulIdentifier","src":"2045:9:21"},{"kind":"number","nativeSrc":"2056:1:21","nodeType":"YulLiteral","src":"2056:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2041:3:21","nodeType":"YulIdentifier","src":"2041:3:21"},"nativeSrc":"2041:17:21","nodeType":"YulFunctionCall","src":"2041:17:21"},{"arguments":[{"name":"tail","nativeSrc":"2064:4:21","nodeType":"YulIdentifier","src":"2064:4:21"},{"name":"headStart","nativeSrc":"2070:9:21","nodeType":"YulIdentifier","src":"2070:9:21"}],"functionName":{"name":"sub","nativeSrc":"2060:3:21","nodeType":"YulIdentifier","src":"2060:3:21"},"nativeSrc":"2060:20:21","nodeType":"YulFunctionCall","src":"2060:20:21"}],"functionName":{"name":"mstore","nativeSrc":"2034:6:21","nodeType":"YulIdentifier","src":"2034:6:21"},"nativeSrc":"2034:47:21","nodeType":"YulFunctionCall","src":"2034:47:21"},"nativeSrc":"2034:47:21","nodeType":"YulExpressionStatement","src":"2034:47:21"},{"nativeSrc":"2090:139:21","nodeType":"YulAssignment","src":"2090:139:21","value":{"arguments":[{"name":"tail","nativeSrc":"2224:4:21","nodeType":"YulIdentifier","src":"2224:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8_to_t_string_memory_ptr_fromStack","nativeSrc":"2098:124:21","nodeType":"YulIdentifier","src":"2098:124:21"},"nativeSrc":"2098:131:21","nodeType":"YulFunctionCall","src":"2098:131:21"},"variableNames":[{"name":"tail","nativeSrc":"2090:4:21","nodeType":"YulIdentifier","src":"2090:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1817:419:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1968:9:21","nodeType":"YulTypedName","src":"1968:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1983:4:21","nodeType":"YulTypedName","src":"1983:4:21","type":""}],"src":"1817:419:21"},{"body":{"nativeSrc":"2348:64:21","nodeType":"YulBlock","src":"2348:64:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2370:6:21","nodeType":"YulIdentifier","src":"2370:6:21"},{"kind":"number","nativeSrc":"2378:1:21","nodeType":"YulLiteral","src":"2378:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2366:3:21","nodeType":"YulIdentifier","src":"2366:3:21"},"nativeSrc":"2366:14:21","nodeType":"YulFunctionCall","src":"2366:14:21"},{"hexValue":"596f75206172656e277420746865206f776e6572","kind":"string","nativeSrc":"2382:22:21","nodeType":"YulLiteral","src":"2382:22:21","type":"","value":"You aren't the owner"}],"functionName":{"name":"mstore","nativeSrc":"2359:6:21","nodeType":"YulIdentifier","src":"2359:6:21"},"nativeSrc":"2359:46:21","nodeType":"YulFunctionCall","src":"2359:46:21"},"nativeSrc":"2359:46:21","nodeType":"YulExpressionStatement","src":"2359:46:21"}]},"name":"store_literal_in_memory_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a","nativeSrc":"2242:170:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"2340:6:21","nodeType":"YulTypedName","src":"2340:6:21","type":""}],"src":"2242:170:21"},{"body":{"nativeSrc":"2564:220:21","nodeType":"YulBlock","src":"2564:220:21","statements":[{"nativeSrc":"2574:74:21","nodeType":"YulAssignment","src":"2574:74:21","value":{"arguments":[{"name":"pos","nativeSrc":"2640:3:21","nodeType":"YulIdentifier","src":"2640:3:21"},{"kind":"number","nativeSrc":"2645:2:21","nodeType":"YulLiteral","src":"2645:2:21","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2581:58:21","nodeType":"YulIdentifier","src":"2581:58:21"},"nativeSrc":"2581:67:21","nodeType":"YulFunctionCall","src":"2581:67:21"},"variableNames":[{"name":"pos","nativeSrc":"2574:3:21","nodeType":"YulIdentifier","src":"2574:3:21"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"2746:3:21","nodeType":"YulIdentifier","src":"2746:3:21"}],"functionName":{"name":"store_literal_in_memory_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a","nativeSrc":"2657:88:21","nodeType":"YulIdentifier","src":"2657:88:21"},"nativeSrc":"2657:93:21","nodeType":"YulFunctionCall","src":"2657:93:21"},"nativeSrc":"2657:93:21","nodeType":"YulExpressionStatement","src":"2657:93:21"},{"nativeSrc":"2759:19:21","nodeType":"YulAssignment","src":"2759:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"2770:3:21","nodeType":"YulIdentifier","src":"2770:3:21"},{"kind":"number","nativeSrc":"2775:2:21","nodeType":"YulLiteral","src":"2775:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2766:3:21","nodeType":"YulIdentifier","src":"2766:3:21"},"nativeSrc":"2766:12:21","nodeType":"YulFunctionCall","src":"2766:12:21"},"variableNames":[{"name":"end","nativeSrc":"2759:3:21","nodeType":"YulIdentifier","src":"2759:3:21"}]}]},"name":"abi_encode_t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a_to_t_string_memory_ptr_fromStack","nativeSrc":"2418:366:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2552:3:21","nodeType":"YulTypedName","src":"2552:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2560:3:21","nodeType":"YulTypedName","src":"2560:3:21","type":""}],"src":"2418:366:21"},{"body":{"nativeSrc":"2961:248:21","nodeType":"YulBlock","src":"2961:248:21","statements":[{"nativeSrc":"2971:26:21","nodeType":"YulAssignment","src":"2971:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2983:9:21","nodeType":"YulIdentifier","src":"2983:9:21"},{"kind":"number","nativeSrc":"2994:2:21","nodeType":"YulLiteral","src":"2994:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2979:3:21","nodeType":"YulIdentifier","src":"2979:3:21"},"nativeSrc":"2979:18:21","nodeType":"YulFunctionCall","src":"2979:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2971:4:21","nodeType":"YulIdentifier","src":"2971:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3018:9:21","nodeType":"YulIdentifier","src":"3018:9:21"},{"kind":"number","nativeSrc":"3029:1:21","nodeType":"YulLiteral","src":"3029:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3014:3:21","nodeType":"YulIdentifier","src":"3014:3:21"},"nativeSrc":"3014:17:21","nodeType":"YulFunctionCall","src":"3014:17:21"},{"arguments":[{"name":"tail","nativeSrc":"3037:4:21","nodeType":"YulIdentifier","src":"3037:4:21"},{"name":"headStart","nativeSrc":"3043:9:21","nodeType":"YulIdentifier","src":"3043:9:21"}],"functionName":{"name":"sub","nativeSrc":"3033:3:21","nodeType":"YulIdentifier","src":"3033:3:21"},"nativeSrc":"3033:20:21","nodeType":"YulFunctionCall","src":"3033:20:21"}],"functionName":{"name":"mstore","nativeSrc":"3007:6:21","nodeType":"YulIdentifier","src":"3007:6:21"},"nativeSrc":"3007:47:21","nodeType":"YulFunctionCall","src":"3007:47:21"},"nativeSrc":"3007:47:21","nodeType":"YulExpressionStatement","src":"3007:47:21"},{"nativeSrc":"3063:139:21","nodeType":"YulAssignment","src":"3063:139:21","value":{"arguments":[{"name":"tail","nativeSrc":"3197:4:21","nodeType":"YulIdentifier","src":"3197:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a_to_t_string_memory_ptr_fromStack","nativeSrc":"3071:124:21","nodeType":"YulIdentifier","src":"3071:124:21"},"nativeSrc":"3071:131:21","nodeType":"YulFunctionCall","src":"3071:131:21"},"variableNames":[{"name":"tail","nativeSrc":"3063:4:21","nodeType":"YulIdentifier","src":"3063:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2790:419:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2941:9:21","nodeType":"YulTypedName","src":"2941:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2956:4:21","nodeType":"YulTypedName","src":"2956:4:21","type":""}],"src":"2790:419:21"},{"body":{"nativeSrc":"3341:206:21","nodeType":"YulBlock","src":"3341:206:21","statements":[{"nativeSrc":"3351:26:21","nodeType":"YulAssignment","src":"3351:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3363:9:21","nodeType":"YulIdentifier","src":"3363:9:21"},{"kind":"number","nativeSrc":"3374:2:21","nodeType":"YulLiteral","src":"3374:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3359:3:21","nodeType":"YulIdentifier","src":"3359:3:21"},"nativeSrc":"3359:18:21","nodeType":"YulFunctionCall","src":"3359:18:21"},"variableNames":[{"name":"tail","nativeSrc":"3351:4:21","nodeType":"YulIdentifier","src":"3351:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3431:6:21","nodeType":"YulIdentifier","src":"3431:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"3444:9:21","nodeType":"YulIdentifier","src":"3444:9:21"},{"kind":"number","nativeSrc":"3455:1:21","nodeType":"YulLiteral","src":"3455:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3440:3:21","nodeType":"YulIdentifier","src":"3440:3:21"},"nativeSrc":"3440:17:21","nodeType":"YulFunctionCall","src":"3440:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3387:43:21","nodeType":"YulIdentifier","src":"3387:43:21"},"nativeSrc":"3387:71:21","nodeType":"YulFunctionCall","src":"3387:71:21"},"nativeSrc":"3387:71:21","nodeType":"YulExpressionStatement","src":"3387:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"3512:6:21","nodeType":"YulIdentifier","src":"3512:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"3525:9:21","nodeType":"YulIdentifier","src":"3525:9:21"},{"kind":"number","nativeSrc":"3536:2:21","nodeType":"YulLiteral","src":"3536:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3521:3:21","nodeType":"YulIdentifier","src":"3521:3:21"},"nativeSrc":"3521:18:21","nodeType":"YulFunctionCall","src":"3521:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3468:43:21","nodeType":"YulIdentifier","src":"3468:43:21"},"nativeSrc":"3468:72:21","nodeType":"YulFunctionCall","src":"3468:72:21"},"nativeSrc":"3468:72:21","nodeType":"YulExpressionStatement","src":"3468:72:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"3215:332:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3305:9:21","nodeType":"YulTypedName","src":"3305:9:21","type":""},{"name":"value1","nativeSrc":"3317:6:21","nodeType":"YulTypedName","src":"3317:6:21","type":""},{"name":"value0","nativeSrc":"3325:6:21","nodeType":"YulTypedName","src":"3325:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3336:4:21","nodeType":"YulTypedName","src":"3336:4:21","type":""}],"src":"3215:332:21"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can't withdraw yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a(memPtr) {\n\n        mstore(add(memPtr, 0), \"You aren't the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063251c1aa3146100465780633ccfd60b146100645780638da5cb5b1461006e575b600080fd5b61004e61008c565b60405161005b919061024a565b60405180910390f35b61006c610092565b005b61007661020b565b60405161008391906102a6565b60405180910390f35b60005481565b6000544210156100d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ce9061031e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610167576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015e9061038a565b60405180910390fd5b7fbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b9347426040516101989291906103aa565b60405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610208573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b61024481610231565b82525050565b600060208201905061025f600083018461023b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061029082610265565b9050919050565b6102a081610285565b82525050565b60006020820190506102bb6000830184610297565b92915050565b600082825260208201905092915050565b7f596f752063616e27742077697468647261772079657400000000000000000000600082015250565b60006103086016836102c1565b9150610313826102d2565b602082019050919050565b60006020820190508181036000830152610337816102fb565b9050919050565b7f596f75206172656e277420746865206f776e6572000000000000000000000000600082015250565b60006103746014836102c1565b915061037f8261033e565b602082019050919050565b600060208201905081810360008301526103a381610367565b9050919050565b60006040820190506103bf600083018561023b565b6103cc602083018461023b565b939250505056fea26469706673582212202d2006ef26cbefcc4deab66c32f5ff5efb638f080c7490b6633879942caf232764736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x251C1AA3 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x92 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP LT ISZERO PUSH2 0xD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE SWAP1 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x167 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E SWAP1 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xBF2ED60BD5B5965D685680C01195C9514E4382E28E3A5A2D2D5244BF59411B93 SELFBALANCE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x198 SWAP3 SWAP2 SWAP1 PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x208 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x244 DUP2 PUSH2 0x231 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x290 DUP3 PUSH2 0x265 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A0 DUP2 PUSH2 0x285 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x297 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E27742077697468647261772079657400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH1 0x16 DUP4 PUSH2 0x2C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x313 DUP3 PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x337 DUP2 PUSH2 0x2FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F75206172656E277420746865206F776E6572000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x374 PUSH1 0x14 DUP4 PUSH2 0x2C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x37F DUP3 PUSH2 0x33E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A3 DUP2 PUSH2 0x367 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3BF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x23B JUMP JUMPDEST PUSH2 0x3CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D KECCAK256 MOD 0xEF 0x26 0xCB 0xEF 0xCC 0x4D 0xEA 0xB6 PUSH13 0x32F5FF5EFB638F080C7490B663 CODESIZE PUSH26 0x942CAF232764736F6C634300081C003300000000000000000000 ","sourceMap":"141:866:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;161:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;515:490;;;:::i;:::-;;189:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;161:22;;;;:::o;515:490::-;785:10;;766:15;:29;;758:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;854:5;;;;;;;;;;;840:19;;:10;:19;;;832:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;900:50;911:21;934:15;900:50;;;;;;;:::i;:::-;;;;;;;;961:5;;;;;;;;;;;:14;;:37;976:21;961:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;515:490::o;189:28::-;;;;;;;;;;;;;:::o;7:77:21:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:104::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;574:104;;;:::o;684:142::-;787:32;813:5;787:32;:::i;:::-;782:3;775:45;684:142;;:::o;832:254::-;941:4;979:2;968:9;964:18;956:26;;992:87;1076:1;1065:9;1061:17;1052:6;992:87;:::i;:::-;832:254;;;;:::o;1092:169::-;1176:11;1210:6;1205:3;1198:19;1250:4;1245:3;1241:14;1226:29;;1092:169;;;;:::o;1267:172::-;1407:24;1403:1;1395:6;1391:14;1384:48;1267:172;:::o;1445:366::-;1587:3;1608:67;1672:2;1667:3;1608:67;:::i;:::-;1601:74;;1684:93;1773:3;1684:93;:::i;:::-;1802:2;1797:3;1793:12;1786:19;;1445:366;;;:::o;1817:419::-;1983:4;2021:2;2010:9;2006:18;1998:26;;2070:9;2064:4;2060:20;2056:1;2045:9;2041:17;2034:47;2098:131;2224:4;2098:131;:::i;:::-;2090:139;;1817:419;;;:::o;2242:170::-;2382:22;2378:1;2370:6;2366:14;2359:46;2242:170;:::o;2418:366::-;2560:3;2581:67;2645:2;2640:3;2581:67;:::i;:::-;2574:74;;2657:93;2746:3;2657:93;:::i;:::-;2775:2;2770:3;2766:12;2759:19;;2418:366;;;:::o;2790:419::-;2956:4;2994:2;2983:9;2979:18;2971:26;;3043:9;3037:4;3033:20;3029:1;3018:9;3014:17;3007:47;3071:131;3197:4;3071:131;:::i;:::-;3063:139;;2790:419;;;:::o;3215:332::-;3336:4;3374:2;3363:9;3359:18;3351:26;;3387:71;3455:1;3444:9;3440:17;3431:6;3387:71;:::i;:::-;3468:72;3536:2;3525:9;3521:18;3512:6;3468:72;:::i;:::-;3215:332;;;;;:::o"},"methodIdentifiers":{"owner()":"8da5cb5b","unlockTime()":"251c1aa3","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lock.sol\":\"Lock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Lock.sol\":{\"keccak256\":\"0x3c36b5a83d533c3f095ac358675e9356c1761cd7f1e955ae23200203060419a9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://864fae3ab9a941599f30667d484d94a34a0779f6e606110d2acdcf51c56c47e4\",\"dweb:/ipfs/QmXYat9EQBuwXsp4EcczzGTfML2ugVaYqiviiGoiZ9cgXr\"]}},\"version\":1}"}}}}}